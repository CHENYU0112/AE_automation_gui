from __future__ import annotations

from pverify.drivers.Fgen.Ag3352x.Ag3352xSequencingExt import Ag3352xSequencingExt, PlayCtrl, SegmentCfg, SigGen


def lv124_e11(
    u_b=11.0,
    u_t=4.5,
    u_s=4.5,
    u_a=6.5,
    u_r=2.0,
    t4=0.0,
    t5=0.0,
    t6=0.019,
    t7=0.05,
    t8=10.0,
    f=2.0,
    cycles=4,
    t_pause=2.0,
):
    cfg = []
    samplerate = 1000

    cfg.append(
        SegmentCfg(
            waveform=SigGen.create_dc(u_b, t_pause / 2.0, samplerate),
            playcontrol=PlayCtrl.Once,
        )
    )
    if t4 > 0:
        cfg.append(
            SegmentCfg(
                waveform=SigGen.create_dc(u_t, t4, samplerate),
                playcontrol=PlayCtrl.Once,
            )
        )

    cfg.append(
        SegmentCfg(
            waveform=SigGen.create_dc(u_s, t6, samplerate),
            playcontrol=PlayCtrl.Once,
        )
    )
    cfg.append(
        SegmentCfg(
            waveform=SigGen.create_ramp(u_s, u_a, t7, samplerate),
            playcontrol=PlayCtrl.Once,
        )
    )
    if f > 0 and u_r > 0:
        # t8 = 10.0, sine f. 2 Hz => 20 x sine
        cfg.append(
            SegmentCfg(
                waveform=SigGen.create_sine(u_r / 2, u_a + u_r / 2, 270, 1.0 / f, samplerate),
                playcontrol=PlayCtrl.Repeat(int(t8 * f)),
            )
        )
    else:
        cfg.append(
            SegmentCfg(
                waveform=SigGen.create_dc(u_a, t8, samplerate),
                playcontrol=PlayCtrl.Once,
            )
        )

    cfg.append(
        SegmentCfg(
            waveform=SigGen.create_ramp(u_a, u_b, 0.1, samplerate),
            playcontrol=PlayCtrl.Once,
        )
    )

    cfg.append(
        SegmentCfg(
            waveform=SigGen.create_dc(u_b, t_pause / 2.0, samplerate),
            playcontrol=PlayCtrl.Once,
        )
    )

    for _i in range(1, cycles):
        cfg.extend(cfg)

    return cfg


def lv124_e11_cold_normal():
    return lv124_e11()


def lv124_e11_cold_severe():
    return lv124_e11(11.0, 3.2, 5.0, 6.0, 2.0, 0.019, 0.001, 0.329, 0.05, 10.0, 2.0, 4)


def lv124_e11_warm():
    return lv124_e11(11.0, 7.0, 8.0, 9.0, 0, 0.015, 0.07, 0.240, 0.07, 0.6, 0, 4, 5.0)


if __name__ == "__main__":
    from time import sleep

    f = Ag3352xSequencingExt()
    # Waveform Generator from MTB:
    # f.Initialize("USB0::0x0957::0x2C07::MY58000517::INSTR", 1, 0, "simulate=False")
    # Waveform Generator from desk:
    f.Initialize("USB0::0x0957::0x2C07::MY52815199::INSTR", 1, 0, "simulate=False")
    f.ext_output_off()
    f.ConfigureTriggerSource(f.CH1, f.C.AG3352X_VAL_TRIGGER_SOURCE_BUS)

    dc = SigGen.create_dc(1, 0.10, 1000)  # 10Vdc with amplifier factor 10
    f.ext_configure_sequence(
        segment_cfg=[SegmentCfg(dc, PlayCtrl.RepeatTillTrig), *lv124_e11_warm(), SegmentCfg(dc, PlayCtrl.RepeatInf)],
        max_offset=5,
        scale=0.1,
    )

    f.ChannelTriggerAbort(f.CH1)  # Has to be called before sending a new SW trigger
    f.InitiateGeneration()

    f.SendSoftwareTrigger()  # LV124 curve will start playing after first trigger
    sleep(10)
    f.AbortGeneration()
    f.ext_output_off()

    f.Close()
