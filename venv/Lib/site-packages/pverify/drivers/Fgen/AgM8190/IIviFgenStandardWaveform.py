from __future__ import annotations

from .AgM8190 import *


class IIviFgenStandardWaveform:
    def __init__(self, root):
        self.root = root
        """:type : pverify.drivers.Fgen.AgM8190.IIviFgen.IIviFgen"""

    def Configure(self, ChannelName, Waveform, Amplitude, DCOffset, Frequency, StartPhase):
        """
        Configures the function generator attributes that affect standard waveform
        generation. When the Waveform parameter is set to Waveform DC, this function
        ignores the Amplitude, Frequency, and Start Phase parameters.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str
        :param Waveform: Specifies the standard waveform. This value sets the Waveform property
        :type Waveform: IviFgenWaveformEnum
        :param Amplitude: Specifies the waveform amplitude. This value sets the Amplitude property
        :type Amplitude: float
        :param DCOffset: Specifies the waveform's DC offset. This value sets the DC Offset attribute.
        :type DCOffset: float
        :param Frequency: Specifies the waveform frequency. This value sets the Frequency attribute.
        :type Frequency: float
        :param StartPhase: Specifies the waveform start phase. This value sets the Start Phase attribute.
        :type StartPhase: float
        """
        self.root.dllwrap.ConfigureStandardWaveform(ChannelName, Waveform, Amplitude, DCOffset, Frequency, StartPhase)

    def get_DutyCycleHigh(self, ChannelName):
        """
        Retrieves a channel's duty cycle.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str

        :return: The duty cycle for a square waveform. This attribute affects function generator
            behavior only when the Waveform attribute is set to Waveform Square. The value
            is expressed as a percentage.
        :rtype: float
        """
        return self.root.dllwrap.GetAttributeViReal64(ChannelName, IVI_CLASS_PUBLIC_ATTR_BASE + 106)

    def set_DutyCycleHigh(self, ChannelName, pVal):
        """
        Sets a channel's duty cycle.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str
        :param pVal: The duty cycle for a square waveform. This attribute affects function generator
            behavior only when the Waveform attribute is set to Waveform Square. The value
            is expressed as a percentage.
        :type pVal: float
        """
        self.root.dllwrap.SetAttributeViReal64(ChannelName, IVI_CLASS_PUBLIC_ATTR_BASE + 106, pVal)

    def get_Amplitude(self, ChannelName):
        """
        Retrieves a channel's amplitude.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str

        :return: The amplitude of the standard waveform output by the function generator. When
            the Waveform attribute is set to Waveform DC, this attribute does not affect
            signal output. The units are volts.
        :rtype: float
        """
        return self.root.dllwrap.GetAttributeViReal64(ChannelName, IVI_CLASS_PUBLIC_ATTR_BASE + 102)

    def set_Amplitude(self, ChannelName, pVal):
        """
        Sets a channel's amplitude.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str
        :param pVal: The amplitude of the standard waveform output by the function generator. When
            the Waveform attribute is set to Waveform DC, this attribute does not affect
            signal output. The units are volts.
        :type pVal: float
        """
        self.root.dllwrap.SetAttributeViReal64(ChannelName, IVI_CLASS_PUBLIC_ATTR_BASE + 102, pVal)

    def get_DCOffset(self, ChannelName):
        """
        Retrieves a channel's DC offset.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str

        :return: The DC offset of the standard waveform output by the function generator. If the
            Waveform attribute is set to Waveform DC, this attribute specifies the DC level
            the function generator produces. The units are volts.
        :rtype: float
        """
        return self.root.dllwrap.GetAttributeViReal64(ChannelName, IVI_CLASS_PUBLIC_ATTR_BASE + 103)

    def set_DCOffset(self, ChannelName, pVal):
        """
        Sets a channel's DC offset.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str
        :param pVal: The DC offset of the standard waveform output by the function generator. If the
            Waveform attribute is set to Waveform DC, this attribute specifies the DC level
            the function generator produces. The units are volts.
        :type pVal: float
        """
        self.root.dllwrap.SetAttributeViReal64(ChannelName, IVI_CLASS_PUBLIC_ATTR_BASE + 103, pVal)

    def get_Frequency(self, ChannelName):
        """
        Retrieves a channel's frequency.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str

        :return: The frequency of the standard waveform output by the function generator. When
            the Waveform attribute is set to Waveform DC, this attribute does not affect
            signal output. The units are Hertz.
        :rtype: float
        """
        return self.root.dllwrap.GetAttributeViReal64(ChannelName, IVI_CLASS_PUBLIC_ATTR_BASE + 104)

    def set_Frequency(self, ChannelName, pVal):
        """
        Sets a channel's frequency.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str
        :param pVal: The frequency of the standard waveform output by the function generator. When
            the Waveform attribute is set to Waveform DC, this attribute does not affect
            signal output. The units are Hertz.
        :type pVal: float
        """
        self.root.dllwrap.SetAttributeViReal64(ChannelName, IVI_CLASS_PUBLIC_ATTR_BASE + 104, pVal)

    def get_StartPhase(self, ChannelName):
        """
        Retrieves a channel's start phase.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str

        :return: The start phase of the standard waveform output by the function generator. When
            the Waveform attribute is set to Waveform DC, this attribute does not affect
            signal output. The units are degrees.
        :rtype: float
        """
        return self.root.dllwrap.GetAttributeViReal64(ChannelName, IVI_CLASS_PUBLIC_ATTR_BASE + 105)

    def set_StartPhase(self, ChannelName, pVal):
        """
        Sets a channel's start phase.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str
        :param pVal: The start phase of the standard waveform output by the function generator. When
            the Waveform attribute is set to Waveform DC, this attribute does not affect
            signal output. The units are degrees.
        :type pVal: float
        """
        self.root.dllwrap.SetAttributeViReal64(ChannelName, IVI_CLASS_PUBLIC_ATTR_BASE + 105, pVal)

    def get_Waveform(self, ChannelName):
        """
        Retrieves a channel's waveform.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str

        :return: The standard waveform output by the function generator.
        :rtype: int
        """
        return self.root.dllwrap.GetAttributeViInt32(ChannelName, IVI_CLASS_PUBLIC_ATTR_BASE + 101)

    def set_Waveform(self, ChannelName, pVal):
        """
        Sets a channel's waveform.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str
        :param pVal: The standard waveform output by the function generator.
        :type pVal: IviFgenWaveformEnum
        """
        self.root.dllwrap.SetAttributeViInt32(ChannelName, IVI_CLASS_PUBLIC_ATTR_BASE + 101, pVal)
