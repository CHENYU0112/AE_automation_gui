# -------------------------------------------------------------------------------
# Name           :
# Description    :
#
# Revision       : $Rev$
# Date           : $Date$
# Last change by : $Author$
# -------------------------------------------------------------------------------
from __future__ import annotations

from pverify.drivers.Scope.RedPitaya import IIviScopeBase


class IIviScopeTriggerGlitch(IIviScopeBase.IIviScopeBase):
    def __init__(self, interface):
        IIviScopeBase.IIviScopeBase.__init__(self, interface)

    # Read-write dependent properties
    @property
    def condition(self):
        """
        The condition of a pulse that triggers the oscilloscope. The condition
        is either inside or outside of the high and low thresholds.

        :rtype: IviScopeGlitchConditionEnum
        """
        raise NotImplementedError

    @condition.setter
    def condition(self, value):
        """
        The condition of a pulse that triggers the oscilloscope. The condition
        is either inside or outside of the high and low thresholds.

        :type value: IviScopeGlitchConditionEnum
        """
        raise NotImplementedError

    @property
    def polarity(self):
        """
        The polarity of the pulse that triggers the oscilloscope.

        :rtype: IviScopeGlitchPolarityEnum
        """
        raise NotImplementedError

    @polarity.setter
    def polarity(self, value):
        """
        The polarity of the pulse that triggers the oscilloscope.

        :type value: IviScopeGlitchPolarityEnum
        """
        raise NotImplementedError

    @property
    def Width(self):
        """
        The glitch width. The units are seconds.
        """
        raise NotImplementedError

    @Width.setter
    def Width(self, value):
        """
        The glitch width. The units are seconds.
        """
        raise NotImplementedError

    # Methods
    def Configure(self, Source, Level, Width, Polarity, Condition):
        """
        Configure the glitch trigger Source, Level, Width, Polarity, and
        Condition. A glitch trigger occurs when the edge of a pulse that
        matches the Width and Polarity crosses the specified Level (in Volts).

        :param Source:
            Specifies the trigger source. This value sets the Trigger Source
            property.

        :param Level:
            Specifies the trigger level. This value sets the Trigger Level
            property.

        :param Width:
            Specifies the glitch triggering glitch width in seconds. This value
            sets the Glitch Width property.

        :param Polarity:
            Specifies the glitch polarity. This value sets the Glitch Polarity
            property.

        :param Condition:
            Specifies the glitch condition. This value sets the Glitch Condition
            property.
        """
        raise NotImplementedError
