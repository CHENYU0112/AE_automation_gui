from __future__ import annotations

import base64
import tempfile
import xml.etree.ElementTree as ET
from pathlib import Path
from xml.dom.minidom import parseString

import numpy as np
import pandas as pd


def xmlDIG2Dataframe(xmlfile) -> pd.DataFrame:
    """
    Parses an xmlDIG file created by LeCroy scopes to store digital trace data.

    :param xmlfile: The xml file to parse.
    :return: A Pandas Dataframe containing the lines as columns and the time as index.
             The dataframe also has an additional attribute **header**, which is the pretty printed LeCroyXStreamDSOdata/Header xml section.
    """
    tree = ET.parse(xmlfile)
    root = tree.getroot()
    header = root.find("Header")

    header_desc = parseString(ET.tostring(header).decode("utf-8")).toprettyxml()
    line_names = [n.text for n in root.findall("Header/ILecDigitalResult/LineInfo/Line/Name")]

    stepsize = float(root.find(".//HorPerStep").text)
    float(root.find(".//HorFrameStart").text)
    samples = int(header.find(".//NumSamples").text)

    lines = int(header.find(".//NumLines").text)
    bindata = root.find(".//BinaryData").text

    df = pd.DataFrame(
        data=np.frombuffer(base64.b64decode(bindata), np.uint8).reshape((lines, samples)).transpose(),
        index=[i * stepsize for i in range(samples)],
        columns=line_names,
    )
    df.header = header_desc
    return df


def xmlDIG2Dataframe_remote(ip_address: str, remotePath: str, remoteDevice="HDD") -> pd.DataFrame:
    """
    Transfers an xmlDIG file from the LeCroy scope and return the digital data as Pandas Dataframe

    :param ip_address:
    :param remotePath:
    :param remoteDevice:
    :return:
    """
    from .lcscope_activedso import LeCroyScopeActiveDSO

    dso = LeCroyScopeActiveDSO()
    dso.ConnectIP(ip_address)
    with tempfile.TemporaryDirectory() as tdir:
        localFile = Path(tdir) / "digdata.xml"
        dso.TransferFileToPc(remotePath, localFile, remoteDevice)
        return xmlDIG2Dataframe(localFile)
