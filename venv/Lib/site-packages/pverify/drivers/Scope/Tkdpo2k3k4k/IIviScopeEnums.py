from __future__ import annotations


class IviScopeInterpolationEnum:
    IviScopeInterpolationNone = 1  # The oscilloscope does not interpolate points in the waveform. Instead, the driver sets every element in the waveform record for which the oscilloscope cannot receive a value to an IEEE-defined NaN (Not-a-Number) value. Use the Is Waveform Element Invalid method to determine if the waveform record element is invalid.
    IviScopeInterpolationSineX = 2  # The oscilloscope uses a sin(x)/x calculation to interpolate a value when it cannot resolve a voltage in the waveform record.
    IviScopeInterpolationLinear = 3  # The oscilloscope uses a linear approximation to interpolate a value when it cannot resolve a voltage in the waveform record.


class IviScopeSampleModeEnum:
    IviScopeSampleModeRealTime = 0  # Indicates that the oscilloscope is using real-time sampling.
    IviScopeSampleModeEquivalentTime = 1  # Indicates that the oscilloscope is using equivalent time sampling.


class IviScopeAcquisitionTypeEnum:
    IviScopeAcquisitionTypeNormal = 0  # Configures the oscilloscope to acquire one sample for each point in the waveform record. The oscilloscope uses real-time or equivalent time sampling.
    IviScopeAcquisitionTypePeakDetect = 1  # Sets the oscilloscope to the peak-detect acquisition mode. The oscilloscope oversamples the input signal and keeps the minimum and maximum values that correspond to each position in the waveform record. The oscilloscope uses only real-time sampling.
    IviScopeAcquisitionTypeHiRes = 2  # Configures the oscilloscope to oversample the input signal. The oscilloscope calculates the average value that corresponds to each position in the waveform record. The oscilloscope uses only real-time sampling.
    IviScopeAcquisitionTypeEnvelope = 3  # Sets the oscilloscope to the envelope acquisition mode. The oscilloscope acquires multiple waveforms and keeps the minimum and maximum voltages it acquires for each point in the waveform record. The end-user specifies the number of waveforms the oscilloscope acquires with the Number of Envelopes property. The oscilloscope can use real-time or equivalent-time sampling.
    IviScopeAcquisitionTypeAverage = 4  # Configures the oscilloscope to acquire multiple waveforms and calculate the average value for each point in the waveform record. The end-user specifies the number of waveforms to acquire with the Number of Averages property. The oscilloscope uses real-time or equivalent time sampling.


class IviScopeVerticalCouplingEnum:
    IviScopeVerticalCouplingAC = 0  # The oscilloscope AC couples the input signal.
    IviScopeVerticalCouplingDC = 1  # The oscilloscope DC couples the input signal.
    IviScopeVerticalCouplingGnd = 2  # The oscilloscope couples the channel to the ground.


class IviScopeMeasurementEnum:
    IviScopeMeasurementRiseTime = 0  # The length of time for a rising edge of the signal to rise from the low reference level to the high reference level. The units are seconds.
    IviScopeMeasurementFallTime = 1  # The length of time for a falling edge of the signal to fall from the high reference level to the low reference level. The units are seconds.
    IviScopeMeasurementFrequency = 2  # The frequency of one complete cycle in the waveform. The units are Hertz.
    IviScopeMeasurementPeriod = 3  # The length of time of one complete cycle in the waveform. The units are seconds.
    IviScopeMeasurementVoltageRMS = 4  # The true Root Mean Square voltage of the entire waveform. The units are Volts.
    IviScopeMeasurementVoltagePeakToPeak = (
        5  # The absolute difference between the Voltage Max and the Voltage Min. The units are Volts.
    )
    IviScopeMeasurementVoltageMax = 6  # The maximum amplitude found in the entire waveform. The units are Volts.
    IviScopeMeasurementVoltageMin = 7  # The minimum amplitude found in the entire waveform. The units are Volts.
    IviScopeMeasurementVoltageHigh = 8  # The voltage that corresponds to 100% when using the reference levels. The oscilloscope calculates this value using either the min/max or histogram methods. The min/max method uses the maximum value found. The histogram method uses a common value found above the middle of the waveform. The units are Volts.
    IviScopeMeasurementVoltageLow = 9  # The voltage that corresponds to 0% when using the reference levels. The oscilloscope calculates this value using either the min/max or histogram methods. The min/max method uses the minimum value found. The histogram method uses a common value found below the middle of the waveform. The units are Volts.
    IviScopeMeasurementVoltageAverage = (
        10  # The arithmetic average in volts measured over the entire waveform. The units are Volts.
    )
    IviScopeMeasurementWidthNeg = 11  # The length of time between the mid reference level points of a negative pulse in the waveform. The units are seconds.
    IviScopeMeasurementWidthPos = 12  # The length of time between the mid reference level points of a positive pulse in the waveform. The units are seconds.
    IviScopeMeasurementDutyCycleNeg = 13  # The ratio of the Width Neg to the Period of an integer number of cycles in the waveform expressed as a percentage.
    IviScopeMeasurementDutyCyclePos = 14  # The ratio of the Width Pos width to the Period of an integer number of cycles in the waveform expressed as a percentage.
    IviScopeMeasurementAmplitude = 15  # The Voltage High less the Voltage Low in Volts over the entire waveform.
    IviScopeMeasurementVoltageCycleRMS = (
        16  # The true Root Mean Square voltage over an integer number of cycles in the waveform. The units are Volts.
    )
    IviScopeMeasurementVoltageCycleAverage = (
        17  # The arithmetic average in Volts over an integer number of cycles in the waveform. The units are Volts.
    )
    IviScopeMeasurementOverShoot = 18  # The relative waveform distortion that follows an edge transition.
    IviScopeMeasurementPreshoot = 19  # The relative waveform distortion that precedes an edge transition.


class IviScopeAcquisitionStatusEnum:
    IviScopeAcqComplete = 1  # The oscilloscope has completed the acquisition.
    IviScopeAcqInProgress = 0  # The oscilloscope is still acquiring data.
    IviScopeAcqStatusUnknown = -1  # The oscilloscope cannot determine the status of the acquisition.


class IviScopeTriggerTypeEnum:
    IviScopeTriggerEdge = 1  # Configures the oscilloscope for edge triggering. An edge trigger occurs when the trigger signal specified with the Trigger Source property passes the voltage threshold specified with the Trigger Level property and has the slope specified with the Trigger Slope property.
    IviScopeTriggerWidth = 2  # Configures the oscilloscope for width triggering. Use the IviScopeWidthTrigger extension properties and methods to configure the trigger.
    IviScopeTriggerRunt = 3  # Configures the oscilloscope for runt triggering. Use the IviScopeRuntTrigger extension properties and methods to configure the trigger.
    IviScopeTriggerGlitch = 4  # Configures the oscilloscope for glitch triggering. Use the IviScopeGlitchTrigger extension properties and methods to configure the trigger.
    IviScopeTriggerTV = 5  # Configures the oscilloscope for triggering on TV signals. Use the IviScopeTVTrigger extension properties and methods to configure the trigger.
    IviScopeTriggerImmediate = 6  # Configures the oscilloscope for immediate triggering. The oscilloscope does not wait for trigger of any kind upon initialization.
    IviScopeTriggerACLine = 7  # Configures the oscilloscope for AC Line triggering. Use the IviScopeACLineTrigger extension properties and methods to configure the trigger.


class IviScopeTriggerCouplingEnum:
    IviScopeTriggerCouplingAC = 0  # The oscilloscope AC couples the trigger signal.
    IviScopeTriggerCouplingDC = 1  # The oscilloscope DC couples the trigger signal.
    IviScopeTriggerCouplingHFReject = 3  # The oscilloscope filters out the high frequencies from the trigger signal.
    IviScopeTriggerCouplingLFReject = 4  # The oscilloscope filters out the low frequencies from the trigger signal.
    IviScopeTriggerCouplingNoiseReject = 5  # The oscilloscope filters out the noise from the trigger signal.


class IviScopeTriggerModifierEnum:
    IviScopeTriggerModifierNone = 1  # The oscilloscope waits until the trigger the end-user specifies occurs.
    IviScopeTriggerModifierAuto = 2  # The oscilloscope automatically triggers if the configured trigger does not occur within the oscilloscope's timeout period.
    IviScopeTriggerModifierAutoLevel = (
        3  # The oscilloscope adjusts the trigger level if the trigger the end-user specifies does not occur.
    )


class IviScopeACLineSlopeEnum:
    IviScopeACLinePositive = (
        1  # Configures the oscilloscope to trigger on positive slope zero crossings of the network supply voltage.
    )
    IviScopeACLineNegative = (
        2  # Configures the oscilloscope to trigger on negative slope zero crossings of the network supply voltage.
    )
    IviScopeACLineEither = 3  # Configures the oscilloscope to trigger on either positive or negative slope zero crossings of the network supply voltage.


class IviScopeTriggerSlopeEnum:
    IviScopeTriggerSlopePositive = (
        1  # A positive (rising) edge passing through the trigger level triggers the oscilloscope.
    )
    IviScopeTriggerSlopeNegative = (
        0  # A negative (falling) edge passing through the trigger level triggers the oscilloscope.
    )


class IviScopeGlitchPolarityEnum:
    IviScopeGlitchPolarityPositive = 1  # The oscilloscope triggers on a positive glitch.
    IviScopeGlitchPolarityNegative = 2  # The oscilloscope triggers on a negative glitch.
    IviScopeGlitchPolarityEither = 3  # The oscilloscope triggers on either a positive or negative glitch.


class IviScopeGlitchConditionEnum:
    IviScopeGlitchConditionLessThan = 1  # The oscilloscope triggers when the pulse width is less than the value you specify with the Glitch Width property.
    IviScopeGlitchConditionGreaterThan = 2  # The oscilloscope triggers when the pulse width is greater than the value you specify with the Glitch Width property.


class IviScopeRuntPolarityEnum:
    IviScopeRuntPolarityPositive = 1  # The oscilloscope triggers on a positive runt. A positive runt occurs when a rising edge crosses the low runt threshold and does not cross the high runt threshold before re-crossing the low runt threshold.
    IviScopeRuntPolarityNegative = 2  # The oscilloscope triggers on a negative runt. A negative runt occurs when a falling edge crosses the high runt threshold and does not cross the low runt threshold before re-crossing the high runt threshold.
    IviScopeRuntPolarityEither = 3  # The oscilloscope triggers on either a positive or negative runt.


class IviScopeTVSignalFormatEnum:
    IviScopeTVSignalFormatNTSC = 1  # Configures the oscilloscope to trigger on the NTSC signal format.
    IviScopeTVSignalFormatPAL = 2  # Configures the oscilloscope to trigger on the PAL signal format
    IviScopeTVSignalFormatSECAM = 3  # Configures the oscilloscope to trigger on the SECAM signal format


class IviScopeTVTriggerEventEnum:
    IviScopeTVTriggerEventField1 = 1  # Sets the oscilloscope to trigger on field 1 of the video signal.
    IviScopeTVTriggerEventField2 = 2  # Sets the oscilloscope to trigger on field 2 of the video signal.
    IviScopeTVTriggerEventAnyField = 3  # Sets the oscilloscope to trigger on any field.
    IviScopeTVTriggerEventAnyLine = 4  # Sets the oscilloscope to trigger on any line.
    IviScopeTVTriggerEventLineNumber = 5  # Sets the oscilloscope to trigger on a specific line number you specify with the TV Trigger Line Number property.


class IviScopeTVTriggerPolarityEnum:
    IviScopeTVTriggerPolarityPositive = 1  # Configures the oscilloscope to trigger on a positive video sync pulse.
    IviScopeTVTriggerPolarityNegative = 2  # Configures the oscilloscope to trigger on a negative video sync pulse.


class IviScopeWidthPolarityEnum:
    IviScopeWidthPolarityPositive = 1  # Configures the oscilloscope to trigger on positive pulses that have a width that meets the condition the user specifies with the Width Condition property.
    IviScopeWidthPolarityNegative = 2  # Configures the oscilloscope to trigger on negative pulses that have a width that meets the condition the user specifies with the Width Condition property.
    IviScopeWidthPolarityEither = 3  # Configures the oscilloscope to trigger on either positive or negative pulses that have a width that meets the condition the user specifies with the Width Condition property.


class IviScopeWidthConditionEnum:
    IviScopeWidthConditionWithin = 1  # Configures the oscilloscope to trigger on pulses that have a width that is less than the high threshold and greater than the low threshold. The end-user specifies the high and low thresholds with the Width High Threshold and Width Low Threshold properties.
    IviScopeWidthConditionOutside = 2  # Configures the oscilloscope to trigger on pulses that have a width that is either greater than the high threshold or less than a low threshold. The end-user specifies the high and low thresholds with the Width High Threshold and Width Low Threshold properties.


class IviScopeErrorCodesEnum:
    E_IVISCOPE_CHANNEL_NOT_ENABLED = -1074126848 + 1  # Specified channel is not enabled.
    E_IVISCOPE_UNABLE_TO_PERFORM_MEASUREMENT = -1074126848 + 2  # Unable to perform desired measurement operation.
    E_IVISCOPE_MAX_TIME_EXCEEDED = -1074126848 + 3  # Maximum time exceeded before the operation completed.
    E_IVISCOPE_INVALID_ACQ_TYPE = -1074126848 + 4  # Invalid acquisition type.
    S_IVISCOPE_INVALID_WFM_ELEMENT = (
        "One of the elements in the waveform array is invalid."  # One of the elements in the waveform array is invalid.
    )


class IviScopeTimeOutEnum:
    IviScopeTimeOutInfinite = 0xFFFFFFFF  # The method waits indefinitely for the measurement to complete.
    IviScopeTimeOutImmediate = (
        0  # The method returns immediately. If no valid measurement value exists, the method returns an error.
    )
