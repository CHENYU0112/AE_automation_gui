from __future__ import annotations

from .Tkdpo2k3k4k import *


class IIviScopeTriggerTv:
    def __init__(self, root):
        self.root = root
        """:type : pverify.drivers.Scope.Tkdpo2k3k4k.IIviScope.IIviScope"""

    @property
    def LineNumber(self):
        return self.root.dllwrap.GetAttributeViInt32(None, IVI_CLASS_PUBLIC_ATTR_BASE + 206)

    @LineNumber.setter
    def LineNumber(self, value):
        """
        The line on which the oscilloscope triggers. The line number is absolute and not
        relative to the field of the TV signal.
        """
        self.root.dllwrap.SetAttributeViInt32(None, IVI_CLASS_PUBLIC_ATTR_BASE + 206, value)

    @property
    def Event(self):
        return self.root.dllwrap.GetAttributeViInt32(None, IVI_CLASS_PUBLIC_ATTR_BASE + 205)

    @Event.setter
    def Event(self, value):
        """
        The event on which the oscilloscope triggers.
        """
        self.root.dllwrap.SetAttributeViInt32(None, IVI_CLASS_PUBLIC_ATTR_BASE + 205, value)

    @property
    def polarity(self):
        return self.root.dllwrap.GetAttributeViInt32(None, IVI_CLASS_PUBLIC_ATTR_BASE + 204)

    @polarity.setter
    def polarity(self, value):
        """
        The polarity of the TV signal.
        """
        self.root.dllwrap.SetAttributeViInt32(None, IVI_CLASS_PUBLIC_ATTR_BASE + 204, value)

    @property
    def SignalFormat(self):
        return self.root.dllwrap.GetAttributeViInt32(None, IVI_CLASS_PUBLIC_ATTR_BASE + 201)

    @SignalFormat.setter
    def SignalFormat(self, value):
        """
        The format of the TV signal on which the oscilloscope triggers.
        """
        self.root.dllwrap.SetAttributeViInt32(None, IVI_CLASS_PUBLIC_ATTR_BASE + 201, value)

    def Configure(self, Source, SignalFormat, Event, polarity):
        """
        Configures the TV trigger source, signal format, event and polarity.

        :param Source: Specifies the trigger source. This value sets the Trigger Source property.
        :type Source: str
        :param SignalFormat: Specifies the TV trigger signal format. This value sets the TV Trigger Signal
            Format property.
        :type SignalFormat: IviScopeTVSignalFormatEnum
        :param Event: Specifies the TV trigger event. This value sets the TV Trigger Event property.
        :type Event: IviScopeTVTriggerEventEnum
        :param polarity: Specifies the polarity of the TV trigger. This value sets the TV Trigger
            Polarity property.
        :type polarity: IviScopeTVTriggerPolarityEnum
        """
        self.root.dllwrap.ConfigureTVTriggerSource(Source, SignalFormat, Event, polarity)
