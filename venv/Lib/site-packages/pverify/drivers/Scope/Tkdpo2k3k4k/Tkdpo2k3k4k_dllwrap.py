from __future__ import annotations

from ctypes import byref

from pverify.core.lab.ivi.headers.ivi import *
from pverify.core.lab.ivi.helper import *
from pverify.core.lab.ivi.ivi_base_classes import IVICDriverWrapper

from . import Tkdpo2k3k4k_const as const
from .Tkdpo2k3k4k_const import *


class Tkdpo2k3k4k_dllwrap(IVICDriverWrapper):
    def __init__(self):
        super().__init__()
        self._dll = load_dll("Tkdpo2k3k4k.dll", "Tkdpo2k3k4k_64.dll")
        """:type : ctypes.WinDLL"""

    @property
    def dll(self):
        return self._dll

    @property
    def drivername(self):
        return "Tkdpo2k3k4k"

    @property
    def const(self):
        return const

    def init(self, ResourceName, IdQuery, Reset):
        Vi = ViSession()
        status = self.dll.Tkdpo2k3k4k_init(ViRsrc(ResourceName), ViBoolean(IdQuery), ViBoolean(Reset), byref(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Vi.value)

    def close(self, Vi):
        status = self.dll.Tkdpo2k3k4k_close(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def InitWithOptions(self, ResourceName, IdQuery, Reset, OptionsString):
        Vi = ViSession()
        status = self.dll.Tkdpo2k3k4k_InitWithOptions(
            ViRsrc(ResourceName),
            ViBoolean(IdQuery),
            ViBoolean(Reset),
            ViConstString(OptionsString),
            byref(Vi),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Vi.value)

    def revision_query(self, Vi):
        DriverRev = ARRAY_ViChar(1024)
        InstrRev = ARRAY_ViChar(1024)
        status = self.dll.Tkdpo2k3k4k_revision_query(ViSession(Vi), DriverRev, InstrRev)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        DriverRev = decode(DriverRev)
        InstrRev = decode(InstrRev)
        return DriverRev, InstrRev

    def error_message(self, Vi, ErrorCode):
        ErrorMessage = ARRAY_ViChar(1024)
        status = self.dll.Tkdpo2k3k4k_error_message(ViSession(Vi), ViStatus(ErrorCode), ErrorMessage)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(ErrorMessage)

    def GetError(self, Vi, ErrorDescriptionBufferSize):
        ErrorCode = ViStatus()
        ErrorDescription = ARRAY_ViChar(ErrorDescriptionBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetError(
            ViSession(Vi),
            byref(ErrorCode),
            ViInt32(ErrorDescriptionBufferSize),
            ErrorDescription,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        ErrorDescription = decode(ErrorDescription)
        return ErrorCode, ErrorDescription

    def ClearError(self, Vi):
        status = self.dll.Tkdpo2k3k4k_ClearError(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ClearInterchangeWarnings(self, Vi):
        status = self.dll.Tkdpo2k3k4k_ClearInterchangeWarnings(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetNextCoercionRecord(self, Vi, CoercionRecordBufferSize):
        CoercionRecord = ARRAY_ViChar(CoercionRecordBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetNextCoercionRecord(
            ViSession(Vi), ViInt32(CoercionRecordBufferSize), CoercionRecord
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(CoercionRecord)

    def GetNextInterchangeWarning(self, Vi, InterchangeWarningBufferSize):
        InterchangeWarning = ARRAY_ViChar(InterchangeWarningBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetNextInterchangeWarning(
            ViSession(Vi), ViInt32(InterchangeWarningBufferSize), InterchangeWarning
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(InterchangeWarning)

    def InvalidateAllAttributes(self, Vi):
        status = self.dll.Tkdpo2k3k4k_InvalidateAllAttributes(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ResetInterchangeCheck(self, Vi):
        status = self.dll.Tkdpo2k3k4k_ResetInterchangeCheck(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Disable(self, Vi):
        status = self.dll.Tkdpo2k3k4k_Disable(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def error_query(self, Vi):
        ErrorCode = ViInt32()
        ErrorMessage = ARRAY_ViChar(1024)
        status = self.dll.Tkdpo2k3k4k_error_query(ViSession(Vi), byref(ErrorCode), ErrorMessage)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        ErrorCode = int(ErrorCode.value)
        ErrorMessage = decode(ErrorMessage)
        return ErrorCode, ErrorMessage

    def LockSession(self, Vi):
        CallerHasLock = ViBoolean()
        status = self.dll.Tkdpo2k3k4k_LockSession(ViSession(Vi), byref(CallerHasLock))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return bool(CallerHasLock.value)

    def reset(self, Vi):
        status = self.dll.Tkdpo2k3k4k_reset(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ResetWithDefaults(self, Vi):
        status = self.dll.Tkdpo2k3k4k_ResetWithDefaults(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def self_test(self, Vi):
        TestResult = ViInt16()
        TestMessage = ARRAY_ViChar(1024)
        status = self.dll.Tkdpo2k3k4k_self_test(ViSession(Vi), byref(TestResult), TestMessage)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        TestResult = int(TestResult.value)
        TestMessage = decode(TestMessage)
        return TestResult, TestMessage

    def UnlockSession(self, Vi):
        CallerHasLock = ViBoolean()
        status = self.dll.Tkdpo2k3k4k_UnlockSession(ViSession(Vi), byref(CallerHasLock))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return bool(CallerHasLock.value)

    def IsInvalidWfmElement(self, Vi, ElementValue):
        IsInvalid = ViBoolean()
        status = self.dll.Tkdpo2k3k4k_IsInvalidWfmElement(ViSession(Vi), ViReal64(ElementValue), byref(IsInvalid))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return bool(IsInvalid.value)

    def GetAttributeViInt32(self, Vi, RepCapIdentifier, AttributeID):
        AttributeValue = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetAttributeViInt32(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            byref(AttributeValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(AttributeValue.value)

    def GetAttributeViReal64(self, Vi, RepCapIdentifier, AttributeID):
        AttributeValue = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetAttributeViReal64(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            byref(AttributeValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(AttributeValue.value)

    def GetAttributeViBoolean(self, Vi, RepCapIdentifier, AttributeID):
        AttributeValue = ViBoolean()
        status = self.dll.Tkdpo2k3k4k_GetAttributeViBoolean(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            byref(AttributeValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return bool(AttributeValue.value)

    def GetAttributeViSession(self, Vi, RepCapIdentifier, AttributeID):
        AttributeValue = ViSession()
        status = self.dll.Tkdpo2k3k4k_GetAttributeViSession(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            byref(AttributeValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(AttributeValue.value)

    def GetAttributeViString(self, Vi, RepCapIdentifier, AttributeID, AttributeValueBufferSize):
        AttributeValue = ARRAY_ViChar(AttributeValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetAttributeViString(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            ViInt32(AttributeValueBufferSize),
            AttributeValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(AttributeValue)

    def SetAttributeViInt32(self, Vi, RepCapIdentifier, AttributeID, AttributeValue):
        status = self.dll.Tkdpo2k3k4k_SetAttributeViInt32(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            ViInt32(AttributeValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetAttributeViReal64(self, Vi, RepCapIdentifier, AttributeID, AttributeValue):
        status = self.dll.Tkdpo2k3k4k_SetAttributeViReal64(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            ViReal64(AttributeValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetAttributeViBoolean(self, Vi, RepCapIdentifier, AttributeID, AttributeValue):
        status = self.dll.Tkdpo2k3k4k_SetAttributeViBoolean(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            ViBoolean(AttributeValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetAttributeViSession(self, Vi, RepCapIdentifier, AttributeID, AttributeValue):
        status = self.dll.Tkdpo2k3k4k_SetAttributeViSession(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            ViSession(AttributeValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetAttributeViString(self, Vi, RepCapIdentifier, AttributeID, AttributeValue):
        status = self.dll.Tkdpo2k3k4k_SetAttributeViString(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            ViConstString(AttributeValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ActualRecordLength(self, Vi):
        ActualRecordLength = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ActualRecordLength(ViSession(Vi), byref(ActualRecordLength))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(ActualRecordLength.value)

    def SampleRate(self, Vi):
        SampleRate = ViReal64()
        status = self.dll.Tkdpo2k3k4k_SampleRate(ViSession(Vi), byref(SampleRate))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(SampleRate.value)

    def AutoProbeSenseValue(self, Vi, ChannelName):
        AutoProbeSenseValue = ViReal64()
        status = self.dll.Tkdpo2k3k4k_AutoProbeSenseValue(
            ViSession(Vi), ViConstString(ChannelName), byref(AutoProbeSenseValue)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(AutoProbeSenseValue.value)

    def SampleMode(self, Vi):
        SampleMode = ViInt32()
        status = self.dll.Tkdpo2k3k4k_SampleMode(ViSession(Vi), byref(SampleMode))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(SampleMode.value)

    def AutoSetup(self, Vi):
        status = self.dll.Tkdpo2k3k4k_AutoSetup(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureAcquisitionType(self, Vi, AcquisitionType):
        status = self.dll.Tkdpo2k3k4k_ConfigureAcquisitionType(ViSession(Vi), ViInt32(AcquisitionType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureInterpolation(self, Vi, Interpolation):
        status = self.dll.Tkdpo2k3k4k_ConfigureInterpolation(ViSession(Vi), ViInt32(Interpolation))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureInitiateContinuous(self, Vi, ContinuousAcquisition):
        status = self.dll.Tkdpo2k3k4k_ConfigureInitiateContinuous(ViSession(Vi), ViBoolean(ContinuousAcquisition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureNumAverages(self, Vi, NumberOfAverages):
        status = self.dll.Tkdpo2k3k4k_ConfigureNumAverages(ViSession(Vi), ViInt32(NumberOfAverages))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureNumEnvelopes(self, Vi, NumEnvelopes):
        status = self.dll.Tkdpo2k3k4k_ConfigureNumEnvelopes(ViSession(Vi), ViInt32(NumEnvelopes))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureAcquisitionRecord(self, Vi, TimePerRecord, MinNumPts, AcquisitionStartTime):
        status = self.dll.Tkdpo2k3k4k_ConfigureAcquisitionRecord(
            ViSession(Vi),
            ViReal64(TimePerRecord),
            ViInt32(MinNumPts),
            ViReal64(AcquisitionStartTime),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureTriggerCoupling(self, Vi, Coupling):
        status = self.dll.Tkdpo2k3k4k_ConfigureTriggerCoupling(ViSession(Vi), ViInt32(Coupling))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureTVTriggerLineNumber(self, Vi, TVLineNumber):
        status = self.dll.Tkdpo2k3k4k_ConfigureTVTriggerLineNumber(ViSession(Vi), ViInt32(TVLineNumber))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureAcLineTriggerSlope(self, Vi, ACLineSlope):
        status = self.dll.Tkdpo2k3k4k_ConfigureAcLineTriggerSlope(ViSession(Vi), ViInt32(ACLineSlope))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureTriggerModifier(self, Vi, TriggerModifier):
        status = self.dll.Tkdpo2k3k4k_ConfigureTriggerModifier(ViSession(Vi), ViInt32(TriggerModifier))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureTrigger(self, Vi, TriggerType, Holdoff):
        status = self.dll.Tkdpo2k3k4k_ConfigureTrigger(ViSession(Vi), ViInt32(TriggerType), ViReal64(Holdoff))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureEdgeTriggerSource(self, Vi, Source, Level, Slope):
        status = self.dll.Tkdpo2k3k4k_ConfigureEdgeTriggerSource(
            ViSession(Vi), ViConstString(Source), ViReal64(Level), ViInt32(Slope)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureGlitchTriggerSource(self, Vi, Source, Level, GlitchWidth, GlitchPolarity, GlitchCondition):
        status = self.dll.Tkdpo2k3k4k_ConfigureGlitchTriggerSource(
            ViSession(Vi),
            ViConstString(Source),
            ViReal64(Level),
            ViReal64(GlitchWidth),
            ViInt32(GlitchPolarity),
            ViInt32(GlitchCondition),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureRuntTriggerSource(self, Vi, Source, RuntThresholdLow, RuntThresholdHigh, RuntPolarity):
        status = self.dll.Tkdpo2k3k4k_ConfigureRuntTriggerSource(
            ViSession(Vi),
            ViConstString(Source),
            ViReal64(RuntThresholdLow),
            ViReal64(RuntThresholdHigh),
            ViInt32(RuntPolarity),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureTVTriggerSource(self, Vi, Source, TVSignalFormat, TVEvent, TVPolarity):
        status = self.dll.Tkdpo2k3k4k_ConfigureTVTriggerSource(
            ViSession(Vi),
            ViConstString(Source),
            ViInt32(TVSignalFormat),
            ViInt32(TVEvent),
            ViInt32(TVPolarity),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureWidthTriggerSource(
        self,
        Vi,
        Source,
        Level,
        WidthLowThreshold,
        WidthHighThreshold,
        WidthPolarity,
        WidthCondition,
    ):
        status = self.dll.Tkdpo2k3k4k_ConfigureWidthTriggerSource(
            ViSession(Vi),
            ViConstString(Source),
            ViReal64(Level),
            ViReal64(WidthLowThreshold),
            ViReal64(WidthHighThreshold),
            ViInt32(WidthPolarity),
            ViInt32(WidthCondition),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetChannelName(self, Vi, Index, NameBufferSize):
        Name = ARRAY_ViChar(NameBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetChannelName(ViSession(Vi), ViInt32(Index), ViInt32(NameBufferSize), Name)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Name)

    def ConfigureChannel(self, Vi, Channel, Range, Offset, Coupling, ProbeAttenuation, Enabled):
        status = self.dll.Tkdpo2k3k4k_ConfigureChannel(
            ViSession(Vi),
            ViConstString(Channel),
            ViReal64(Range),
            ViReal64(Offset),
            ViInt32(Coupling),
            ViReal64(ProbeAttenuation),
            ViBoolean(Enabled),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureChanCharacteristics(self, Vi, Channel, InputImpedance, MaxInputFrequency):
        status = self.dll.Tkdpo2k3k4k_ConfigureChanCharacteristics(
            ViSession(Vi),
            ViConstString(Channel),
            ViReal64(InputImpedance),
            ViReal64(MaxInputFrequency),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureRefLevels(self, Vi, Low, Mid, High):
        status = self.dll.Tkdpo2k3k4k_ConfigureRefLevels(ViSession(Vi), ViReal64(Low), ViReal64(Mid), ViReal64(High))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadWaveform(self, Vi, Channel, WaveformSize, MaxTimeMilliseconds):
        WaveformArray = ARRAY_ViReal64(WaveformSize)
        ActualPoints = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadWaveform(
            ViSession(Vi),
            ViConstString(Channel),
            ViInt32(WaveformSize),
            ViInt32(MaxTimeMilliseconds),
            WaveformArray,
            byref(ActualPoints),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        WaveformArray = list(WaveformArray)
        ActualPoints = int(ActualPoints.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return WaveformArray, ActualPoints, InitialX, XIncrement

    def ReadWaveformMeasurement(self, Vi, Channel, MeasFunction, MaxTimeMilliseconds):
        Measurement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadWaveformMeasurement(
            ViSession(Vi),
            ViConstString(Channel),
            ViInt32(MeasFunction),
            ViInt32(MaxTimeMilliseconds),
            byref(Measurement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(Measurement.value)

    def ReadMinMaxWaveform(self, Vi, Channel, WaveformSize, MaxTimeMilliseconds):
        MinWaveform = ARRAY_ViReal64(WaveformSize)
        MaxWaveform = ARRAY_ViReal64(WaveformSize)
        ActualPoints = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadMinMaxWaveform(
            ViSession(Vi),
            ViConstString(Channel),
            ViInt32(WaveformSize),
            ViInt32(MaxTimeMilliseconds),
            MinWaveform,
            MaxWaveform,
            byref(ActualPoints),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        MinWaveform = list(MinWaveform)
        MaxWaveform = list(MaxWaveform)
        ActualPoints = int(ActualPoints.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return MinWaveform, MaxWaveform, ActualPoints, InitialX, XIncrement

    def FetchWaveform(self, Vi, Channel, WaveformSize):
        WaveformArray = ARRAY_ViReal64(WaveformSize)
        ActualPoints = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_FetchWaveform(
            ViSession(Vi),
            ViConstString(Channel),
            ViInt32(WaveformSize),
            WaveformArray,
            byref(ActualPoints),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        WaveformArray = list(WaveformArray)
        ActualPoints = int(ActualPoints.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return WaveformArray, ActualPoints, InitialX, XIncrement

    def FetchWaveformMeasurement(self, Vi, Channel, MeasFunction):
        Measurement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_FetchWaveformMeasurement(
            ViSession(Vi),
            ViConstString(Channel),
            ViInt32(MeasFunction),
            byref(Measurement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(Measurement.value)

    def FetchMinMaxWaveform(self, Vi, Channel, WaveformSize):
        MinWaveform = ARRAY_ViReal64(WaveformSize)
        MaxWaveform = ARRAY_ViReal64(WaveformSize)
        ActualPoints = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_FetchMinMaxWaveform(
            ViSession(Vi),
            ViConstString(Channel),
            ViInt32(WaveformSize),
            MinWaveform,
            MaxWaveform,
            byref(ActualPoints),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        MinWaveform = list(MinWaveform)
        MaxWaveform = list(MaxWaveform)
        ActualPoints = int(ActualPoints.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return MinWaveform, MaxWaveform, ActualPoints, InitialX, XIncrement

    def Abort(self, Vi):
        status = self.dll.Tkdpo2k3k4k_Abort(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def InitiateAcquisition(self, Vi):
        status = self.dll.Tkdpo2k3k4k_InitiateAcquisition(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def AcquisitionStatus(self, Vi):
        Status = ViInt32()
        status = self.dll.Tkdpo2k3k4k_AcquisitionStatus(ViSession(Vi), byref(Status))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Status.value)

    def AutoSet2(self, Vi):
        status = self.dll.Tkdpo2k3k4k_AutoSet2(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetAverageMode(self, Vi, NumberAverages):
        status = self.dll.Tkdpo2k3k4k_SetAverageMode(ViSession(Vi), ViInt32(NumberAverages))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Start(self, Vi):
        status = self.dll.Tkdpo2k3k4k_Start(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Stop(self, Vi):
        status = self.dll.Tkdpo2k3k4k_Stop(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureRecord(self, Vi, TimePerRecord, MinNumPts, AcquisitionStartTime):
        status = self.dll.Tkdpo2k3k4k_ConfigureRecord(
            ViSession(Vi),
            ViReal64(TimePerRecord),
            ViInt32(MinNumPts),
            ViReal64(AcquisitionStartTime),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetSingleSequence(self, Vi):
        SingleSequence = ViBoolean()
        status = self.dll.Tkdpo2k3k4k_GetSingleSequence(ViSession(Vi), byref(SingleSequence))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return bool(SingleSequence.value)

    def SetSingleSequence(self, Vi, SingleSequence):
        status = self.dll.Tkdpo2k3k4k_SetSingleSequence(ViSession(Vi), ViBoolean(SingleSequence))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetBusName(self, Vi, Index, NameBufferSize):
        Name = ARRAY_ViChar(NameBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetBusName(ViSession(Vi), ViInt32(Index), ViInt32(NameBufferSize), Name)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Name)

    def ConfigureI2C(self, Vi, Bus, ClockSource, DataSource, RWInAddress):
        status = self.dll.Tkdpo2k3k4k_ConfigureI2C(
            ViSession(Vi),
            ViConstString(Bus),
            ViInt32(ClockSource),
            ViInt32(DataSource),
            ViInt32(RWInAddress),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadI2C(self, Vi, Bus):
        ClockSource = ViInt32()
        DataSource = ViInt32()
        RWInAddress = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadI2C(
            ViSession(Vi),
            ViConstString(Bus),
            byref(ClockSource),
            byref(DataSource),
            byref(RWInAddress),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        ClockSource = int(ClockSource.value)
        DataSource = int(DataSource.value)
        RWInAddress = int(RWInAddress.value)
        return ClockSource, DataSource, RWInAddress

    def ConfigureAudioInputs(self, Vi, Bus, Type, ClockSource, DataSource, WordSelectSource, FrameSyncSource):
        status = self.dll.Tkdpo2k3k4k_ConfigureAudioInputs(
            ViSession(Vi),
            ViConstString(Bus),
            ViInt32(Type),
            ViInt32(ClockSource),
            ViInt32(DataSource),
            ViInt32(WordSelectSource),
            ViInt32(FrameSyncSource),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadAudioInputs(self, Vi, Bus):
        Type = ViInt32()
        ClockSource = ViInt32()
        DataSource = ViInt32()
        WordSelectSource = ViInt32()
        FrameSyncSource = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadAudioInputs(
            ViSession(Vi),
            ViConstString(Bus),
            byref(Type),
            byref(ClockSource),
            byref(DataSource),
            byref(WordSelectSource),
            byref(FrameSyncSource),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Type = int(Type.value)
        ClockSource = int(ClockSource.value)
        DataSource = int(DataSource.value)
        WordSelectSource = int(WordSelectSource.value)
        FrameSyncSource = int(FrameSyncSource.value)
        return Type, ClockSource, DataSource, WordSelectSource, FrameSyncSource

    def ConfigureAudio(
        self,
        Vi,
        Bus,
        BitDelay,
        BitOrder,
        BitsPerChannel,
        ClockPolarity,
        DataPolarity,
        BitsPerWord,
        DisplayFormat,
        FrameSyncPolarity,
        WordSelectPolarity,
        ChannelsPerFrame,
    ):
        status = self.dll.Tkdpo2k3k4k_ConfigureAudio(
            ViSession(Vi),
            ViConstString(Bus),
            ViInt32(BitDelay),
            ViInt32(BitOrder),
            ViInt32(BitsPerChannel),
            ViInt32(ClockPolarity),
            ViInt32(DataPolarity),
            ViInt32(BitsPerWord),
            ViInt32(DisplayFormat),
            ViInt32(FrameSyncPolarity),
            ViInt32(WordSelectPolarity),
            ViInt32(ChannelsPerFrame),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadAudio(self, Vi, Bus):
        BitDelay = ViInt32()
        BitOrder = ViInt32()
        BitsPerChannel = ViInt32()
        ClockPolarity = ViInt32()
        DataPolarity = ViInt32()
        BitsPerWord = ViInt32()
        DisplayFormat = ViInt32()
        FrameSyncPolarity = ViInt32()
        WordSelectPolarity = ViInt32()
        ChannelsPerFrame = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadAudio(
            ViSession(Vi),
            ViConstString(Bus),
            byref(BitDelay),
            byref(BitOrder),
            byref(BitsPerChannel),
            byref(ClockPolarity),
            byref(DataPolarity),
            byref(BitsPerWord),
            byref(DisplayFormat),
            byref(FrameSyncPolarity),
            byref(WordSelectPolarity),
            byref(ChannelsPerFrame),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        BitDelay = int(BitDelay.value)
        BitOrder = int(BitOrder.value)
        BitsPerChannel = int(BitsPerChannel.value)
        ClockPolarity = int(ClockPolarity.value)
        DataPolarity = int(DataPolarity.value)
        BitsPerWord = int(BitsPerWord.value)
        DisplayFormat = int(DisplayFormat.value)
        FrameSyncPolarity = int(FrameSyncPolarity.value)
        WordSelectPolarity = int(WordSelectPolarity.value)
        ChannelsPerFrame = int(ChannelsPerFrame.value)
        return (
            BitDelay,
            BitOrder,
            BitsPerChannel,
            ClockPolarity,
            DataPolarity,
            BitsPerWord,
            DisplayFormat,
            FrameSyncPolarity,
            WordSelectPolarity,
            ChannelsPerFrame,
        )

    def ConfigureCAN(self, Vi, Bus, Source, SamplePoint, SignalType, BitRate):
        status = self.dll.Tkdpo2k3k4k_ConfigureCAN(
            ViSession(Vi),
            ViConstString(Bus),
            ViInt32(Source),
            ViInt32(SamplePoint),
            ViInt32(SignalType),
            ViInt32(BitRate),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadCAN(self, Vi, Bus):
        Source = ViInt32()
        SamplePoint = ViInt32()
        SignalType = ViInt32()
        BitRate = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadCAN(
            ViSession(Vi),
            ViConstString(Bus),
            byref(Source),
            byref(SamplePoint),
            byref(SignalType),
            byref(BitRate),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source = int(Source.value)
        SamplePoint = int(SamplePoint.value)
        SignalType = int(SignalType.value)
        BitRate = int(BitRate.value)
        return Source, SamplePoint, SignalType, BitRate

    def ConfigureFlexray(self, Vi, Bus, Source, IDFormat, Standard, BitRate):
        status = self.dll.Tkdpo2k3k4k_ConfigureFlexray(
            ViSession(Vi),
            ViConstString(Bus),
            ViInt32(Source),
            ViInt32(IDFormat),
            ViInt32(Standard),
            ViInt32(BitRate),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadFlexray(self, Vi, Bus):
        Source = ViInt32()
        IDFormat = ViInt32()
        Standard = ViInt32()
        BitRate = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadFlexray(
            ViSession(Vi),
            ViConstString(Bus),
            byref(Source),
            byref(IDFormat),
            byref(Standard),
            byref(BitRate),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source = int(Source.value)
        IDFormat = int(IDFormat.value)
        Standard = int(Standard.value)
        BitRate = int(BitRate.value)
        return Source, IDFormat, Standard, BitRate

    def ConfigureLIN(self, Vi, Bus, Source, IDFormat, BitRate, Polarity, SamplePoint, Standard):
        status = self.dll.Tkdpo2k3k4k_ConfigureLIN(
            ViSession(Vi),
            ViConstString(Bus),
            ViInt32(Source),
            ViInt32(IDFormat),
            ViInt32(BitRate),
            ViInt32(Polarity),
            ViInt32(SamplePoint),
            ViInt32(Standard),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadLIN(self, Vi, Bus):
        Source = ViInt32()
        IDFormat = ViInt32()
        BitRate = ViInt32()
        Polarity = ViInt32()
        SamplePoint = ViInt32()
        Standard = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadLIN(
            ViSession(Vi),
            ViConstString(Bus),
            byref(Source),
            byref(IDFormat),
            byref(BitRate),
            byref(Polarity),
            byref(SamplePoint),
            byref(Standard),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source = int(Source.value)
        IDFormat = int(IDFormat.value)
        BitRate = int(BitRate.value)
        Polarity = int(Polarity.value)
        SamplePoint = int(SamplePoint.value)
        Standard = int(Standard.value)
        return Source, IDFormat, BitRate, Polarity, SamplePoint, Standard

    def ConfigureRS232(self, Vi, Bus2, RXSource, InputPolarity, Bitrate, DataBits, InputParity, TXSource):
        status = self.dll.Tkdpo2k3k4k_ConfigureRS232(
            ViSession(Vi),
            ViConstString(Bus2),
            ViInt32(RXSource),
            ViInt32(InputPolarity),
            ViReal64(Bitrate),
            ViInt32(DataBits),
            ViInt32(InputParity),
            ViInt32(TXSource),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadRS232(self, Vi, Bus2):
        RXSource = ViInt32()
        InputPolarity = ViInt32()
        Bitrate = ViReal64()
        DataBits = ViInt32()
        InputParity = ViInt32()
        TXSource = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadRS232(
            ViSession(Vi),
            ViConstString(Bus2),
            byref(RXSource),
            byref(InputPolarity),
            byref(Bitrate),
            byref(DataBits),
            byref(InputParity),
            byref(TXSource),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        RXSource = int(RXSource.value)
        InputPolarity = int(InputPolarity.value)
        Bitrate = float(Bitrate.value)
        DataBits = int(DataBits.value)
        InputParity = int(InputParity.value)
        TXSource = int(TXSource.value)
        return RXSource, InputPolarity, Bitrate, DataBits, InputParity, TXSource

    def ReadUSB(self, Vi, Bus2):
        DifferentialSource = ViInt32()
        Probe = ViInt32()
        Bitrate = ViInt32()
        DPLUSSource = ViInt32()
        DMINUSSource = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadUSB(
            ViSession(Vi),
            ViConstString(Bus2),
            byref(DifferentialSource),
            byref(Probe),
            byref(Bitrate),
            byref(DPLUSSource),
            byref(DMINUSSource),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        DifferentialSource = int(DifferentialSource.value)
        Probe = int(Probe.value)
        Bitrate = int(Bitrate.value)
        DPLUSSource = int(DPLUSSource.value)
        DMINUSSource = int(DMINUSSource.value)
        return DifferentialSource, Probe, Bitrate, DPLUSSource, DMINUSSource

    def ConfigureUSB(self, Vi, Bus2, DifferentialSource, Probe, Bitrate, DPLUSSource, DMINUSSource):
        status = self.dll.Tkdpo2k3k4k_ConfigureUSB(
            ViSession(Vi),
            ViConstString(Bus2),
            ViInt32(DifferentialSource),
            ViInt32(Probe),
            ViInt32(Bitrate),
            ViInt32(DPLUSSource),
            ViInt32(DMINUSSource),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetLowThresholdChannel(self, Vi, Bus2, InputSource):
        Threshold = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetLowThresholdChannel(
            ViSession(Vi), ViConstString(Bus2), ViInt32(InputSource), byref(Threshold)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(Threshold.value)

    def GetThresholdChannel(self, Vi, Bus2, InputSource):
        Threshold = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetThresholdChannel(
            ViSession(Vi), ViConstString(Bus2), ViInt32(InputSource), byref(Threshold)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(Threshold.value)

    def SetLowThreshholdChannel(self, Vi, Bus2, InputSource, Threshold):
        status = self.dll.Tkdpo2k3k4k_SetLowThreshholdChannel(
            ViSession(Vi), ViConstString(Bus2), ViInt32(InputSource), ViReal64(Threshold)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetThresholdChannel(self, Vi, Bus2, InputSource, Threshold):
        status = self.dll.Tkdpo2k3k4k_SetThresholdChannel(
            ViSession(Vi), ViConstString(Bus2), ViInt32(InputSource), ViReal64(Threshold)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetThresholdDigitalChannel(self, Vi, Bus, InputSource, Threshold):
        status = self.dll.Tkdpo2k3k4k_SetThresholdDigitalChannel(
            ViSession(Vi), ViConstString(Bus), ViInt32(InputSource), ViReal64(Threshold)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetThresholdDigitalChannel(self, Vi, Bus, InputSource):
        Threshold = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetThresholdDigitalChannel(
            ViSession(Vi), ViConstString(Bus), ViInt32(InputSource), byref(Threshold)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(Threshold.value)

    def SetUpperThreshhold(self, Vi, Bus, InputSource, Threshold):
        status = self.dll.Tkdpo2k3k4k_SetUpperThreshhold(
            ViSession(Vi), ViConstString(Bus), ViInt32(InputSource), ViReal64(Threshold)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetUpperThreshhold(self, Vi, Bus, InputSource):
        Threshold = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetUpperThreshhold(
            ViSession(Vi), ViConstString(Bus), ViInt32(InputSource), byref(Threshold)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(Threshold.value)

    def SaveEventTable(self, Vi, Bus, Filename):
        status = self.dll.Tkdpo2k3k4k_SaveEventTable(ViSession(Vi), ViConstString(Bus), ViConstString(Filename))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureSPI(
        self,
        Vi,
        Bus,
        Clocksource,
        ClockPolarity,
        DataSize,
        DataMISOSource,
        DataMISOPolarity,
        BitOrder,
        SlaveSelectSource,
        SlaveSelectPolarity,
        DataMOSISource,
        DataMOSIPolarity,
    ):
        status = self.dll.Tkdpo2k3k4k_ConfigureSPI(
            ViSession(Vi),
            ViConstString(Bus),
            ViInt32(Clocksource),
            ViInt32(ClockPolarity),
            ViInt32(DataSize),
            ViInt32(DataMISOSource),
            ViInt32(DataMISOPolarity),
            ViInt32(BitOrder),
            ViInt32(SlaveSelectSource),
            ViInt32(SlaveSelectPolarity),
            ViInt32(DataMOSISource),
            ViInt32(DataMOSIPolarity),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadSPI(self, Vi, Bus):
        Clocksource = ViInt32()
        ClockPolarity = ViInt32()
        DataSize = ViInt32()
        DataMISOSource = ViInt32()
        DataMISOPolarity = ViInt32()
        BitOrder = ViInt32()
        SlaveSelectSource = ViInt32()
        SlaveSelectPolarity = ViInt32()
        DataMOSISource = ViInt32()
        DataMOSIPolarity = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadSPI(
            ViSession(Vi),
            ViConstString(Bus),
            byref(Clocksource),
            byref(ClockPolarity),
            byref(DataSize),
            byref(DataMISOSource),
            byref(DataMISOPolarity),
            byref(BitOrder),
            byref(SlaveSelectSource),
            byref(SlaveSelectPolarity),
            byref(DataMOSISource),
            byref(DataMOSIPolarity),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Clocksource = int(Clocksource.value)
        ClockPolarity = int(ClockPolarity.value)
        DataSize = int(DataSize.value)
        DataMISOSource = int(DataMISOSource.value)
        DataMISOPolarity = int(DataMISOPolarity.value)
        BitOrder = int(BitOrder.value)
        SlaveSelectSource = int(SlaveSelectSource.value)
        SlaveSelectPolarity = int(SlaveSelectPolarity.value)
        DataMOSISource = int(DataMOSISource.value)
        DataMOSIPolarity = int(DataMOSIPolarity.value)
        return (
            Clocksource,
            ClockPolarity,
            DataSize,
            DataMISOSource,
            DataMISOPolarity,
            BitOrder,
            SlaveSelectSource,
            SlaveSelectPolarity,
            DataMOSISource,
            DataMOSIPolarity,
        )

    def GetParallelBitSource(self, Vi, Bus, Bit):
        ParallelSource = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetParallelBitSource(
            ViSession(Vi), ViConstString(Bus), ViInt32(Bit), byref(ParallelSource)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(ParallelSource.value)

    def SetParallelBitSource(self, Vi, Bus, Bit, ParallelSource):
        status = self.dll.Tkdpo2k3k4k_SetParallelBitSource(
            ViSession(Vi), ViConstString(Bus), ViInt32(Bit), ViInt32(ParallelSource)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetMeasurementScale(self, Vi, MeasurementScale):
        status = self.dll.Tkdpo2k3k4k_SetMeasurementScale(ViSession(Vi), ViInt32(MeasurementScale))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetMeasurementScale2(self, Vi, MeasurementScale):
        status = self.dll.Tkdpo2k3k4k_SetMeasurementScale2(ViSession(Vi), ViInt32(MeasurementScale))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetMessageBoxCoordinates(self, Vi, X1, Y1, X2, Y2):
        status = self.dll.Tkdpo2k3k4k_SetMessageBoxCoordinates(
            ViSession(Vi), ViInt32(X1), ViInt32(Y1), ViInt32(X2), ViInt32(Y2)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetMessageBoxCoordinates(self, Vi):
        X1 = ViInt32()
        Y1 = ViInt32()
        X2 = ViInt32()
        Y2 = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetMessageBoxCoordinates(
            ViSession(Vi), byref(X1), byref(Y1), byref(X2), byref(Y2)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        X1 = int(X1.value)
        Y1 = int(Y1.value)
        X2 = int(X2.value)
        Y2 = int(Y2.value)
        return X1, Y1, X2, Y2

    def ShowMessage(self, Vi, Message):
        status = self.dll.Tkdpo2k3k4k_ShowMessage(ViSession(Vi), ViConstString(Message))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ClearMessage(self, Vi):
        status = self.dll.Tkdpo2k3k4k_ClearMessage(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDisplayMessage(self, Vi, ValBufferSize):
        Val = ARRAY_ViChar(ValBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDisplayMessage(ViSession(Vi), ViInt32(ValBufferSize), Val)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Val)

    def Print(self, Vi):
        status = self.dll.Tkdpo2k3k4k_Print(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Configure(self, Vi, Source, Mode):
        status = self.dll.Tkdpo2k3k4k_Configure(ViSession(Vi), ViInt32(Source), ViInt32(Mode))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Read(self, Vi):
        Source = ViInt32()
        Mode = ViInt32()
        status = self.dll.Tkdpo2k3k4k_Read(ViSession(Vi), byref(Source), byref(Mode))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source = int(Source.value)
        Mode = int(Mode.value)
        return Source, Mode

    def ConfigureBoxCoordinates(self, Vi, Top, Left, Right, Bottom):
        status = self.dll.Tkdpo2k3k4k_ConfigureBoxCoordinates(
            ViSession(Vi),
            ViReal64(Top),
            ViReal64(Left),
            ViReal64(Right),
            ViReal64(Bottom),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadBoxCoordinates(self, Vi):
        Top = ViReal64()
        Left = ViReal64()
        Right = ViReal64()
        Bottom = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadBoxCoordinates(
            ViSession(Vi), byref(Top), byref(Left), byref(Right), byref(Bottom)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Top = float(Top.value)
        Left = float(Left.value)
        Right = float(Right.value)
        Bottom = float(Bottom.value)
        return Top, Left, Right, Bottom

    def ConfigureBoxCoordinatesPercent(self, Vi, Top, Left, Right, Bottom):
        status = self.dll.Tkdpo2k3k4k_ConfigureBoxCoordinatesPercent(
            ViSession(Vi),
            ViReal64(Top),
            ViReal64(Left),
            ViReal64(Right),
            ViReal64(Bottom),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadBoxCoordinatesPercent(self, Vi):
        Top = ViReal64()
        Left = ViReal64()
        Right = ViReal64()
        Bottom = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadBoxCoordinatesPercent(
            ViSession(Vi), byref(Top), byref(Left), byref(Right), byref(Bottom)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Top = float(Top.value)
        Left = float(Left.value)
        Right = float(Right.value)
        Bottom = float(Bottom.value)
        return Top, Left, Right, Bottom

    def Reset2(self, Vi):
        status = self.dll.Tkdpo2k3k4k_Reset2(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Configure2(self, Vi, Position, Scale, RecordLength):
        status = self.dll.Tkdpo2k3k4k_Configure2(
            ViSession(Vi), ViReal64(Position), ViReal64(Scale), ViInt32(RecordLength)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureDelay(self, Vi, Mode, Time):
        status = self.dll.Tkdpo2k3k4k_ConfigureDelay(ViSession(Vi), ViBoolean(Mode), ViReal64(Time))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Read2(self, Vi):
        Position = ViReal64()
        Scale = ViReal64()
        RecordLength = ViInt32()
        status = self.dll.Tkdpo2k3k4k_Read2(ViSession(Vi), byref(Position), byref(Scale), byref(RecordLength))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Position = float(Position.value)
        Scale = float(Scale.value)
        RecordLength = int(RecordLength.value)
        return Position, Scale, RecordLength

    def ReadDelay(self, Vi):
        Mode = ViBoolean()
        Time = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadDelay(ViSession(Vi), byref(Mode), byref(Time))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Mode = bool(Mode.value)
        Time = float(Time.value)
        return Mode, Time

    def GetMathName(self, Vi, Index, NameBufferSize):
        Name = ARRAY_ViChar(NameBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetMathName(ViSession(Vi), ViInt32(Index), ViInt32(NameBufferSize), Name)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Name)

    def Configure3(
        self,
        Vi,
        Math,
        Expression,
        VerticalPosition,
        VerticalScale,
        HorizontalPosition,
        HorizontalScale,
        DisplayState,
        Type,
    ):
        status = self.dll.Tkdpo2k3k4k_Configure3(
            ViSession(Vi),
            ViConstString(Math),
            ViConstString(Expression),
            ViReal64(VerticalPosition),
            ViReal64(VerticalScale),
            ViReal64(HorizontalPosition),
            ViReal64(HorizontalScale),
            ViBoolean(DisplayState),
            ViInt32(Type),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Read3(
        self,
        Vi,
        Math,
        ExpressionBufferSize,
        VerticalUnitsBufferSize,
        HorizontalUnitsBufferSize,
    ):
        Expression = ARRAY_ViChar(ExpressionBufferSize)
        VerticalPosition = ViReal64()
        VerticalScale = ViReal64()
        VerticalUnits = ARRAY_ViChar(VerticalUnitsBufferSize)
        HorizontalPosition = ViReal64()
        HorizontalScale = ViReal64()
        HorizontalUnits = ARRAY_ViChar(HorizontalUnitsBufferSize)
        DisplayState = ViBoolean()
        Type = ViInt32()
        status = self.dll.Tkdpo2k3k4k_Read3(
            ViSession(Vi),
            ViConstString(Math),
            ViInt32(ExpressionBufferSize),
            Expression,
            byref(VerticalPosition),
            byref(VerticalScale),
            ViInt32(VerticalUnitsBufferSize),
            VerticalUnits,
            byref(HorizontalPosition),
            byref(HorizontalScale),
            ViInt32(HorizontalUnitsBufferSize),
            HorizontalUnits,
            byref(DisplayState),
            byref(Type),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Expression = decode(Expression)
        VerticalPosition = float(VerticalPosition.value)
        VerticalScale = float(VerticalScale.value)
        VerticalUnits = decode(VerticalUnits)
        HorizontalPosition = float(HorizontalPosition.value)
        HorizontalScale = float(HorizontalScale.value)
        HorizontalUnits = decode(HorizontalUnits)
        DisplayState = bool(DisplayState.value)
        Type = int(Type.value)
        return (
            Expression,
            VerticalPosition,
            VerticalScale,
            VerticalUnits,
            HorizontalPosition,
            HorizontalScale,
            HorizontalUnits,
            DisplayState,
            Type,
        )

    def GetMathVariable(self, Vi, Math, Variable):
        MathVariable = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetMathVariable(
            ViSession(Vi), ViConstString(Math), ViInt32(Variable), byref(MathVariable)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(MathVariable.value)

    def SetMathVariable(self, Vi, Math, Variable, MathVariable):
        status = self.dll.Tkdpo2k3k4k_SetMathVariable(
            ViSession(Vi), ViConstString(Math), ViInt32(Variable), ViReal64(MathVariable)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetEndPointGatingIndicator(self, Vi, Math):
        Val = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetEndPointGatingIndicator(ViSession(Vi), ViConstString(Math), byref(Val))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(Val.value)

    def GetStartPointGatingIndicator(self, Vi, Math):
        Val = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetStartPointGatingIndicator(ViSession(Vi), ViConstString(Math), byref(Val))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(Val.value)

    def GetNyquistFrequency(self, Vi, Math):
        Val = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetNyquistFrequency(ViSession(Vi), ViConstString(Math), byref(Val))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(Val.value)

    def GetMeasurementSlotName(self, Vi, Index, NameBufferSize):
        Name = ARRAY_ViChar(NameBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetMeasurementSlotName(
            ViSession(Vi), ViInt32(Index), ViInt32(NameBufferSize), Name
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Name)

    def ReadDelay2(self, Vi, MeasurementSlot):
        Source1 = ViInt32()
        Source2 = ViInt32()
        Direction = ViInt32()
        Edge1 = ViInt32()
        Edge2 = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadDelay2(
            ViSession(Vi),
            ViConstString(MeasurementSlot),
            byref(Source1),
            byref(Source2),
            byref(Direction),
            byref(Edge1),
            byref(Edge2),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source1 = int(Source1.value)
        Source2 = int(Source2.value)
        Direction = int(Direction.value)
        Edge1 = int(Edge1.value)
        Edge2 = int(Edge2.value)
        return Source1, Source2, Direction, Edge1, Edge2

    def ClearStatistics(self, Vi):
        status = self.dll.Tkdpo2k3k4k_ClearStatistics(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Configure15(self, Vi, MeasurementSlot, Source, Type):
        status = self.dll.Tkdpo2k3k4k_Configure15(
            ViSession(Vi), ViConstString(MeasurementSlot), ViInt32(Source), ViInt32(Type)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureDelay3(self, Vi, MeasurementSlot, Source1, Source2, Direction, Edge1, Edge2):
        status = self.dll.Tkdpo2k3k4k_ConfigureDelay3(
            ViSession(Vi),
            ViConstString(MeasurementSlot),
            ViInt32(Source1),
            ViInt32(Source2),
            ViInt32(Direction),
            ViInt32(Edge1),
            ViInt32(Edge2),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigurePhase2(self, Vi, MeasurementSlot, Source1, Source2):
        status = self.dll.Tkdpo2k3k4k_ConfigurePhase2(
            ViSession(Vi),
            ViConstString(MeasurementSlot),
            ViInt32(Source1),
            ViInt32(Source2),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Read9(self, Vi, MeasurementSlot):
        Source1 = ViInt32()
        Source2 = ViInt32()
        Direction = ViInt32()
        Edge1 = ViInt32()
        Edge2 = ViInt32()
        Type = ViInt32()
        status = self.dll.Tkdpo2k3k4k_Read9(
            ViSession(Vi),
            ViConstString(MeasurementSlot),
            byref(Source1),
            byref(Source2),
            byref(Direction),
            byref(Edge1),
            byref(Edge2),
            byref(Type),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source1 = int(Source1.value)
        Source2 = int(Source2.value)
        Direction = int(Direction.value)
        Edge1 = int(Edge1.value)
        Edge2 = int(Edge2.value)
        Type = int(Type.value)
        return Source1, Source2, Direction, Edge1, Edge2, Type

    def ReadValue2(
        self,
        Vi,
        MeasurementSlot,
        Source1,
        Source2,
        Direction,
        Edge1,
        Edge2,
        Type,
        UnitBufferSize,
    ):
        Val = ViReal64()
        Unit = ARRAY_ViChar(UnitBufferSize)
        status = self.dll.Tkdpo2k3k4k_ReadValue2(
            ViSession(Vi),
            ViConstString(MeasurementSlot),
            ViInt32(Source1),
            ViInt32(Source2),
            ViInt32(Direction),
            ViInt32(Edge1),
            ViInt32(Edge2),
            ViInt32(Type),
            byref(Val),
            ViInt32(UnitBufferSize),
            Unit,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Val = float(Val.value)
        Unit = decode(Unit)
        return Val, Unit

    def GetHorizontalValue(self, Vi, Indicator):
        HorizontalValue = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetHorizontalValue(ViSession(Vi), ViInt32(Indicator), byref(HorizontalValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(HorizontalValue.value)

    def GetVerticalValue(self, Vi, Indicator):
        VerticalValue = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetVerticalValue(ViSession(Vi), ViInt32(Indicator), byref(VerticalValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(VerticalValue.value)

    def ConfigureChannelPower(self, Vi, Bandwidth):
        status = self.dll.Tkdpo2k3k4k_ConfigureChannelPower(ViSession(Vi), ViReal64(Bandwidth))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadChannelPower(self, Vi):
        Bandwidth = ViReal64()
        Power = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadChannelPower(ViSession(Vi), byref(Bandwidth), byref(Power))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Bandwidth = float(Bandwidth.value)
        Power = float(Power.value)
        return Bandwidth, Power

    def ConfigureACPR(self, Vi, AdjacentChannels, ChannelBandwidth, ChannelSpacing):
        status = self.dll.Tkdpo2k3k4k_ConfigureACPR(
            ViSession(Vi),
            ViInt32(AdjacentChannels),
            ViReal64(ChannelBandwidth),
            ViReal64(ChannelSpacing),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadACPR(self, Vi):
        AdjacentChannels = ViInt32()
        ChannelBandwidth = ViReal64()
        ChannelSpacing = ViReal64()
        Power = ViReal64()
        LowerArea1Ratio = ViReal64()
        LowerArea2Ratio = ViReal64()
        LowerArea3Ratio = ViReal64()
        UpperArea1Ratio = ViReal64()
        UpperArea2Ratio = ViReal64()
        UpperArea3Ratio = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadACPR(
            ViSession(Vi),
            byref(AdjacentChannels),
            byref(ChannelBandwidth),
            byref(ChannelSpacing),
            byref(Power),
            byref(LowerArea1Ratio),
            byref(LowerArea2Ratio),
            byref(LowerArea3Ratio),
            byref(UpperArea1Ratio),
            byref(UpperArea2Ratio),
            byref(UpperArea3Ratio),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        AdjacentChannels = int(AdjacentChannels.value)
        ChannelBandwidth = float(ChannelBandwidth.value)
        ChannelSpacing = float(ChannelSpacing.value)
        Power = float(Power.value)
        LowerArea1Ratio = float(LowerArea1Ratio.value)
        LowerArea2Ratio = float(LowerArea2Ratio.value)
        LowerArea3Ratio = float(LowerArea3Ratio.value)
        UpperArea1Ratio = float(UpperArea1Ratio.value)
        UpperArea2Ratio = float(UpperArea2Ratio.value)
        UpperArea3Ratio = float(UpperArea3Ratio.value)
        return (
            AdjacentChannels,
            ChannelBandwidth,
            ChannelSpacing,
            Power,
            LowerArea1Ratio,
            LowerArea2Ratio,
            LowerArea3Ratio,
            UpperArea1Ratio,
            UpperArea2Ratio,
            UpperArea3Ratio,
        )

    def ConfigureOBW(self, Vi, AnalysisBandwidth, PercentageDown):
        status = self.dll.Tkdpo2k3k4k_ConfigureOBW(ViSession(Vi), ViReal64(AnalysisBandwidth), ViReal64(PercentageDown))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadOBW(self, Vi):
        AnalysisBandwidth = ViReal64()
        PercentageDown = ViReal64()
        LowerFrequency = ViReal64()
        UpperFrequency = ViReal64()
        Power = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadOBW(
            ViSession(Vi),
            byref(AnalysisBandwidth),
            byref(PercentageDown),
            byref(LowerFrequency),
            byref(UpperFrequency),
            byref(Power),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        AnalysisBandwidth = float(AnalysisBandwidth.value)
        PercentageDown = float(PercentageDown.value)
        LowerFrequency = float(LowerFrequency.value)
        UpperFrequency = float(UpperFrequency.value)
        Power = float(Power.value)
        return AnalysisBandwidth, PercentageDown, LowerFrequency, UpperFrequency, Power

    def SaveEventTableBusData(self, Vi, Bus, Filename):
        status = self.dll.Tkdpo2k3k4k_SaveEventTableBusData(ViSession(Vi), ViInt32(Bus), ViConstString(Filename))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SaveImage(self, Vi, Filename, ImageFormat, ImageLayout):
        status = self.dll.Tkdpo2k3k4k_SaveImage(
            ViSession(Vi),
            ViConstString(Filename),
            ViInt32(ImageFormat),
            ViInt32(ImageLayout),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def DefaultSetup(self, Vi):
        status = self.dll.Tkdpo2k3k4k_DefaultSetup(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def RecallSetupFromFile(self, Vi, FileName):
        status = self.dll.Tkdpo2k3k4k_RecallSetupFromFile(ViSession(Vi), ViConstString(FileName))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def RecallSetupFromMemory(self, Vi, Location):
        status = self.dll.Tkdpo2k3k4k_RecallSetupFromMemory(ViSession(Vi), ViInt32(Location))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def RecallWaveformFromFile(self, Vi, RefMemory, FileName):
        status = self.dll.Tkdpo2k3k4k_RecallWaveformFromFile(ViSession(Vi), ViInt32(RefMemory), ViConstString(FileName))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SaveAllDigitalChannels(self, Vi, FileName):
        status = self.dll.Tkdpo2k3k4k_SaveAllDigitalChannels(ViSession(Vi), ViConstString(FileName))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SaveSetupToFile(self, Vi, FileName):
        status = self.dll.Tkdpo2k3k4k_SaveSetupToFile(ViSession(Vi), ViConstString(FileName))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SaveSetupToMemory(self, Vi, Location):
        status = self.dll.Tkdpo2k3k4k_SaveSetupToMemory(ViSession(Vi), ViInt32(Location))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SaveWaveformToFile(self, Vi, Source, FileName):
        status = self.dll.Tkdpo2k3k4k_SaveWaveformToFile(ViSession(Vi), ViInt32(Source), ViConstString(FileName))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SaveWaveformToReference(self, Vi, Source, RefMemory):
        status = self.dll.Tkdpo2k3k4k_SaveWaveformToReference(ViSession(Vi), ViInt32(Source), ViInt32(RefMemory))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SaveAllWaveformsToFile(self, Vi, FileName, FileFormat):
        status = self.dll.Tkdpo2k3k4k_SaveAllWaveformsToFile(
            ViSession(Vi), ViConstString(FileName), ViInt32(FileFormat)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetSearchName(self, Vi, Index, NameBufferSize):
        Name = ARRAY_ViChar(NameBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetSearchName(ViSession(Vi), ViInt32(Index), ViInt32(NameBufferSize), Name)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Name)

    def ConfigureLogicSearchSource(self, Vi, Search, Source, Input, Threshold, PatternInput):
        status = self.dll.Tkdpo2k3k4k_ConfigureLogicSearchSource(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(Source),
            ViInt32(Input),
            ViReal64(Threshold),
            ViInt32(PatternInput),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadLogicSearchSource(self, Vi, Search, Source):
        Input = ViInt32()
        Threshold = ViReal64()
        PatternInput = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadLogicSearchSource(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(Source),
            byref(Input),
            byref(Threshold),
            byref(PatternInput),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Input = int(Input.value)
        Threshold = float(Threshold.value)
        PatternInput = int(PatternInput.value)
        return Input, Threshold, PatternInput

    def ConfigureLogicClock(self, Vi, Search, Source, EdgeType):
        status = self.dll.Tkdpo2k3k4k_ConfigureLogicClock(
            ViSession(Vi), ViConstString(Search), ViInt32(Source), ViInt32(EdgeType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadLogicClock(self, Vi, Search):
        Source = ViInt32()
        EdgeType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadLogicClock(
            ViSession(Vi), ViConstString(Search), byref(Source), byref(EdgeType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source = int(Source.value)
        EdgeType = int(EdgeType.value)
        return Source, EdgeType

    def ReadSetupHoldSearchSource(self, Vi, Search):
        Clocksource = ViInt32()
        DataSource = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadSetupHoldSearchSource(
            ViSession(Vi), ViConstString(Search), byref(Clocksource), byref(DataSource)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Clocksource = int(Clocksource.value)
        DataSource = int(DataSource.value)
        return Clocksource, DataSource

    def ConfigureAIndependentParameters(self, Vi, Search, Source, Level, UpperThreshold, LowerThreshold):
        status = self.dll.Tkdpo2k3k4k_ConfigureAIndependentParameters(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(Source),
            ViReal64(Level),
            ViReal64(UpperThreshold),
            ViReal64(LowerThreshold),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadAIndependentParameters(self, Vi, Search, Source):
        Level = ViReal64()
        UpperThreshold = ViReal64()
        LowerThreshold = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadAIndependentParameters(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(Source),
            byref(Level),
            byref(UpperThreshold),
            byref(LowerThreshold),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Level = float(Level.value)
        UpperThreshold = float(UpperThreshold.value)
        LowerThreshold = float(LowerThreshold.value)
        return Level, UpperThreshold, LowerThreshold

    def ConfigureEdge(self, Vi, Search, Level, Source, Slope):
        status = self.dll.Tkdpo2k3k4k_ConfigureEdge(
            ViSession(Vi),
            ViConstString(Search),
            ViReal64(Level),
            ViInt32(Source),
            ViInt32(Slope),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureLogicPattern(self, Vi, Search, Condition, LessLimit, MoreLimit, PatternType):
        status = self.dll.Tkdpo2k3k4k_ConfigureLogicPattern(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(Condition),
            ViReal64(LessLimit),
            ViReal64(MoreLimit),
            ViInt32(PatternType),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigurePulseWidth(self, Vi, Search, Level, Source, Condition, Polarity, HighLimit, LowLimit):
        status = self.dll.Tkdpo2k3k4k_ConfigurePulseWidth(
            ViSession(Vi),
            ViConstString(Search),
            ViReal64(Level),
            ViInt32(Source),
            ViInt32(Condition),
            ViInt32(Polarity),
            ViReal64(HighLimit),
            ViReal64(LowLimit),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureRunt(self, Vi, Search, Source, When, Polarity, Width):
        status = self.dll.Tkdpo2k3k4k_ConfigureRunt(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(Source),
            ViInt32(When),
            ViInt32(Polarity),
            ViReal64(Width),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureSetupHold(
        self,
        Vi,
        Search,
        Level,
        Source,
        ClockEdge,
        ClockSource,
        HoldTime,
        SetTime,
        ClockLevel,
    ):
        status = self.dll.Tkdpo2k3k4k_ConfigureSetupHold(
            ViSession(Vi),
            ViConstString(Search),
            ViReal64(Level),
            ViInt32(Source),
            ViInt32(ClockEdge),
            ViInt32(ClockSource),
            ViReal64(HoldTime),
            ViReal64(SetTime),
            ViReal64(ClockLevel),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureTransition(self, Vi, Search, Source, DeltaTime, When, Polarity):
        status = self.dll.Tkdpo2k3k4k_ConfigureTransition(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(Source),
            ViReal64(DeltaTime),
            ViInt32(When),
            ViInt32(Polarity),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadEdge(self, Vi, Search):
        Level = ViReal64()
        Source = ViInt32()
        Slope = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadEdge(
            ViSession(Vi),
            ViConstString(Search),
            byref(Level),
            byref(Source),
            byref(Slope),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Level = float(Level.value)
        Source = int(Source.value)
        Slope = int(Slope.value)
        return Level, Source, Slope

    def ReadLogicPattern(self, Vi, Search):
        Condition = ViInt32()
        LessLimit = ViReal64()
        MoreLimit = ViReal64()
        PatternType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadLogicPattern(
            ViSession(Vi),
            ViConstString(Search),
            byref(Condition),
            byref(LessLimit),
            byref(MoreLimit),
            byref(PatternType),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Condition = int(Condition.value)
        LessLimit = float(LessLimit.value)
        MoreLimit = float(MoreLimit.value)
        PatternType = int(PatternType.value)
        return Condition, LessLimit, MoreLimit, PatternType

    def ReadPulseWidth(self, Vi, Search):
        Level = ViReal64()
        Source = ViInt32()
        Condition = ViInt32()
        Polarity = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadPulseWidth(
            ViSession(Vi),
            ViConstString(Search),
            byref(Level),
            byref(Source),
            byref(Condition),
            byref(Polarity),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Level = float(Level.value)
        Source = int(Source.value)
        Condition = int(Condition.value)
        Polarity = int(Polarity.value)
        return Level, Source, Condition, Polarity

    def ReadRunt(self, Vi, Search):
        Source = ViInt32()
        When = ViInt32()
        Polarity = ViInt32()
        Width = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadRunt(
            ViSession(Vi),
            ViConstString(Search),
            byref(Source),
            byref(When),
            byref(Polarity),
            byref(Width),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source = int(Source.value)
        When = int(When.value)
        Polarity = int(Polarity.value)
        Width = float(Width.value)
        return Source, When, Polarity, Width

    def ReadSetupHold(self, Vi, Search):
        Level = ViReal64()
        Source = ViInt32()
        ClockEdge = ViInt32()
        Clocksource = ViInt32()
        HoldTime = ViReal64()
        SetTime = ViReal64()
        ClockLevel = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadSetupHold(
            ViSession(Vi),
            ViConstString(Search),
            byref(Level),
            byref(Source),
            byref(ClockEdge),
            byref(Clocksource),
            byref(HoldTime),
            byref(SetTime),
            byref(ClockLevel),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Level = float(Level.value)
        Source = int(Source.value)
        ClockEdge = int(ClockEdge.value)
        Clocksource = int(Clocksource.value)
        HoldTime = float(HoldTime.value)
        SetTime = float(SetTime.value)
        ClockLevel = float(ClockLevel.value)
        return Level, Source, ClockEdge, Clocksource, HoldTime, SetTime, ClockLevel

    def ReadTransition(self, Vi, Search):
        Source = ViInt32()
        DeltaTime = ViReal64()
        When = ViInt32()
        Polarity = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadTransition(
            ViSession(Vi),
            ViConstString(Search),
            byref(Source),
            byref(DeltaTime),
            byref(When),
            byref(Polarity),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source = int(Source.value)
        DeltaTime = float(DeltaTime.value)
        When = int(When.value)
        Polarity = int(Polarity.value)
        return Source, DeltaTime, When, Polarity

    def Copy(self, Vi, Search, Type):
        status = self.dll.Tkdpo2k3k4k_Copy(ViSession(Vi), ViConstString(Search), ViInt32(Type))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureARFIndependentParameters(self, Vi, Search, Source, Level, UpperThreshold, LowerThreshold):
        status = self.dll.Tkdpo2k3k4k_ConfigureARFIndependentParameters(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(Source),
            ViReal64(Level),
            ViReal64(UpperThreshold),
            ViReal64(LowerThreshold),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadARFIndependentParameters(self, Vi, Search, Source):
        Level = ViReal64()
        UpperThreshold = ViReal64()
        LowerThreshold = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadARFIndependentParameters(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(Source),
            byref(Level),
            byref(UpperThreshold),
            byref(LowerThreshold),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Level = float(Level.value)
        UpperThreshold = float(UpperThreshold.value)
        LowerThreshold = float(LowerThreshold.value)
        return Level, UpperThreshold, LowerThreshold

    def Configure11(self, Vi, Search, BusSource, BusType):
        status = self.dll.Tkdpo2k3k4k_Configure11(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(BusType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetParallelData2(self, Vi, Search, BusSource, ParallelDataBufferSize):
        ParallelData = ARRAY_ViChar(ParallelDataBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetParallelData2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(ParallelDataBufferSize),
            ParallelData,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(ParallelData)

    def SetParallelData2(self, Vi, Search, BusSource, ParallelData):
        status = self.dll.Tkdpo2k3k4k_SetParallelData2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(ParallelData),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition9(self, Vi, Search, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition9(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition9(self, Vi, Search, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition9(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataHighValue4(self, Vi, Search, BusSource, DataHighValueBufferSize):
        DataHighValue = ARRAY_ViChar(DataHighValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataHighValue4(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataHighValueBufferSize),
            DataHighValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataHighValue)

    def SetDataHighValue4(self, Vi, Search, BusSource, DataHighValue):
        status = self.dll.Tkdpo2k3k4k_SetDataHighValue4(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(DataHighValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataOffset3(self, Vi, Search, BusSource):
        DataOffset = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataOffset3(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataOffset)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataOffset.value)

    def SetDataOffset3(self, Vi, Search, BusSource, DataOffset):
        status = self.dll.Tkdpo2k3k4k_SetDataOffset3(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(DataOffset)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataQualifier5(self, Vi, Search, BusSource):
        DataQualifier = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataQualifier5(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataQualifier)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataQualifier.value)

    def SetDataQualifier5(self, Vi, Search, BusSource, DataQualifier):
        status = self.dll.Tkdpo2k3k4k_SetDataQualifier5(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataQualifier),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataValue6(self, Vi, Search, BusSource, DataValueBufferSize):
        DataValue = ARRAY_ViChar(DataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataValue6(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataValueBufferSize),
            DataValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataValue)

    def SetDataValue6(self, Vi, Search, BusSource, DataValue):
        status = self.dll.Tkdpo2k3k4k_SetDataValue6(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(DataValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataWord2(self, Vi, Search, BusSource):
        DataWord = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataWord2(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataWord)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataWord.value)

    def SetDataWord2(self, Vi, Search, BusSource, DataWord):
        status = self.dll.Tkdpo2k3k4k_SetDataWord2(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(DataWord)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition10(self, Vi, Search, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition10(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition10(self, Vi, Search, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition10(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataHighValue5(self, Vi, Search, BusSource, DataHighValueBufferSize):
        DataHighValue = ARRAY_ViChar(DataHighValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataHighValue5(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataHighValueBufferSize),
            DataHighValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataHighValue)

    def SetDataHighValue5(self, Vi, Search, BusSource, DataHighValue):
        status = self.dll.Tkdpo2k3k4k_SetDataHighValue5(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(DataHighValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataOffset4(self, Vi, Search, BusSource):
        DataOffset = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataOffset4(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataOffset)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataOffset.value)

    def SetDataOffset4(self, Vi, Search, BusSource, DataOffset):
        status = self.dll.Tkdpo2k3k4k_SetDataOffset4(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(DataOffset)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataQualifier6(self, Vi, Search, BusSource):
        DataQualifier = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataQualifier6(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataQualifier)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataQualifier.value)

    def SetDataQualifier6(self, Vi, Search, BusSource, DataQualifier):
        status = self.dll.Tkdpo2k3k4k_SetDataQualifier6(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataQualifier),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataValue7(self, Vi, Search, BusSource, DataValueBufferSize):
        DataValue = ARRAY_ViChar(DataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataValue7(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataValueBufferSize),
            DataValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataValue)

    def SetDataValue7(self, Vi, Search, BusSource, DataValue):
        status = self.dll.Tkdpo2k3k4k_SetDataValue7(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(DataValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataSize5(self, Vi, Search, BusSource):
        DataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataSize5(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataSize.value)

    def SetDataSize5(self, Vi, Search, BusSource, DataSize):
        status = self.dll.Tkdpo2k3k4k_SetDataSize5(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(DataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressValue4(self, Vi, Search, BusSource, AddressValueBufferSize):
        AddressValue = ARRAY_ViChar(AddressValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetAddressValue4(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(AddressValueBufferSize),
            AddressValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(AddressValue)

    def SetAddressValue4(self, Vi, Search, BusSource, AddressValue):
        status = self.dll.Tkdpo2k3k4k_SetAddressValue4(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(AddressValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressType3(self, Vi, Search, BusSource):
        AddressType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetAddressType3(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(AddressType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(AddressType.value)

    def SetAddressType3(self, Vi, Search, BusSource, AddressType):
        status = self.dll.Tkdpo2k3k4k_SetAddressType3(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(AddressType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressMode4(self, Vi, Search, BusSource, AddressModeBufferSize):
        AddressMode = ARRAY_ViChar(AddressModeBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetAddressMode4(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(AddressModeBufferSize),
            AddressMode,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(AddressMode)

    def SetAddressMode4(self, Vi, Search, BusSource, AddressMode):
        status = self.dll.Tkdpo2k3k4k_SetAddressMode4(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(AddressMode),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetEndPointValue3(self, Vi, Search, BusSource, EndPointValueBufferSize):
        EndPointValue = ARRAY_ViChar(EndPointValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetEndPointValue3(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(EndPointValueBufferSize),
            EndPointValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(EndPointValue)

    def SetEndPointValue3(self, Vi, Search, BusSource, EndPointValue):
        status = self.dll.Tkdpo2k3k4k_SetEndPointValue3(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(EndPointValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetErrorType4(self, Vi, Search, BusSource):
        ErrorType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetErrorType4(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(ErrorType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(ErrorType.value)

    def SetErrorType4(self, Vi, Search, BusSource, ErrorType):
        status = self.dll.Tkdpo2k3k4k_SetErrorType4(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(ErrorType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetHandshakeType2(self, Vi, Search, BusSource):
        HandshakeType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetHandshakeType2(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(HandshakeType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(HandshakeType.value)

    def SetHandshakeType2(self, Vi, Search, BusSource, HandshakeType):
        status = self.dll.Tkdpo2k3k4k_SetHandshakeType2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(HandshakeType),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetSofFrameNumber2(self, Vi, Search, BusSource, SOFFrameNumberBufferSize):
        SOFFrameNumber = ARRAY_ViChar(SOFFrameNumberBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetSofFrameNumber2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(SOFFrameNumberBufferSize),
            SOFFrameNumber,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(SOFFrameNumber)

    def SetSofFrameNumber2(self, Vi, Search, BusSource, SOFFrameNumber):
        status = self.dll.Tkdpo2k3k4k_SetSofFrameNumber2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(SOFFrameNumber),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetSpecialType2(self, Vi, Search, BusSource):
        SpecialType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetSpecialType2(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(SpecialType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(SpecialType.value)

    def SetSpecialType2(self, Vi, Search, BusSource, SpecialType):
        status = self.dll.Tkdpo2k3k4k_SetSpecialType2(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(SpecialType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetTokenType2(self, Vi, Search, BusSource):
        TokenType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetTokenType2(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(TokenType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(TokenType.value)

    def SetTokenType2(self, Vi, Search, BusSource, TokenType):
        status = self.dll.Tkdpo2k3k4k_SetTokenType2(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(TokenType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition11(self, Vi, Search, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition11(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition11(self, Vi, Search, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition11(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetRxDataValue3(self, Vi, Search, BusSource, RXDataValueBufferSize):
        RXDataValue = ARRAY_ViChar(RXDataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetRxDataValue3(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(RXDataValueBufferSize),
            RXDataValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(RXDataValue)

    def SetRxDataValue3(self, Vi, Search, BusSource, RXDataValue):
        status = self.dll.Tkdpo2k3k4k_SetRxDataValue3(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(RXDataValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetTxDataSize3(self, Vi, Search, BusSource):
        TXDataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetTxDataSize3(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(TXDataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(TXDataSize.value)

    def SetTxDataSize3(self, Vi, Search, BusSource, TXDataSize):
        status = self.dll.Tkdpo2k3k4k_SetTxDataSize3(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(TXDataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetTxDataValue3(self, Vi, Search, BusSource, TXDataValueBufferSize):
        TXDataValue = ARRAY_ViChar(TXDataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetTxDataValue3(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(TXDataValueBufferSize),
            TXDataValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(TXDataValue)

    def SetTxDataValue3(self, Vi, Search, BusSource, TXDataValue):
        status = self.dll.Tkdpo2k3k4k_SetTxDataValue3(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(TXDataValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition12(self, Vi, Search, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition12(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition12(self, Vi, Search, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition12(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetRxDataSize2(self, Vi, Search, BusSource):
        RXDataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetRxDataSize2(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(RXDataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(RXDataSize.value)

    def SetRxDataSize2(self, Vi, Search, BusSource, RXDataSize):
        status = self.dll.Tkdpo2k3k4k_SetRxDataSize2(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(RXDataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetRxDataValue4(self, Vi, Search, BusSource, RXDataValueBufferSize):
        RXDataValue = ARRAY_ViChar(RXDataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetRxDataValue4(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(RXDataValueBufferSize),
            RXDataValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(RXDataValue)

    def SetRxDataValue4(self, Vi, Search, BusSource, RXDataValue):
        status = self.dll.Tkdpo2k3k4k_SetRxDataValue4(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(RXDataValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetTxDataSize4(self, Vi, Search, BusSource):
        TXDataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetTxDataSize4(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(TXDataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(TXDataSize.value)

    def SetTxDataSize4(self, Vi, Search, BusSource, TXDataSize):
        status = self.dll.Tkdpo2k3k4k_SetTxDataSize4(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(TXDataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetTxDataValue4(self, Vi, Search, BusSource, TXDataValueBufferSize):
        TXDataValue = ARRAY_ViChar(TXDataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetTxDataValue4(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(TXDataValueBufferSize),
            TXDataValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(TXDataValue)

    def SetTxDataValue4(self, Vi, Search, BusSource, TXDataValue):
        status = self.dll.Tkdpo2k3k4k_SetTxDataValue4(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(TXDataValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataValue8(self, Vi, Search, BusSource, DataValueBufferSize):
        DataValue = ARRAY_ViChar(DataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataValue8(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataValueBufferSize),
            DataValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataValue)

    def SetDataValue8(self, Vi, Search, BusSource, DataValue):
        status = self.dll.Tkdpo2k3k4k_SetDataValue8(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(DataValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataQualifier7(self, Vi, Search, BusSource):
        DataQualifier = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataQualifier7(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataQualifier)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataQualifier.value)

    def SetDataQualifier7(self, Vi, Search, BusSource, DataQualifier):
        status = self.dll.Tkdpo2k3k4k_SetDataQualifier7(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataQualifier),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataHighValue6(self, Vi, Search, BusSource, DataHighValueBufferSize):
        DataHighValue = ARRAY_ViChar(DataHighValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataHighValue6(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataHighValueBufferSize),
            DataHighValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataHighValue)

    def SetDataHighValue6(self, Vi, Search, BusSource, DataHighValue):
        status = self.dll.Tkdpo2k3k4k_SetDataHighValue6(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(DataHighValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition13(self, Vi, Search, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition13(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition13(self, Vi, Search, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition13(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataSize6(self, Vi, Search, BusSource):
        DataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataSize6(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataSize.value)

    def SetDataSize6(self, Vi, Search, BusSource, DataSize):
        status = self.dll.Tkdpo2k3k4k_SetDataSize6(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(DataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetErrorType5(self, Vi, Search, BusSource):
        ErrorType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetErrorType5(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(ErrorType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(ErrorType.value)

    def SetErrorType5(self, Vi, Search, BusSource, ErrorType):
        status = self.dll.Tkdpo2k3k4k_SetErrorType5(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(ErrorType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetIdentifierValue2(self, Vi, Search, BusSource, IdentifierValueBufferSize):
        IdentifierValue = ARRAY_ViChar(IdentifierValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetIdentifierValue2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(IdentifierValueBufferSize),
            IdentifierValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(IdentifierValue)

    def SetIdentifierValue2(self, Vi, Search, BusSource, IdentifierValue):
        status = self.dll.Tkdpo2k3k4k_SetIdentifierValue2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(IdentifierValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataSize7(self, Vi, Search, BusSource):
        DataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataSize7(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataSize.value)

    def SetDataSize7(self, Vi, Search, BusSource, DataSize):
        status = self.dll.Tkdpo2k3k4k_SetDataSize7(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(DataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataValue9(self, Vi, Search, BusSource, DataValueBufferSize):
        DataValue = ARRAY_ViChar(DataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataValue9(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataValueBufferSize),
            DataValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataValue)

    def SetDataValue9(self, Vi, Search, BusSource, DataValue):
        status = self.dll.Tkdpo2k3k4k_SetDataValue9(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(DataValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressValue5(self, Vi, Search, BusSource, AddressValueBufferSize):
        AddressValue = ARRAY_ViChar(AddressValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetAddressValue5(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(AddressValueBufferSize),
            AddressValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(AddressValue)

    def SetAddressValue5(self, Vi, Search, BusSource, AddressValue):
        status = self.dll.Tkdpo2k3k4k_SetAddressValue5(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(AddressValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataDirection3(self, Vi, Search, BusSource):
        DataDirection = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataDirection3(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataDirection)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataDirection.value)

    def SetDataDirection3(self, Vi, Search, BusSource, DataDirection):
        status = self.dll.Tkdpo2k3k4k_SetDataDirection3(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataDirection),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition14(self, Vi, Search, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition14(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition14(self, Vi, Search, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition14(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressMode5(self, Vi, Search, BusSource):
        AddressMode = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetAddressMode5(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(AddressMode)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(AddressMode.value)

    def SetAddressMode5(self, Vi, Search, BusSource, AddressMode):
        status = self.dll.Tkdpo2k3k4k_SetAddressMode5(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(AddressMode)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition15(self, Vi, Search, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition15(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition15(self, Vi, Search, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition15(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetEofType2(self, Vi, Search, BusSource):
        EOFType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetEofType2(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(EOFType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(EOFType.value)

    def SetEofType2(self, Vi, Search, BusSource, EOFType):
        status = self.dll.Tkdpo2k3k4k_SetEofType2(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(EOFType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetErrorType6(self, Vi, Search, BusSource):
        ErrorType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetErrorType6(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(ErrorType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(ErrorType.value)

    def SetErrorType6(self, Vi, Search, BusSource, ErrorType):
        status = self.dll.Tkdpo2k3k4k_SetErrorType6(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(ErrorType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetFrameType3(self, Vi, Search, BusSource):
        FrameType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetFrameType3(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(FrameType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(FrameType.value)

    def SetFrameType3(self, Vi, Search, BusSource, FrameType):
        status = self.dll.Tkdpo2k3k4k_SetFrameType3(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(FrameType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureCycleCount2(self, Vi, Search, BusSource, HighValue, Qualifier, Value):
        status = self.dll.Tkdpo2k3k4k_ConfigureCycleCount2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(HighValue),
            ViInt32(Qualifier),
            ViConstString(Value),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadCycleCount2(self, Vi, Search, BusSource, HighValueBufferSize, ValueBufferSize):
        HighValue = ARRAY_ViChar(HighValueBufferSize)
        Qualifier = ViInt32()
        Value = ARRAY_ViChar(ValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_ReadCycleCount2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(HighValueBufferSize),
            HighValue,
            byref(Qualifier),
            ViInt32(ValueBufferSize),
            Value,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        HighValue = decode(HighValue)
        Qualifier = int(Qualifier.value)
        Value = decode(Value)
        return HighValue, Qualifier, Value

    def ConfigureData2(self, Vi, Search, BusSource, HighValue, Offset, Qualifier, Size, Value):
        status = self.dll.Tkdpo2k3k4k_ConfigureData2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(HighValue),
            ViInt32(Offset),
            ViInt32(Qualifier),
            ViInt32(Size),
            ViConstString(Value),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadData2(self, Vi, Search, BusSource, HighValueBufferSize, ValueBufferSize):
        HighValue = ARRAY_ViChar(HighValueBufferSize)
        Offset = ViInt32()
        Qualifier = ViInt32()
        Size = ViInt32()
        Value = ARRAY_ViChar(ValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_ReadData2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(HighValueBufferSize),
            HighValue,
            byref(Offset),
            byref(Qualifier),
            byref(Size),
            ViInt32(ValueBufferSize),
            Value,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        HighValue = decode(HighValue)
        Offset = int(Offset.value)
        Qualifier = int(Qualifier.value)
        Size = int(Size.value)
        Value = decode(Value)
        return HighValue, Offset, Qualifier, Size, Value

    def ConfigureFrameID2(self, Vi, Search, BusSource, HighValue, Qualifier, Value):
        status = self.dll.Tkdpo2k3k4k_ConfigureFrameID2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(HighValue),
            ViInt32(Qualifier),
            ViConstString(Value),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadFrameID2(self, Vi, Search, BusSource, HighValueBufferSize, ValueBufferSize):
        HighValue = ARRAY_ViChar(HighValueBufferSize)
        Qualifier = ViInt32()
        Value = ARRAY_ViChar(ValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_ReadFrameID2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(HighValueBufferSize),
            HighValue,
            byref(Qualifier),
            ViInt32(ValueBufferSize),
            Value,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        HighValue = decode(HighValue)
        Qualifier = int(Qualifier.value)
        Value = decode(Value)
        return HighValue, Qualifier, Value

    def ConfigureHeader2(
        self,
        Vi,
        Search,
        BusSource,
        CRC,
        CycleCount,
        FrameID,
        IndicatorBits,
        PayloadLength,
    ):
        status = self.dll.Tkdpo2k3k4k_ConfigureHeader2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(CRC),
            ViConstString(CycleCount),
            ViConstString(FrameID),
            ViConstString(IndicatorBits),
            ViConstString(PayloadLength),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadHeader2(
        self,
        Vi,
        Search,
        BusSource,
        CRCBufferSize,
        CycleCountBufferSize,
        FrameIDBufferSize,
        IndicatorBitsBufferSize,
        PayloadLengthBufferSize,
    ):
        CRC = ARRAY_ViChar(CRCBufferSize)
        CycleCount = ARRAY_ViChar(CycleCountBufferSize)
        FrameID = ARRAY_ViChar(FrameIDBufferSize)
        IndicatorBits = ARRAY_ViChar(IndicatorBitsBufferSize)
        PayloadLength = ARRAY_ViChar(PayloadLengthBufferSize)
        status = self.dll.Tkdpo2k3k4k_ReadHeader2(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(CRCBufferSize),
            CRC,
            ViInt32(CycleCountBufferSize),
            CycleCount,
            ViInt32(FrameIDBufferSize),
            FrameID,
            ViInt32(IndicatorBitsBufferSize),
            IndicatorBits,
            ViInt32(PayloadLengthBufferSize),
            PayloadLength,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        CRC = decode(CRC)
        CycleCount = decode(CycleCount)
        FrameID = decode(FrameID)
        IndicatorBits = decode(IndicatorBits)
        PayloadLength = decode(PayloadLength)
        return CRC, CycleCount, FrameID, IndicatorBits, PayloadLength

    def GetCondition16(self, Vi, Search, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition16(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition16(self, Vi, Search, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition16(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(Condition)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataQualifier8(self, Vi, Search, BusSource):
        DataQualifier = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataQualifier8(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataQualifier)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataQualifier.value)

    def SetDataQualifier8(self, Vi, Search, BusSource, DataQualifier):
        status = self.dll.Tkdpo2k3k4k_SetDataQualifier8(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataQualifier),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataValue10(self, Vi, Search, BusSource, DataValueBufferSize):
        DataValue = ARRAY_ViChar(DataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataValue10(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataValueBufferSize),
            DataValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataValue)

    def SetDataValue10(self, Vi, Search, BusSource, DataValue):
        status = self.dll.Tkdpo2k3k4k_SetDataValue10(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(DataValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataDirection4(self, Vi, Search, BusSource):
        DataDirection = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataDirection4(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataDirection)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataDirection.value)

    def SetDataDirection4(self, Vi, Search, BusSource, DataDirection):
        status = self.dll.Tkdpo2k3k4k_SetDataDirection4(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(DataDirection),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataSize8(self, Vi, Search, BusSource):
        DataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataSize8(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(DataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataSize.value)

    def SetDataSize8(self, Vi, Search, BusSource, DataSize):
        status = self.dll.Tkdpo2k3k4k_SetDataSize8(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(DataSize)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetFrameType4(self, Vi, Search, BusSource):
        FrameType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetFrameType4(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(FrameType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(FrameType.value)

    def SetFrameType4(self, Vi, Search, BusSource, FrameType):
        status = self.dll.Tkdpo2k3k4k_SetFrameType4(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(FrameType)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressMode6(self, Vi, Search, BusSource):
        AddressMode = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetAddressMode6(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), byref(AddressMode)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(AddressMode.value)

    def SetAddressMode6(self, Vi, Search, BusSource, AddressMode):
        status = self.dll.Tkdpo2k3k4k_SetAddressMode6(
            ViSession(Vi), ViConstString(Search), ViInt32(BusSource), ViInt32(AddressMode)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressValue6(self, Vi, Search, BusSource, AddressValueBufferSize):
        AddressValue = ARRAY_ViChar(AddressValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetAddressValue6(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViInt32(AddressValueBufferSize),
            AddressValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(AddressValue)

    def SetAddressValue6(self, Vi, Search, BusSource, AddressValue):
        status = self.dll.Tkdpo2k3k4k_SetAddressValue6(
            ViSession(Vi),
            ViConstString(Search),
            ViInt32(BusSource),
            ViConstString(AddressValue),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetBLevel(self, Vi, Source):
        BLevel = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetBLevel(ViSession(Vi), ViInt32(Source), byref(BLevel))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(BLevel.value)

    def SetBLevel(self, Vi, Source, BLevel):
        status = self.dll.Tkdpo2k3k4k_SetBLevel(ViSession(Vi), ViInt32(Source), ViReal64(BLevel))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureBIndependentParameters(self, Vi, Source, Level, UpperThreshold, LowerThreshold):
        status = self.dll.Tkdpo2k3k4k_ConfigureBIndependentParameters(
            ViSession(Vi),
            ViInt32(Source),
            ViReal64(Level),
            ViReal64(UpperThreshold),
            ViReal64(LowerThreshold),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadBIndependentParameters(self, Vi, Source):
        Level = ViReal64()
        UpperThreshold = ViReal64()
        LowerThreshold = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadBIndependentParameters(
            ViSession(Vi),
            ViInt32(Source),
            byref(Level),
            byref(UpperThreshold),
            byref(LowerThreshold),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Level = float(Level.value)
        UpperThreshold = float(UpperThreshold.value)
        LowerThreshold = float(LowerThreshold.value)
        return Level, UpperThreshold, LowerThreshold

    def ConfigureAIndependentParameters2(self, Vi, Source, Level, UpperThreshold, LowerThreshold):
        status = self.dll.Tkdpo2k3k4k_ConfigureAIndependentParameters2(
            ViSession(Vi),
            ViInt32(Source),
            ViReal64(Level),
            ViReal64(UpperThreshold),
            ViReal64(LowerThreshold),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadAIndependentParameters2(self, Vi, Source):
        Level = ViReal64()
        UpperThreshold = ViReal64()
        LowerThreshold = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadAIndependentParameters2(
            ViSession(Vi),
            ViInt32(Source),
            byref(Level),
            byref(UpperThreshold),
            byref(LowerThreshold),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Level = float(Level.value)
        UpperThreshold = float(UpperThreshold.value)
        LowerThreshold = float(LowerThreshold.value)
        return Level, UpperThreshold, LowerThreshold

    def ConfigureAOnlyTrigger(self, Vi, HoldoffTime):
        status = self.dll.Tkdpo2k3k4k_ConfigureAOnlyTrigger(ViSession(Vi), ViReal64(HoldoffTime))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureAThenBAfterEventsTrigger(self, Vi, HoldoffTime, Events):
        status = self.dll.Tkdpo2k3k4k_ConfigureAThenBAfterEventsTrigger(
            ViSession(Vi), ViReal64(HoldoffTime), ViInt32(Events)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureAThenBAfterTimeTrigger(self, Vi, HoldoffTime, DelayTime):
        status = self.dll.Tkdpo2k3k4k_ConfigureAThenBAfterTimeTrigger(
            ViSession(Vi), ViReal64(HoldoffTime), ViReal64(DelayTime)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadARFIndependentParameters2(self, Vi):
        UpperThreshold = ViReal64()
        LowerThreshold = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadARFIndependentParameters2(
            ViSession(Vi), byref(UpperThreshold), byref(LowerThreshold)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        UpperThreshold = float(UpperThreshold.value)
        LowerThreshold = float(LowerThreshold.value)
        return UpperThreshold, LowerThreshold

    def ConfigureARFIndependentParameters2(self, Vi, UpperThreshold, LowerThreshold):
        status = self.dll.Tkdpo2k3k4k_ConfigureARFIndependentParameters2(
            ViSession(Vi), ViReal64(UpperThreshold), ViReal64(LowerThreshold)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Configure4(self, Vi, BusSource, BusType):
        status = self.dll.Tkdpo2k3k4k_Configure4(ViSession(Vi), ViInt32(BusSource), ViInt32(BusType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetParallelData(self, Vi, BusSource, ParallelDataBufferSize):
        ParallelData = ARRAY_ViChar(ParallelDataBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetParallelData(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(ParallelDataBufferSize),
            ParallelData,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(ParallelData)

    def SetParallelData(self, Vi, BusSource, ParallelData):
        status = self.dll.Tkdpo2k3k4k_SetParallelData(ViSession(Vi), ViInt32(BusSource), ViConstString(ParallelData))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition(self, Vi, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition(ViSession(Vi), ViInt32(BusSource), byref(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition(self, Vi, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition(ViSession(Vi), ViInt32(BusSource), ViInt32(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataHighValue(self, Vi, BusSource, DataHighValueBufferSize):
        DataHighValue = ARRAY_ViChar(DataHighValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataHighValue(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(DataHighValueBufferSize),
            DataHighValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataHighValue)

    def SetDataHighValue(self, Vi, BusSource, DataHighValue):
        status = self.dll.Tkdpo2k3k4k_SetDataHighValue(ViSession(Vi), ViInt32(BusSource), ViConstString(DataHighValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataOffset(self, Vi, BusSource):
        DataOffset = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataOffset(ViSession(Vi), ViInt32(BusSource), byref(DataOffset))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataOffset.value)

    def SetDataOffset(self, Vi, BusSource, DataOffset):
        status = self.dll.Tkdpo2k3k4k_SetDataOffset(ViSession(Vi), ViInt32(BusSource), ViInt32(DataOffset))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataQualifier(self, Vi, BusSource):
        DataQualifier = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataQualifier(ViSession(Vi), ViInt32(BusSource), byref(DataQualifier))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataQualifier.value)

    def SetDataQualifier(self, Vi, BusSource, DataQualifier):
        status = self.dll.Tkdpo2k3k4k_SetDataQualifier(ViSession(Vi), ViInt32(BusSource), ViInt32(DataQualifier))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataValue(self, Vi, BusSource, DataValueBufferSize):
        DataValue = ARRAY_ViChar(DataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataValue(
            ViSession(Vi), ViInt32(BusSource), ViInt32(DataValueBufferSize), DataValue
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataValue)

    def SetDataValue(self, Vi, BusSource, DataValue):
        status = self.dll.Tkdpo2k3k4k_SetDataValue(ViSession(Vi), ViInt32(BusSource), ViConstString(DataValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataWord(self, Vi, BusSource):
        DataWord = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataWord(ViSession(Vi), ViInt32(BusSource), byref(DataWord))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataWord.value)

    def SetDataWord(self, Vi, BusSource, DataWord):
        status = self.dll.Tkdpo2k3k4k_SetDataWord(ViSession(Vi), ViInt32(BusSource), ViInt32(DataWord))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataSize(self, Vi, BusSource):
        DataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataSize(ViSession(Vi), ViInt32(BusSource), byref(DataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataSize.value)

    def SetDataSize(self, Vi, BusSource, DataSize):
        status = self.dll.Tkdpo2k3k4k_SetDataSize(ViSession(Vi), ViInt32(BusSource), ViInt32(DataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition2(self, Vi, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition2(ViSession(Vi), ViInt32(BusSource), byref(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition2(self, Vi, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition2(ViSession(Vi), ViInt32(BusSource), ViInt32(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataQualifier2(self, Vi, BusSource):
        DataQualifier = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataQualifier2(ViSession(Vi), ViInt32(BusSource), byref(DataQualifier))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataQualifier.value)

    def SetDataQualifier2(self, Vi, BusSource, DataQualifier):
        status = self.dll.Tkdpo2k3k4k_SetDataQualifier2(ViSession(Vi), ViInt32(BusSource), ViInt32(DataQualifier))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataValue2(self, Vi, BusSource, DataValueBufferSize):
        DataValue = ARRAY_ViChar(DataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataValue2(
            ViSession(Vi), ViInt32(BusSource), ViInt32(DataValueBufferSize), DataValue
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataValue)

    def SetDataValue2(self, Vi, BusSource, DataValue):
        status = self.dll.Tkdpo2k3k4k_SetDataValue2(ViSession(Vi), ViInt32(BusSource), ViConstString(DataValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataDirection(self, Vi, BusSource):
        DataDirection = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataDirection(ViSession(Vi), ViInt32(BusSource), byref(DataDirection))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataDirection.value)

    def SetDataDirection(self, Vi, BusSource, DataDirection):
        status = self.dll.Tkdpo2k3k4k_SetDataDirection(ViSession(Vi), ViInt32(BusSource), ViInt32(DataDirection))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetFrameType(self, Vi, BusSource):
        FrameType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetFrameType(ViSession(Vi), ViInt32(BusSource), byref(FrameType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(FrameType.value)

    def SetFrameType(self, Vi, BusSource, FrameType):
        status = self.dll.Tkdpo2k3k4k_SetFrameType(ViSession(Vi), ViInt32(BusSource), ViInt32(FrameType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressMode(self, Vi, BusSource):
        AddressMode = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetAddressMode(ViSession(Vi), ViInt32(BusSource), byref(AddressMode))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(AddressMode.value)

    def SetAddressMode(self, Vi, BusSource, AddressMode):
        status = self.dll.Tkdpo2k3k4k_SetAddressMode(ViSession(Vi), ViInt32(BusSource), ViInt32(AddressMode))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressValue(self, Vi, BusSource, AddressValueBufferSize):
        AddressValue = ARRAY_ViChar(AddressValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetAddressValue(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(AddressValueBufferSize),
            AddressValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(AddressValue)

    def SetAddressValue(self, Vi, BusSource, AddressValue):
        status = self.dll.Tkdpo2k3k4k_SetAddressValue(ViSession(Vi), ViInt32(BusSource), ViConstString(AddressValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition3(self, Vi, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition3(ViSession(Vi), ViInt32(BusSource), byref(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition3(self, Vi, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition3(ViSession(Vi), ViInt32(BusSource), ViInt32(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureCycleCount(self, Vi, BusSource, HighValue, Qualifier, Value):
        status = self.dll.Tkdpo2k3k4k_ConfigureCycleCount(
            ViSession(Vi),
            ViInt32(BusSource),
            ViConstString(HighValue),
            ViInt32(Qualifier),
            ViConstString(Value),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadCycleCount(self, Vi, BusSource, HighValueBufferSize, ValueBufferSize):
        HighValue = ARRAY_ViChar(HighValueBufferSize)
        Qualifier = ViInt32()
        Value = ARRAY_ViChar(ValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_ReadCycleCount(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(HighValueBufferSize),
            HighValue,
            byref(Qualifier),
            ViInt32(ValueBufferSize),
            Value,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        HighValue = decode(HighValue)
        Qualifier = int(Qualifier.value)
        Value = decode(Value)
        return HighValue, Qualifier, Value

    def ConfigureData(self, Vi, BusSource, HighValue, Offset, Qualifier, Size, Value):
        status = self.dll.Tkdpo2k3k4k_ConfigureData(
            ViSession(Vi),
            ViInt32(BusSource),
            ViConstString(HighValue),
            ViInt32(Offset),
            ViInt32(Qualifier),
            ViInt32(Size),
            ViConstString(Value),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadData(self, Vi, BusSource, HighValueBufferSize, ValueBufferSize):
        HighValue = ARRAY_ViChar(HighValueBufferSize)
        Offset = ViInt32()
        Qualifier = ViInt32()
        Size = ViInt32()
        Value = ARRAY_ViChar(ValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_ReadData(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(HighValueBufferSize),
            HighValue,
            byref(Offset),
            byref(Qualifier),
            byref(Size),
            ViInt32(ValueBufferSize),
            Value,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        HighValue = decode(HighValue)
        Offset = int(Offset.value)
        Qualifier = int(Qualifier.value)
        Size = int(Size.value)
        Value = decode(Value)
        return HighValue, Offset, Qualifier, Size, Value

    def ConfigureFrameID(self, Vi, BusSource, HighValue, Qualifier, Value):
        status = self.dll.Tkdpo2k3k4k_ConfigureFrameID(
            ViSession(Vi),
            ViInt32(BusSource),
            ViConstString(HighValue),
            ViInt32(Qualifier),
            ViConstString(Value),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadFrameID(self, Vi, BusSource, HighValueBufferSize, ValueBufferSize):
        HighValue = ARRAY_ViChar(HighValueBufferSize)
        Qualifier = ViInt32()
        Value = ARRAY_ViChar(ValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_ReadFrameID(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(HighValueBufferSize),
            HighValue,
            byref(Qualifier),
            ViInt32(ValueBufferSize),
            Value,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        HighValue = decode(HighValue)
        Qualifier = int(Qualifier.value)
        Value = decode(Value)
        return HighValue, Qualifier, Value

    def ConfigureHeader(self, Vi, BusSource, CRC, CycleCount, FrameID, IndicatorBits, PayloadLength):
        status = self.dll.Tkdpo2k3k4k_ConfigureHeader(
            ViSession(Vi),
            ViInt32(BusSource),
            ViConstString(CRC),
            ViConstString(CycleCount),
            ViConstString(FrameID),
            ViConstString(IndicatorBits),
            ViConstString(PayloadLength),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadHeader(
        self,
        Vi,
        BusSource,
        CRCBufferSize,
        CycleCountBufferSize,
        FrameIDBufferSize,
        IndicatorBitsBufferSize,
        PayloadLengthBufferSize,
    ):
        CRC = ARRAY_ViChar(CRCBufferSize)
        CycleCount = ARRAY_ViChar(CycleCountBufferSize)
        FrameID = ARRAY_ViChar(FrameIDBufferSize)
        IndicatorBits = ARRAY_ViChar(IndicatorBitsBufferSize)
        PayloadLength = ARRAY_ViChar(PayloadLengthBufferSize)
        status = self.dll.Tkdpo2k3k4k_ReadHeader(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(CRCBufferSize),
            CRC,
            ViInt32(CycleCountBufferSize),
            CycleCount,
            ViInt32(FrameIDBufferSize),
            FrameID,
            ViInt32(IndicatorBitsBufferSize),
            IndicatorBits,
            ViInt32(PayloadLengthBufferSize),
            PayloadLength,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        CRC = decode(CRC)
        CycleCount = decode(CycleCount)
        FrameID = decode(FrameID)
        IndicatorBits = decode(IndicatorBits)
        PayloadLength = decode(PayloadLength)
        return CRC, CycleCount, FrameID, IndicatorBits, PayloadLength

    def GetEofType(self, Vi, BusSource):
        EOFType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetEofType(ViSession(Vi), ViInt32(BusSource), byref(EOFType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(EOFType.value)

    def SetEofType(self, Vi, BusSource, EOFType):
        status = self.dll.Tkdpo2k3k4k_SetEofType(ViSession(Vi), ViInt32(BusSource), ViInt32(EOFType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetErrorType(self, Vi, BusSource):
        ErrorType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetErrorType(ViSession(Vi), ViInt32(BusSource), byref(ErrorType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(ErrorType.value)

    def SetErrorType(self, Vi, BusSource, ErrorType):
        status = self.dll.Tkdpo2k3k4k_SetErrorType(ViSession(Vi), ViInt32(BusSource), ViInt32(ErrorType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetFrameType2(self, Vi, BusSource):
        FrameType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetFrameType2(ViSession(Vi), ViInt32(BusSource), byref(FrameType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(FrameType.value)

    def SetFrameType2(self, Vi, BusSource, FrameType):
        status = self.dll.Tkdpo2k3k4k_SetFrameType2(ViSession(Vi), ViInt32(BusSource), ViInt32(FrameType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataSize2(self, Vi, BusSource):
        DataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataSize2(ViSession(Vi), ViInt32(BusSource), byref(DataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataSize.value)

    def SetDataSize2(self, Vi, BusSource, DataSize):
        status = self.dll.Tkdpo2k3k4k_SetDataSize2(ViSession(Vi), ViInt32(BusSource), ViInt32(DataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataValue3(self, Vi, BusSource, DataValueBufferSize):
        DataValue = ARRAY_ViChar(DataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataValue3(
            ViSession(Vi), ViInt32(BusSource), ViInt32(DataValueBufferSize), DataValue
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataValue)

    def SetDataValue3(self, Vi, BusSource, DataValue):
        status = self.dll.Tkdpo2k3k4k_SetDataValue3(ViSession(Vi), ViInt32(BusSource), ViConstString(DataValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressValue2(self, Vi, BusSource, AddressValueBufferSize):
        AddressValue = ARRAY_ViChar(AddressValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetAddressValue2(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(AddressValueBufferSize),
            AddressValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(AddressValue)

    def SetAddressValue2(self, Vi, BusSource, AddressValue):
        status = self.dll.Tkdpo2k3k4k_SetAddressValue2(ViSession(Vi), ViInt32(BusSource), ViConstString(AddressValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataDirection2(self, Vi, BusSource):
        DataDirection = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataDirection2(ViSession(Vi), ViInt32(BusSource), byref(DataDirection))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataDirection.value)

    def SetDataDirection2(self, Vi, BusSource, DataDirection):
        status = self.dll.Tkdpo2k3k4k_SetDataDirection2(ViSession(Vi), ViInt32(BusSource), ViInt32(DataDirection))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition4(self, Vi, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition4(ViSession(Vi), ViInt32(BusSource), byref(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition4(self, Vi, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition4(ViSession(Vi), ViInt32(BusSource), ViInt32(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressMode2(self, Vi, BusSource):
        AddressMode = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetAddressMode2(ViSession(Vi), ViInt32(BusSource), byref(AddressMode))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(AddressMode.value)

    def SetAddressMode2(self, Vi, BusSource, AddressMode):
        status = self.dll.Tkdpo2k3k4k_SetAddressMode2(ViSession(Vi), ViInt32(BusSource), ViInt32(AddressMode))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataValue4(self, Vi, BusSource, DataValueBufferSize):
        DataValue = ARRAY_ViChar(DataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataValue4(
            ViSession(Vi), ViInt32(BusSource), ViInt32(DataValueBufferSize), DataValue
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataValue)

    def SetDataValue4(self, Vi, BusSource, DataValue):
        status = self.dll.Tkdpo2k3k4k_SetDataValue4(ViSession(Vi), ViInt32(BusSource), ViConstString(DataValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataQualifier3(self, Vi, BusSource):
        DataQualifier = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataQualifier3(ViSession(Vi), ViInt32(BusSource), byref(DataQualifier))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataQualifier.value)

    def SetDataQualifier3(self, Vi, BusSource, DataQualifier):
        status = self.dll.Tkdpo2k3k4k_SetDataQualifier3(ViSession(Vi), ViInt32(BusSource), ViInt32(DataQualifier))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataHighValue2(self, Vi, BusSource, DataHighValueBufferSize):
        DataHighValue = ARRAY_ViChar(DataHighValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataHighValue2(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(DataHighValueBufferSize),
            DataHighValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataHighValue)

    def SetDataHighValue2(self, Vi, BusSource, DataHighValue):
        status = self.dll.Tkdpo2k3k4k_SetDataHighValue2(ViSession(Vi), ViInt32(BusSource), ViConstString(DataHighValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition5(self, Vi, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition5(ViSession(Vi), ViInt32(BusSource), byref(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition5(self, Vi, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition5(ViSession(Vi), ViInt32(BusSource), ViInt32(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataSize3(self, Vi, BusSource):
        DataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataSize3(ViSession(Vi), ViInt32(BusSource), byref(DataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataSize.value)

    def SetDataSize3(self, Vi, BusSource, DataSize):
        status = self.dll.Tkdpo2k3k4k_SetDataSize3(ViSession(Vi), ViInt32(BusSource), ViInt32(DataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetErrorType2(self, Vi, BusSource):
        ErrorType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetErrorType2(ViSession(Vi), ViInt32(BusSource), byref(ErrorType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(ErrorType.value)

    def SetErrorType2(self, Vi, BusSource, ErrorType):
        status = self.dll.Tkdpo2k3k4k_SetErrorType2(ViSession(Vi), ViInt32(BusSource), ViInt32(ErrorType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetIdentifierValue(self, Vi, BusSource, IdentifierValueBufferSize):
        IdentifierValue = ARRAY_ViChar(IdentifierValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetIdentifierValue(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(IdentifierValueBufferSize),
            IdentifierValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(IdentifierValue)

    def SetIdentifierValue(self, Vi, BusSource, IdentifierValue):
        status = self.dll.Tkdpo2k3k4k_SetIdentifierValue(
            ViSession(Vi), ViInt32(BusSource), ViConstString(IdentifierValue)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition6(self, Vi, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition6(ViSession(Vi), ViInt32(BusSource), byref(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition6(self, Vi, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition6(ViSession(Vi), ViInt32(BusSource), ViInt32(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetRxDataSize(self, Vi, BusSource):
        RXDataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetRxDataSize(ViSession(Vi), ViInt32(BusSource), byref(RXDataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(RXDataSize.value)

    def SetRxDataSize(self, Vi, BusSource, RXDataSize):
        status = self.dll.Tkdpo2k3k4k_SetRxDataSize(ViSession(Vi), ViInt32(BusSource), ViInt32(RXDataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetRxDataValue(self, Vi, BusSource, RXDataValueBufferSize):
        RXDataValue = ARRAY_ViChar(RXDataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetRxDataValue(
            ViSession(Vi), ViInt32(BusSource), ViInt32(RXDataValueBufferSize), RXDataValue
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(RXDataValue)

    def SetRxDataValue(self, Vi, BusSource, RXDataValue):
        status = self.dll.Tkdpo2k3k4k_SetRxDataValue(ViSession(Vi), ViInt32(BusSource), ViConstString(RXDataValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetTxDataSize(self, Vi, BusSource):
        TXDataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetTxDataSize(ViSession(Vi), ViInt32(BusSource), byref(TXDataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(TXDataSize.value)

    def SetTxDataSize(self, Vi, BusSource, TXDataSize):
        status = self.dll.Tkdpo2k3k4k_SetTxDataSize(ViSession(Vi), ViInt32(BusSource), ViInt32(TXDataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetTxDataValue(self, Vi, BusSource, TXDataValueBufferSize):
        TXDataValue = ARRAY_ViChar(TXDataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetTxDataValue(
            ViSession(Vi), ViInt32(BusSource), ViInt32(TXDataValueBufferSize), TXDataValue
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(TXDataValue)

    def SetTxDataValue(self, Vi, BusSource, TXDataValue):
        status = self.dll.Tkdpo2k3k4k_SetTxDataValue(ViSession(Vi), ViInt32(BusSource), ViConstString(TXDataValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition7(self, Vi, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition7(ViSession(Vi), ViInt32(BusSource), byref(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition7(self, Vi, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition7(ViSession(Vi), ViInt32(BusSource), ViInt32(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetRxDataValue2(self, Vi, BusSource, RXDataValueBufferSize):
        RXDataValue = ARRAY_ViChar(RXDataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetRxDataValue2(
            ViSession(Vi), ViInt32(BusSource), ViInt32(RXDataValueBufferSize), RXDataValue
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(RXDataValue)

    def SetRxDataValue2(self, Vi, BusSource, RXDataValue):
        status = self.dll.Tkdpo2k3k4k_SetRxDataValue2(ViSession(Vi), ViInt32(BusSource), ViConstString(RXDataValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetTxDataSize2(self, Vi, BusSource):
        TXDataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetTxDataSize2(ViSession(Vi), ViInt32(BusSource), byref(TXDataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(TXDataSize.value)

    def SetTxDataSize2(self, Vi, BusSource, TXDataSize):
        status = self.dll.Tkdpo2k3k4k_SetTxDataSize2(ViSession(Vi), ViInt32(BusSource), ViInt32(TXDataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetTxDataValue2(self, Vi, BusSource, TXDataValueBufferSize):
        TXDataValue = ARRAY_ViChar(TXDataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetTxDataValue2(
            ViSession(Vi), ViInt32(BusSource), ViInt32(TXDataValueBufferSize), TXDataValue
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(TXDataValue)

    def SetTxDataValue2(self, Vi, BusSource, TXDataValue):
        status = self.dll.Tkdpo2k3k4k_SetTxDataValue2(ViSession(Vi), ViInt32(BusSource), ViConstString(TXDataValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetCondition8(self, Vi, BusSource):
        Condition = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetCondition8(ViSession(Vi), ViInt32(BusSource), byref(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Condition.value)

    def SetCondition8(self, Vi, BusSource, Condition):
        status = self.dll.Tkdpo2k3k4k_SetCondition8(ViSession(Vi), ViInt32(BusSource), ViInt32(Condition))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataHighValue3(self, Vi, BusSource, DataHighValueBufferSize):
        DataHighValue = ARRAY_ViChar(DataHighValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataHighValue3(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(DataHighValueBufferSize),
            DataHighValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataHighValue)

    def SetDataHighValue3(self, Vi, BusSource, DataHighValue):
        status = self.dll.Tkdpo2k3k4k_SetDataHighValue3(ViSession(Vi), ViInt32(BusSource), ViConstString(DataHighValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataOffset2(self, Vi, BusSource):
        DataOffset = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataOffset2(ViSession(Vi), ViInt32(BusSource), byref(DataOffset))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataOffset.value)

    def SetDataOffset2(self, Vi, BusSource, DataOffset):
        status = self.dll.Tkdpo2k3k4k_SetDataOffset2(ViSession(Vi), ViInt32(BusSource), ViInt32(DataOffset))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataQualifier4(self, Vi, BusSource):
        DataQualifier = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataQualifier4(ViSession(Vi), ViInt32(BusSource), byref(DataQualifier))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataQualifier.value)

    def SetDataQualifier4(self, Vi, BusSource, DataQualifier):
        status = self.dll.Tkdpo2k3k4k_SetDataQualifier4(ViSession(Vi), ViInt32(BusSource), ViInt32(DataQualifier))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataValue5(self, Vi, BusSource, DataValueBufferSize):
        DataValue = ARRAY_ViChar(DataValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDataValue5(
            ViSession(Vi), ViInt32(BusSource), ViInt32(DataValueBufferSize), DataValue
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(DataValue)

    def SetDataValue5(self, Vi, BusSource, DataValue):
        status = self.dll.Tkdpo2k3k4k_SetDataValue5(ViSession(Vi), ViInt32(BusSource), ViConstString(DataValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetDataSize4(self, Vi, BusSource):
        DataSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetDataSize4(ViSession(Vi), ViInt32(BusSource), byref(DataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(DataSize.value)

    def SetDataSize4(self, Vi, BusSource, DataSize):
        status = self.dll.Tkdpo2k3k4k_SetDataSize4(ViSession(Vi), ViInt32(BusSource), ViInt32(DataSize))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressValue3(self, Vi, BusSource, AddressValueBufferSize):
        AddressValue = ARRAY_ViChar(AddressValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetAddressValue3(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(AddressValueBufferSize),
            AddressValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(AddressValue)

    def SetAddressValue3(self, Vi, BusSource, AddressValue):
        status = self.dll.Tkdpo2k3k4k_SetAddressValue3(ViSession(Vi), ViInt32(BusSource), ViConstString(AddressValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressType2(self, Vi, BusSource):
        AddressType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetAddressType2(ViSession(Vi), ViInt32(BusSource), byref(AddressType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(AddressType.value)

    def SetAddressType2(self, Vi, BusSource, AddressType):
        status = self.dll.Tkdpo2k3k4k_SetAddressType2(ViSession(Vi), ViInt32(BusSource), ViInt32(AddressType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetAddressMode3(self, Vi, BusSource, AddressModeBufferSize):
        AddressMode = ARRAY_ViChar(AddressModeBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetAddressMode3(
            ViSession(Vi), ViInt32(BusSource), ViInt32(AddressModeBufferSize), AddressMode
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(AddressMode)

    def SetAddressMode3(self, Vi, BusSource, AddressMode):
        status = self.dll.Tkdpo2k3k4k_SetAddressMode3(ViSession(Vi), ViInt32(BusSource), ViConstString(AddressMode))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetEndPointValue2(self, Vi, BusSource, EndPointValueBufferSize):
        EndPointValue = ARRAY_ViChar(EndPointValueBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetEndPointValue2(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(EndPointValueBufferSize),
            EndPointValue,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(EndPointValue)

    def SetEndPointValue2(self, Vi, BusSource, EndPointValue):
        status = self.dll.Tkdpo2k3k4k_SetEndPointValue2(ViSession(Vi), ViInt32(BusSource), ViConstString(EndPointValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetErrorType3(self, Vi, BusSource):
        ErrorType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetErrorType3(ViSession(Vi), ViInt32(BusSource), byref(ErrorType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(ErrorType.value)

    def SetErrorType3(self, Vi, BusSource, ErrorType):
        status = self.dll.Tkdpo2k3k4k_SetErrorType3(ViSession(Vi), ViInt32(BusSource), ViInt32(ErrorType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetHandshakeType(self, Vi, BusSource):
        HandshakeType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetHandshakeType(ViSession(Vi), ViInt32(BusSource), byref(HandshakeType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(HandshakeType.value)

    def SetHandshakeType(self, Vi, BusSource, HandshakeType):
        status = self.dll.Tkdpo2k3k4k_SetHandshakeType(ViSession(Vi), ViInt32(BusSource), ViInt32(HandshakeType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetSofFrameNumber(self, Vi, BusSource, SOFFrameNumberBufferSize):
        SOFFrameNumber = ARRAY_ViChar(SOFFrameNumberBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetSofFrameNumber(
            ViSession(Vi),
            ViInt32(BusSource),
            ViInt32(SOFFrameNumberBufferSize),
            SOFFrameNumber,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(SOFFrameNumber)

    def SetSofFrameNumber(self, Vi, BusSource, SOFFrameNumber):
        status = self.dll.Tkdpo2k3k4k_SetSofFrameNumber(
            ViSession(Vi), ViInt32(BusSource), ViConstString(SOFFrameNumber)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetSpecialType(self, Vi, BusSource):
        SpecialType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetSpecialType(ViSession(Vi), ViInt32(BusSource), byref(SpecialType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(SpecialType.value)

    def SetSpecialType(self, Vi, BusSource, SpecialType):
        status = self.dll.Tkdpo2k3k4k_SetSpecialType(ViSession(Vi), ViInt32(BusSource), ViInt32(SpecialType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetTokenType(self, Vi, BusSource):
        TokenType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetTokenType(ViSession(Vi), ViInt32(BusSource), byref(TokenType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(TokenType.value)

    def SetTokenType(self, Vi, BusSource, TokenType):
        status = self.dll.Tkdpo2k3k4k_SetTokenType(ViSession(Vi), ViInt32(BusSource), ViInt32(TokenType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Read4(self, Vi):
        Source = ViInt32()
        Level = ViReal64()
        Slope = ViInt32()
        Coupling = ViInt32()
        status = self.dll.Tkdpo2k3k4k_Read4(ViSession(Vi), byref(Source), byref(Level), byref(Slope), byref(Coupling))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source = int(Source.value)
        Level = float(Level.value)
        Slope = int(Slope.value)
        Coupling = int(Coupling.value)
        return Source, Level, Slope, Coupling

    def Configure16(self, Vi, Source, Level, Slope, Coupling):
        status = self.dll.Tkdpo2k3k4k_Configure16(
            ViSession(Vi),
            ViInt32(Source),
            ViReal64(Level),
            ViInt32(Slope),
            ViInt32(Coupling),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureLevelTo50Percent(self, Vi):
        status = self.dll.Tkdpo2k3k4k_ConfigureLevelTo50Percent(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Configure5(self, Vi):
        status = self.dll.Tkdpo2k3k4k_Configure5(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureSource(self, Vi, Source, Input, Threshold):
        status = self.dll.Tkdpo2k3k4k_ConfigureSource(
            ViSession(Vi), ViInt32(Source), ViInt32(Input), ViReal64(Threshold)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadSource(self, Vi, Source):
        Input = ViInt32()
        Threshold = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadSource(ViSession(Vi), ViInt32(Source), byref(Input), byref(Threshold))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Input = int(Input.value)
        Threshold = float(Threshold.value)
        return Input, Threshold

    def ConfigurePattern(self, Vi, Condition, LessLimit, MoreLimit, LogicOperatorType):
        status = self.dll.Tkdpo2k3k4k_ConfigurePattern(
            ViSession(Vi),
            ViInt32(Condition),
            ViReal64(LessLimit),
            ViReal64(MoreLimit),
            ViInt32(LogicOperatorType),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadPattern(self, Vi):
        Condition = ViInt32()
        LessLimit = ViReal64()
        MoreLimit = ViReal64()
        LogicOperatorType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadPattern(
            ViSession(Vi),
            byref(Condition),
            byref(LessLimit),
            byref(MoreLimit),
            byref(LogicOperatorType),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Condition = int(Condition.value)
        LessLimit = float(LessLimit.value)
        MoreLimit = float(MoreLimit.value)
        LogicOperatorType = int(LogicOperatorType.value)
        return Condition, LessLimit, MoreLimit, LogicOperatorType

    def ConfigureClock(self, Vi, Source, EdgeType):
        status = self.dll.Tkdpo2k3k4k_ConfigureClock(ViSession(Vi), ViInt32(Source), ViInt32(EdgeType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadClock(self, Vi):
        Source = ViInt32()
        EdgeType = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadClock(ViSession(Vi), byref(Source), byref(EdgeType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source = int(Source.value)
        EdgeType = int(EdgeType.value)
        return Source, EdgeType

    def ConfigureRF(self, Vi, Input, Threshold):
        status = self.dll.Tkdpo2k3k4k_ConfigureRF(ViSession(Vi), ViInt32(Input), ViReal64(Threshold))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadRF(self, Vi):
        Input = ViInt32()
        Threshold = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadRF(ViSession(Vi), byref(Input), byref(Threshold))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Input = int(Input.value)
        Threshold = float(Threshold.value)
        return Input, Threshold

    def Configure6(self, Vi):
        status = self.dll.Tkdpo2k3k4k_Configure6(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Configure7(self, Vi):
        status = self.dll.Tkdpo2k3k4k_Configure7(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Configure8(self, Vi):
        status = self.dll.Tkdpo2k3k4k_Configure8(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Configure9(self, Vi):
        status = self.dll.Tkdpo2k3k4k_Configure9(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Configure10(self, Vi, Source, Level, Slope, Coupling):
        status = self.dll.Tkdpo2k3k4k_Configure10(
            ViSession(Vi),
            ViInt32(Source),
            ViReal64(Level),
            ViInt32(Slope),
            ViInt32(Coupling),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Read5(self, Vi):
        Source = ViInt32()
        Level = ViReal64()
        Slope = ViInt32()
        Coupling = ViInt32()
        status = self.dll.Tkdpo2k3k4k_Read5(ViSession(Vi), byref(Source), byref(Level), byref(Slope), byref(Coupling))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source = int(Source.value)
        Level = float(Level.value)
        Slope = int(Slope.value)
        Coupling = int(Coupling.value)
        return Source, Level, Slope, Coupling

    def SetAUXInTekVPIProbeAutoZero(self, Vi):
        status = self.dll.Tkdpo2k3k4k_SetAUXInTekVPIProbeAutoZero(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetAUXInTekVPIProbeCommand(self, Vi, Command, State):
        status = self.dll.Tkdpo2k3k4k_SetAUXInTekVPIProbeCommand(
            ViSession(Vi), ViConstString(Command), ViConstString(State)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetAUXInTekVPIProbeDegauss(self, Vi):
        status = self.dll.Tkdpo2k3k4k_SetAUXInTekVPIProbeDegauss(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetAllDeskewsToRecommendedValues(self, Vi, Channel):
        status = self.dll.Tkdpo2k3k4k_SetAllDeskewsToRecommendedValues(ViSession(Vi), ViConstString(Channel))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def InvertWaveform(self, Vi, Channel):
        status = self.dll.Tkdpo2k3k4k_InvertWaveform(ViSession(Vi), ViConstString(Channel))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetTekVPIProbeAutoZero(self, Vi, Channel):
        status = self.dll.Tkdpo2k3k4k_SetTekVPIProbeAutoZero(ViSession(Vi), ViConstString(Channel))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetTekVPIProbeCommand(self, Vi, Channel, Command, State):
        status = self.dll.Tkdpo2k3k4k_SetTekVPIProbeCommand(
            ViSession(Vi),
            ViConstString(Channel),
            ViConstString(Command),
            ViConstString(State),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetTekVPIProbeDegauss(self, Vi, Channel):
        status = self.dll.Tkdpo2k3k4k_SetTekVPIProbeDegauss(ViSession(Vi), ViConstString(Channel))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Configure13(
        self,
        Vi,
        Channel,
        Position,
        Scale,
        Offset,
        Deskew,
        Coupling,
        Termination,
        Bandwidth,
        DisplayState,
    ):
        status = self.dll.Tkdpo2k3k4k_Configure13(
            ViSession(Vi),
            ViConstString(Channel),
            ViReal64(Position),
            ViReal64(Scale),
            ViReal64(Offset),
            ViReal64(Deskew),
            ViInt32(Coupling),
            ViInt32(Termination),
            ViInt32(Bandwidth),
            ViBoolean(DisplayState),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Read7(self, Vi, Channel):
        Position = ViReal64()
        Scale = ViReal64()
        Offset = ViReal64()
        Deskew = ViReal64()
        Coupling = ViInt32()
        Termination = ViInt32()
        Bandwidth = ViReal64()
        DisplayState = ViBoolean()
        status = self.dll.Tkdpo2k3k4k_Read7(
            ViSession(Vi),
            ViConstString(Channel),
            byref(Position),
            byref(Scale),
            byref(Offset),
            byref(Deskew),
            byref(Coupling),
            byref(Termination),
            byref(Bandwidth),
            byref(DisplayState),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Position = float(Position.value)
        Scale = float(Scale.value)
        Offset = float(Offset.value)
        Deskew = float(Deskew.value)
        Coupling = int(Coupling.value)
        Termination = int(Termination.value)
        Bandwidth = float(Bandwidth.value)
        DisplayState = bool(DisplayState.value)
        return (
            Position,
            Scale,
            Offset,
            Deskew,
            Coupling,
            Termination,
            Bandwidth,
            DisplayState,
        )

    def ReadProbeDetails(self, Vi, Channel, TypeBufferSize, SerialNumberBufferSize, UnitBufferSize):
        Type = ARRAY_ViChar(TypeBufferSize)
        Resistance = ViReal64()
        Gain = ViReal64()
        SerialNumber = ARRAY_ViChar(SerialNumberBufferSize)
        Unit = ARRAY_ViChar(UnitBufferSize)
        ExternalAttenuation = ViReal64()
        ExternalAttenuationDB = ViReal64()
        Calibration = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadProbeDetails(
            ViSession(Vi),
            ViConstString(Channel),
            ViInt32(TypeBufferSize),
            Type,
            byref(Resistance),
            byref(Gain),
            ViInt32(SerialNumberBufferSize),
            SerialNumber,
            ViInt32(UnitBufferSize),
            Unit,
            byref(ExternalAttenuation),
            byref(ExternalAttenuationDB),
            byref(Calibration),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Type = decode(Type)
        Resistance = float(Resistance.value)
        Gain = float(Gain.value)
        SerialNumber = decode(SerialNumber)
        Unit = decode(Unit)
        ExternalAttenuation = float(ExternalAttenuation.value)
        ExternalAttenuationDB = float(ExternalAttenuationDB.value)
        Calibration = int(Calibration.value)
        return (
            Type,
            Resistance,
            Gain,
            SerialNumber,
            Unit,
            ExternalAttenuation,
            ExternalAttenuationDB,
            Calibration,
        )

    def GetReferenceName(self, Vi, Index, NameBufferSize):
        Name = ARRAY_ViChar(NameBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetReferenceName(ViSession(Vi), ViInt32(Index), ViInt32(NameBufferSize), Name)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Name)

    def Configure12(
        self,
        Vi,
        Reference,
        Position,
        VerticalScale,
        HorizontalScale,
        DisplayState,
        HorizontalDelayTime,
    ):
        status = self.dll.Tkdpo2k3k4k_Configure12(
            ViSession(Vi),
            ViConstString(Reference),
            ViReal64(Position),
            ViReal64(VerticalScale),
            ViReal64(HorizontalScale),
            ViBoolean(DisplayState),
            ViReal64(HorizontalDelayTime),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Read6(self, Vi, Reference):
        Position = ViReal64()
        VerticalScale = ViReal64()
        HorizontalScale = ViReal64()
        DisplayState = ViBoolean()
        HorizontalDelayTime = ViReal64()
        status = self.dll.Tkdpo2k3k4k_Read6(
            ViSession(Vi),
            ViConstString(Reference),
            byref(Position),
            byref(VerticalScale),
            byref(HorizontalScale),
            byref(DisplayState),
            byref(HorizontalDelayTime),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Position = float(Position.value)
        VerticalScale = float(VerticalScale.value)
        HorizontalScale = float(HorizontalScale.value)
        DisplayState = bool(DisplayState.value)
        HorizontalDelayTime = float(HorizontalDelayTime.value)
        return Position, VerticalScale, HorizontalScale, DisplayState, HorizontalDelayTime

    def GetDateTime(self, Vi, Reference, DateBufferSize, TimeBufferSize):
        Date = ARRAY_ViChar(DateBufferSize)
        Time = ARRAY_ViChar(TimeBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDateTime(
            ViSession(Vi),
            ViConstString(Reference),
            ViInt32(DateBufferSize),
            Date,
            ViInt32(TimeBufferSize),
            Time,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Date = decode(Date)
        Time = decode(Time)
        return Date, Time

    def GetDigitalChannelName(self, Vi, Index, NameBufferSize):
        Name = ARRAY_ViChar(NameBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetDigitalChannelName(
            ViSession(Vi), ViInt32(Index), ViInt32(NameBufferSize), Name
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Name)

    def CopyWaveformToClipboard(self, Vi, WaveformSource, Start, Stop):
        PointsCopied = ViInt32()
        status = self.dll.Tkdpo2k3k4k_CopyWaveformToClipboard(
            ViSession(Vi),
            ViInt32(WaveformSource),
            ViInt32(Start),
            ViInt32(Stop),
            byref(PointsCopied),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(PointsCopied.value)

    def FetchWaveform2(self, Vi, WaveformSource, WaveformArrayBufferSize):
        WaveformArray = ARRAY_ViReal64(WaveformArrayBufferSize)
        WaveformArrayActualSize = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_FetchWaveform2(
            ViSession(Vi),
            ViInt32(WaveformSource),
            ViInt32(WaveformArrayBufferSize),
            WaveformArray,
            byref(WaveformArrayActualSize),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        WaveformArray = list(WaveformArray)
        WaveformArrayActualSize = int(WaveformArrayActualSize.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return WaveformArray, WaveformArrayActualSize, InitialX, XIncrement

    def FetchWaveformDigitizedLevel(self, Vi, WaveformSource, WaveformArrayBufferSize):
        WaveformArray = ARRAY_ViInt32(WaveformArrayBufferSize)
        WaveformArrayActualSize = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        YZero = ViReal64()
        YMult = ViReal64()
        YOffset = ViReal64()
        status = self.dll.Tkdpo2k3k4k_FetchWaveformDigitizedLevel(
            ViSession(Vi),
            ViInt32(WaveformSource),
            ViInt32(WaveformArrayBufferSize),
            WaveformArray,
            byref(WaveformArrayActualSize),
            byref(InitialX),
            byref(XIncrement),
            byref(YZero),
            byref(YMult),
            byref(YOffset),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        WaveformArrayActualSize = int(WaveformArrayActualSize.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        YZero = float(YZero.value)
        YMult = float(YMult.value)
        YOffset = float(YOffset.value)
        return (
            WaveformArray,
            WaveformArrayActualSize,
            InitialX,
            XIncrement,
            YZero,
            YMult,
            YOffset,
        )

    def FetchWaveformHighResolution(self, Vi, WaveformSource, WaveformArrayBufferSize):
        WaveformArray = ARRAY_ViReal64(WaveformArrayBufferSize)
        WaveformArrayActualSize = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_FetchWaveformHighResolution(
            ViSession(Vi),
            ViInt32(WaveformSource),
            ViInt32(WaveformArrayBufferSize),
            WaveformArray,
            byref(WaveformArrayActualSize),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        WaveformArray = list(WaveformArray)
        WaveformArrayActualSize = int(WaveformArrayActualSize.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return WaveformArray, WaveformArrayActualSize, InitialX, XIncrement

    def FetchWaveformMinMax(self, Vi, WaveformSource, MinWaveformBufferSize, MaxWaveformBufferSize):
        MinWaveform = ARRAY_ViReal64(MinWaveformBufferSize)
        MinWaveformActualSize = ViInt32()
        MaxWaveform = ARRAY_ViReal64(MaxWaveformBufferSize)
        MaxWaveformActualSize = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_FetchWaveformMinMax(
            ViSession(Vi),
            ViInt32(WaveformSource),
            ViInt32(MinWaveformBufferSize),
            MinWaveform,
            byref(MinWaveformActualSize),
            ViInt32(MaxWaveformBufferSize),
            MaxWaveform,
            byref(MaxWaveformActualSize),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        MinWaveform = list(MinWaveform)
        MinWaveformActualSize = int(MinWaveformActualSize.value)
        MaxWaveform = list(MaxWaveform)
        MaxWaveformActualSize = int(MaxWaveformActualSize.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return (
            MinWaveform,
            MinWaveformActualSize,
            MaxWaveform,
            MaxWaveformActualSize,
            InitialX,
            XIncrement,
        )

    def FetchWaveformStartStop(self, Vi, WaveformSource, Start, Stop, WaveformArrayBufferSize):
        WaveformArray = ARRAY_ViReal64(WaveformArrayBufferSize)
        WaveformArrayActualSize = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_FetchWaveformStartStop(
            ViSession(Vi),
            ViInt32(WaveformSource),
            ViInt32(Start),
            ViInt32(Stop),
            ViInt32(WaveformArrayBufferSize),
            WaveformArray,
            byref(WaveformArrayActualSize),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        WaveformArray = list(WaveformArray)
        WaveformArrayActualSize = int(WaveformArrayActualSize.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return WaveformArray, WaveformArrayActualSize, InitialX, XIncrement

    def FetchWaveformWithinCursor(self, Vi, WaveformSource, WaveformArrayBufferSize):
        WaveformArray = ARRAY_ViReal64(WaveformArrayBufferSize)
        WaveformArrayActualSize = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_FetchWaveformWithinCursor(
            ViSession(Vi),
            ViInt32(WaveformSource),
            ViInt32(WaveformArrayBufferSize),
            WaveformArray,
            byref(WaveformArrayActualSize),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        WaveformArray = list(WaveformArray)
        WaveformArrayActualSize = int(WaveformArrayActualSize.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return WaveformArray, WaveformArrayActualSize, InitialX, XIncrement

    def FetchWaveformWithinZoom(self, Vi, WaveformSource, WaveformArrayBufferSize):
        WaveformArray = ARRAY_ViReal64(WaveformArrayBufferSize)
        WaveformArrayActualSize = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_FetchWaveformWithinZoom(
            ViSession(Vi),
            ViInt32(WaveformSource),
            ViInt32(WaveformArrayBufferSize),
            WaveformArray,
            byref(WaveformArrayActualSize),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        WaveformArray = list(WaveformArray)
        WaveformArrayActualSize = int(WaveformArrayActualSize.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return WaveformArray, WaveformArrayActualSize, InitialX, XIncrement

    def InitiateAcquisition2(self, Vi):
        status = self.dll.Tkdpo2k3k4k_InitiateAcquisition2(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def IsWaveformElementInvalid(self, Vi, Element):
        Val = ViBoolean()
        status = self.dll.Tkdpo2k3k4k_IsWaveformElementInvalid(ViSession(Vi), ViReal64(Element), byref(Val))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return bool(Val.value)

    def ReadWaveform2(self, Vi, WaveformSource, MaxTimeMiliseconds, WaveformArrayBufferSize):
        WaveformArray = ARRAY_ViReal64(WaveformArrayBufferSize)
        WaveformArrayActualSize = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadWaveform2(
            ViSession(Vi),
            ViInt32(WaveformSource),
            ViInt32(MaxTimeMiliseconds),
            ViInt32(WaveformArrayBufferSize),
            WaveformArray,
            byref(WaveformArrayActualSize),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        WaveformArray = list(WaveformArray)
        WaveformArrayActualSize = int(WaveformArrayActualSize.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return WaveformArray, WaveformArrayActualSize, InitialX, XIncrement

    def ReadWaveformMinMax(
        self,
        Vi,
        WaveformSource,
        MaxTimeMiliseconds,
        MinWaveformBufferSize,
        MaxWaveformBufferSize,
    ):
        MinWaveform = ARRAY_ViReal64(MinWaveformBufferSize)
        MinWaveformActualSize = ViInt32()
        MaxWaveform = ARRAY_ViReal64(MaxWaveformBufferSize)
        MaxWaveformActualSize = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadWaveformMinMax(
            ViSession(Vi),
            ViInt32(WaveformSource),
            ViInt32(MaxTimeMiliseconds),
            ViInt32(MinWaveformBufferSize),
            MinWaveform,
            byref(MinWaveformActualSize),
            ViInt32(MaxWaveformBufferSize),
            MaxWaveform,
            byref(MaxWaveformActualSize),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        MinWaveform = list(MinWaveform)
        MinWaveformActualSize = int(MinWaveformActualSize.value)
        MaxWaveform = list(MaxWaveform)
        MaxWaveformActualSize = int(MaxWaveformActualSize.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return (
            MinWaveform,
            MinWaveformActualSize,
            MaxWaveform,
            MaxWaveformActualSize,
            InitialX,
            XIncrement,
        )

    def SaveWaveformToFile2(self, Vi, WaveformSource, FileName, FileFormat):
        status = self.dll.Tkdpo2k3k4k_SaveWaveformToFile2(
            ViSession(Vi),
            ViInt32(WaveformSource),
            ViConstString(FileName),
            ViInt32(FileFormat),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def WriteWaveformToReference(self, Vi, WaveformReference, WaveformArrayBufferSize, InitialX, XIncrement):
        WaveformArray = ARRAY_ViReal64(WaveformArrayBufferSize)
        status = self.dll.Tkdpo2k3k4k_WriteWaveformToReference(
            ViSession(Vi),
            ViInt32(WaveformReference),
            ViInt32(WaveformArrayBufferSize),
            WaveformArray,
            ViReal64(InitialX),
            ViReal64(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return list(WaveformArray)

    def GetAvailableDataCompositions(self, Vi, ValBufferSize):
        Val = ARRAY_ViChar(ValBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetAvailableDataCompositions(ViSession(Vi), ViInt32(ValBufferSize), Val)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Val)

    def GetAvailableFilterVuFrequencies(self, Vi, ValBufferSize):
        Val = ARRAY_ViChar(ValBufferSize)
        status = self.dll.Tkdpo2k3k4k_GetAvailableFilterVuFrequencies(ViSession(Vi), ViInt32(ValBufferSize), Val)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Val)

    def GetOPC(self, Vi):
        Val = ViBoolean()
        status = self.dll.Tkdpo2k3k4k_GetOPC(ViSession(Vi), byref(Val))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return bool(Val.value)

    def Query(self, Vi, Command, ValBufferSize):
        Val = ARRAY_ViChar(ValBufferSize)
        status = self.dll.Tkdpo2k3k4k_Query(ViSession(Vi), ViConstString(Command), ViInt32(ValBufferSize), Val)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Val)

    def ReadPartialString(self, Vi, Length, ValBufferSize):
        Val = ARRAY_ViChar(ValBufferSize)
        status = self.dll.Tkdpo2k3k4k_ReadPartialString(ViSession(Vi), ViInt32(Length), ViInt32(ValBufferSize), Val)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Val)

    def ReadString(self, Vi, ValBufferSize):
        Val = ARRAY_ViChar(ValBufferSize)
        status = self.dll.Tkdpo2k3k4k_ReadString(ViSession(Vi), ViInt32(ValBufferSize), Val)
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return decode(Val)

    def WriteString(self, Vi, Command):
        status = self.dll.Tkdpo2k3k4k_WriteString(ViSession(Vi), ViConstString(Command))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def CreateMark(self, Vi, Mark):
        status = self.dll.Tkdpo2k3k4k_CreateMark(ViSession(Vi), ViInt32(Mark))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def DeleteMark(self, Vi, Mark):
        status = self.dll.Tkdpo2k3k4k_DeleteMark(ViSession(Vi), ViInt32(Mark))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def MoveZoomToMark(self, Vi, Mark):
        status = self.dll.Tkdpo2k3k4k_MoveZoomToMark(ViSession(Vi), ViInt32(Mark))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Configure14(self, Vi, Source, Type):
        status = self.dll.Tkdpo2k3k4k_Configure14(ViSession(Vi), ViInt32(Source), ViInt32(Type))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureDelay2(self, Vi, Source1, Source2, Direction, Edge1, Edge2):
        status = self.dll.Tkdpo2k3k4k_ConfigureDelay2(
            ViSession(Vi),
            ViInt32(Source1),
            ViInt32(Source2),
            ViInt32(Direction),
            ViInt32(Edge1),
            ViInt32(Edge2),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigurePhase(self, Vi, Source1, Source2):
        status = self.dll.Tkdpo2k3k4k_ConfigurePhase(ViSession(Vi), ViInt32(Source1), ViInt32(Source2))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureReferenceLevel(self, Vi, Method, Unit, High, Low, Mid, Mid2):
        status = self.dll.Tkdpo2k3k4k_ConfigureReferenceLevel(
            ViSession(Vi),
            ViInt32(Method),
            ViInt32(Unit),
            ViReal64(High),
            ViReal64(Low),
            ViReal64(Mid),
            ViReal64(Mid2),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def Read8(self, Vi):
        Source1 = ViInt32()
        Source2 = ViInt32()
        Direction = ViInt32()
        Edge1 = ViInt32()
        Edge2 = ViInt32()
        Type = ViInt32()
        status = self.dll.Tkdpo2k3k4k_Read8(
            ViSession(Vi),
            byref(Source1),
            byref(Source2),
            byref(Direction),
            byref(Edge1),
            byref(Edge2),
            byref(Type),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Source1 = int(Source1.value)
        Source2 = int(Source2.value)
        Direction = int(Direction.value)
        Edge1 = int(Edge1.value)
        Edge2 = int(Edge2.value)
        Type = int(Type.value)
        return Source1, Source2, Direction, Edge1, Edge2, Type

    def ReadReferenceLevel(self, Vi):
        Method = ViInt32()
        Unit = ViInt32()
        High = ViReal64()
        Low = ViReal64()
        Mid = ViReal64()
        Mid2 = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadReferenceLevel(
            ViSession(Vi),
            byref(Method),
            byref(Unit),
            byref(High),
            byref(Low),
            byref(Mid),
            byref(Mid2),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Method = int(Method.value)
        Unit = int(Unit.value)
        High = float(High.value)
        Low = float(Low.value)
        Mid = float(Mid.value)
        Mid2 = float(Mid2.value)
        return Method, Unit, High, Low, Mid, Mid2

    def ReadValue(self, Vi, Source1, Source2, Direction, Edge1, Edge2, Type, UnitBufferSize):
        Val = ViReal64()
        Unit = ARRAY_ViChar(UnitBufferSize)
        status = self.dll.Tkdpo2k3k4k_ReadValue(
            ViSession(Vi),
            ViInt32(Source1),
            ViInt32(Source2),
            ViInt32(Direction),
            ViInt32(Edge1),
            ViInt32(Edge2),
            ViInt32(Type),
            byref(Val),
            ViInt32(UnitBufferSize),
            Unit,
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Val = float(Val.value)
        Unit = decode(Unit)
        return Val, Unit

    def Calibrate(self, Vi):
        Val = ViInt32()
        status = self.dll.Tkdpo2k3k4k_Calibrate(ViSession(Vi), byref(Val))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Val.value)

    def SelfTest(self, Vi, TestMessageBufferSize):
        TestResult = ViInt32()
        TestMessage = ARRAY_ViChar(TestMessageBufferSize)
        status = self.dll.Tkdpo2k3k4k_SelfTest(
            ViSession(Vi), byref(TestResult), ViInt32(TestMessageBufferSize), TestMessage
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        TestResult = int(TestResult.value)
        TestMessage = decode(TestMessage)
        return TestResult, TestMessage

    def ConfigureRefLevel(self, Vi, ReferenceLevelType, ReferenceLevelHysteresis, Mid):
        status = self.dll.Tkdpo2k3k4k_ConfigureRefLevel(
            ViSession(Vi),
            ViInt32(ReferenceLevelType),
            ViReal64(ReferenceLevelHysteresis),
            ViReal64(Mid),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadRefLevel(self, Vi):
        ReferenceLevelType = ViInt32()
        ReferenceLevelHysteresis = ViReal64()
        Mid = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadRefLevel(
            ViSession(Vi),
            byref(ReferenceLevelType),
            byref(ReferenceLevelHysteresis),
            byref(Mid),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        ReferenceLevelType = int(ReferenceLevelType.value)
        ReferenceLevelHysteresis = float(ReferenceLevelHysteresis.value)
        Mid = float(Mid.value)
        return ReferenceLevelType, ReferenceLevelHysteresis, Mid

    def SetDefaultRefLevel(self, Vi, ReferenceLevelType):
        status = self.dll.Tkdpo2k3k4k_SetDefaultRefLevel(ViSession(Vi), ViInt32(ReferenceLevelType))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetRefLevelHigh(self, Vi, ReferenceLevelType):
        ReferenceLevelHigh = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetRefLevelHigh(
            ViSession(Vi), ViInt32(ReferenceLevelType), byref(ReferenceLevelHigh)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(ReferenceLevelHigh.value)

    def SetRefLevelHigh(self, Vi, ReferenceLevelType, ReferenceLevelHigh):
        status = self.dll.Tkdpo2k3k4k_SetRefLevelHigh(
            ViSession(Vi), ViInt32(ReferenceLevelType), ViReal64(ReferenceLevelHigh)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetRefLevelLow(self, Vi, ReferenceLevelType):
        RefLevelLow = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetRefLevelLow(ViSession(Vi), ViInt32(ReferenceLevelType), byref(RefLevelLow))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(RefLevelLow.value)

    def SetRefLevelLow(self, Vi, ReferenceLevelType, RefLevelLow):
        status = self.dll.Tkdpo2k3k4k_SetRefLevelLow(ViSession(Vi), ViInt32(ReferenceLevelType), ViReal64(RefLevelLow))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetRefLevelMid(self, Vi, ReferenceLevelType, Number):
        RefLevelMid = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetRefLevelMid(
            ViSession(Vi),
            ViInt32(ReferenceLevelType),
            ViInt32(Number),
            byref(RefLevelMid),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(RefLevelMid.value)

    def SetRefLevelMid(self, Vi, ReferenceLevelType, Number, RefLevelMid):
        status = self.dll.Tkdpo2k3k4k_SetRefLevelMid(
            ViSession(Vi),
            ViInt32(ReferenceLevelType),
            ViInt32(Number),
            ViReal64(RefLevelMid),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ResetStatistics(self, Vi):
        status = self.dll.Tkdpo2k3k4k_ResetStatistics(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetMeasDisplayState(self, Vi, DisplayMeasurement):
        MeasDisplayState = ViBoolean()
        status = self.dll.Tkdpo2k3k4k_GetMeasDisplayState(
            ViSession(Vi), ViInt32(DisplayMeasurement), byref(MeasDisplayState)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return bool(MeasDisplayState.value)

    def SetMeasDisplayState(self, Vi, DisplayMeasurement, MeasDisplayState):
        status = self.dll.Tkdpo2k3k4k_SetMeasDisplayState(
            ViSession(Vi), ViInt32(DisplayMeasurement), ViBoolean(MeasDisplayState)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetRefLevelLowVoltage(self, Vi, Type):
        RefLevelLowVoltage = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetRefLevelLowVoltage(ViSession(Vi), ViInt32(Type), byref(RefLevelLowVoltage))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(RefLevelLowVoltage.value)

    def SetRefLevelLowVoltage(self, Vi, Type, RefLevelLowVoltage):
        status = self.dll.Tkdpo2k3k4k_SetRefLevelLowVoltage(ViSession(Vi), ViInt32(Type), ViReal64(RefLevelLowVoltage))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetRefLevelLowCurrent(self, Vi, Type):
        RefLevelLowCurrent = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetRefLevelLowCurrent(ViSession(Vi), ViInt32(Type), byref(RefLevelLowCurrent))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(RefLevelLowCurrent.value)

    def SetRefLevelLowCurrent(self, Vi, Type, RefLevelLowCurrent):
        status = self.dll.Tkdpo2k3k4k_SetRefLevelLowCurrent(ViSession(Vi), ViInt32(Type), ViReal64(RefLevelLowCurrent))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureGating(self, Vi, Polarity, TurnOn):
        status = self.dll.Tkdpo2k3k4k_ConfigureGating(ViSession(Vi), ViInt32(Polarity), ViReal64(TurnOn))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadGating(self, Vi):
        Polarity = ViInt32()
        TurnOn = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadGating(ViSession(Vi), byref(Polarity), byref(TurnOn))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Polarity = int(Polarity.value)
        TurnOn = float(TurnOn.value)
        return Polarity, TurnOn

    def ReadTOffLosses(self, Vi, Type, Mean, Min, Max):
        status = self.dll.Tkdpo2k3k4k_ReadTOffLosses(
            ViSession(Vi), ViInt32(Type), ViReal64(Mean), ViReal64(Min), ViReal64(Max)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadTOnLosses(self, Vi, Type, Mean, Min, Max):
        status = self.dll.Tkdpo2k3k4k_ReadTOnLosses(
            ViSession(Vi), ViInt32(Type), ViReal64(Mean), ViReal64(Min), ViReal64(Max)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadTotalLosses(self, Vi, Type, Mean, Min, Max):
        status = self.dll.Tkdpo2k3k4k_ReadTotalLosses(
            ViSession(Vi), ViInt32(Type), ViReal64(Mean), ViReal64(Min), ViReal64(Max)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadConductionLosses(self, Vi, Type, Mean, Min, Max):
        status = self.dll.Tkdpo2k3k4k_ReadConductionLosses(
            ViSession(Vi), ViInt32(Type), ViReal64(Mean), ViReal64(Min), ViReal64(Max)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetParameters(self, Vi, FrequencyReference, FixedReference, NumberOfHarmonics, HarmonicsSource):
        status = self.dll.Tkdpo2k3k4k_SetParameters(
            ViSession(Vi),
            ViInt32(FrequencyReference),
            ViReal64(FixedReference),
            ViInt32(NumberOfHarmonics),
            ViInt32(HarmonicsSource),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetParameters(self, Vi):
        FrequencyReference = ViInt32()
        FixedReference = ViReal64()
        NumberOfHarmonics = ViInt32()
        HarmonicsSource = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetParameters(
            ViSession(Vi),
            byref(FrequencyReference),
            byref(FixedReference),
            byref(NumberOfHarmonics),
            byref(HarmonicsSource),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        FrequencyReference = int(FrequencyReference.value)
        FixedReference = float(FixedReference.value)
        NumberOfHarmonics = int(NumberOfHarmonics.value)
        HarmonicsSource = int(HarmonicsSource.value)
        return FrequencyReference, FixedReference, NumberOfHarmonics, HarmonicsSource

    def ConfigureIEC(
        self,
        Vi,
        Class,
        Filter,
        FundamentalCurrent,
        Grouping,
        InputPower,
        LineFrequency,
        ObservationPeriod,
        PowerFactor,
    ):
        status = self.dll.Tkdpo2k3k4k_ConfigureIEC(
            ViSession(Vi),
            ViInt32(Class),
            ViBoolean(Filter),
            ViReal64(FundamentalCurrent),
            ViBoolean(Grouping),
            ViReal64(InputPower),
            ViReal64(LineFrequency),
            ViReal64(ObservationPeriod),
            ViReal64(PowerFactor),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadIEC(self, Vi):
        Class = ViInt32()
        Filter = ViBoolean()
        FundamentalCurrent = ViReal64()
        Grouping = ViBoolean()
        InputPower = ViReal64()
        LineFrequency = ViReal64()
        ObservationPeriod = ViReal64()
        PowerFactor = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadIEC(
            ViSession(Vi),
            byref(Class),
            byref(Filter),
            byref(FundamentalCurrent),
            byref(Grouping),
            byref(InputPower),
            byref(LineFrequency),
            byref(ObservationPeriod),
            byref(PowerFactor),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Class = int(Class.value)
        Filter = bool(Filter.value)
        FundamentalCurrent = float(FundamentalCurrent.value)
        Grouping = bool(Grouping.value)
        InputPower = float(InputPower.value)
        LineFrequency = float(LineFrequency.value)
        ObservationPeriod = float(ObservationPeriod.value)
        PowerFactor = float(PowerFactor.value)
        return (
            Class,
            Filter,
            FundamentalCurrent,
            Grouping,
            InputPower,
            LineFrequency,
            ObservationPeriod,
            PowerFactor,
        )

    def ConfigureMIL(self, Vi, FundamentalCurrentCalculating, UserCurrent, LineFrequency, PowerLevel):
        status = self.dll.Tkdpo2k3k4k_ConfigureMIL(
            ViSession(Vi),
            ViInt32(FundamentalCurrentCalculating),
            ViReal64(UserCurrent),
            ViReal64(LineFrequency),
            ViInt32(PowerLevel),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadMIL(self, Vi):
        FundamentalCurrentCalculating = ViInt32()
        UserCurrent = ViReal64()
        LineFrequency = ViReal64()
        PowerLevel = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadMIL(
            ViSession(Vi),
            byref(FundamentalCurrentCalculating),
            byref(UserCurrent),
            byref(LineFrequency),
            byref(PowerLevel),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        FundamentalCurrentCalculating = int(FundamentalCurrentCalculating.value)
        UserCurrent = float(UserCurrent.value)
        LineFrequency = float(LineFrequency.value)
        PowerLevel = int(PowerLevel.value)
        return FundamentalCurrentCalculating, UserCurrent, LineFrequency, PowerLevel

    def SaveResultsToFile(self, Vi, Filename):
        status = self.dll.Tkdpo2k3k4k_SaveResultsToFile(ViSession(Vi), ViConstString(Filename))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetHamroniciecMaxResult(self, Vi, Harmonic):
        HamronicIECMaxResult = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetHamroniciecMaxResult(
            ViSession(Vi), ViInt32(Harmonic), byref(HamronicIECMaxResult)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(HamronicIECMaxResult.value)

    def GetHarmonicPercentageMagnitudeResult(self, Vi, Harmonic):
        HarmonicPercentageMagnitudeResult = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetHarmonicPercentageMagnitudeResult(
            ViSession(Vi), ViInt32(Harmonic), byref(HarmonicPercentageMagnitudeResult)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(HarmonicPercentageMagnitudeResult.value)

    def GetHarmonicAbsoluteMagnitudeResult(self, Vi, Harmonic):
        HarmonicAbsoluteMagnitudeResult = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetHarmonicAbsoluteMagnitudeResult(
            ViSession(Vi), ViInt32(Harmonic), byref(HarmonicAbsoluteMagnitudeResult)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(HarmonicAbsoluteMagnitudeResult.value)

    def GetHarmonicPhaseResult(self, Vi, Harmonic):
        HarmonicPhaseResult = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetHarmonicPhaseResult(
            ViSession(Vi), ViInt32(Harmonic), byref(HarmonicPhaseResult)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(HarmonicPhaseResult.value)

    def GetHarmonicFrequencyResult(self, Vi, Harmonic):
        HarmonicFrequencyResult = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetHarmonicFrequencyResult(
            ViSession(Vi), ViInt32(Harmonic), byref(HarmonicFrequencyResult)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(HarmonicFrequencyResult.value)

    def GetHarmonicLimitResult(self, Vi, Harmonic):
        HarmonicLimitResult = ViReal64()
        status = self.dll.Tkdpo2k3k4k_GetHarmonicLimitResult(
            ViSession(Vi), ViInt32(Harmonic), byref(HarmonicLimitResult)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return float(HarmonicLimitResult.value)

    def GetHarmoniciecClassaLimitResult(self, Vi, Harmonic):
        HarmonicIECClassALimitResult = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetHarmoniciecClassaLimitResult(
            ViSession(Vi), ViInt32(Harmonic), byref(HarmonicIECClassALimitResult)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(HarmonicIECClassALimitResult.value)

    def GetHarmoniciecHigherLimitResult(self, Vi, Harmonic):
        HarmonicIECHigherLimitResult = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetHarmoniciecHigherLimitResult(
            ViSession(Vi), ViInt32(Harmonic), byref(HarmonicIECHigherLimitResult)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(HarmonicIECHigherLimitResult.value)

    def GetHarmoniciecNormalLimitResult(self, Vi, Harmonic):
        HarmonicIECNormalLimitResult = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetHarmoniciecNormalLimitResult(
            ViSession(Vi), ViInt32(Harmonic), byref(HarmonicIECNormalLimitResult)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(HarmonicIECNormalLimitResult.value)

    def GetHarmonicmilNormalLimitResult(self, Vi, Harmonic):
        HarmonicMILNormalLimitResult = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetHarmonicmilNormalLimitResult(
            ViSession(Vi), ViInt32(Harmonic), byref(HarmonicMILNormalLimitResult)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(HarmonicMILNormalLimitResult.value)

    def DoVerticalAutoSet(self, Vi):
        status = self.dll.Tkdpo2k3k4k_DoVerticalAutoSet(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def SetOffsetToZero(self, Vi):
        status = self.dll.Tkdpo2k3k4k_SetOffsetToZero(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureAxes(self, Vi, Type, YaxesMax, YaxesMin, XaxesMax, XaxesMin):
        status = self.dll.Tkdpo2k3k4k_ConfigureAxes(
            ViSession(Vi),
            ViInt32(Type),
            ViReal64(YaxesMax),
            ViReal64(YaxesMin),
            ViReal64(XaxesMax),
            ViReal64(XaxesMin),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadAxes(self, Vi, Type):
        YaxesMax = ViReal64()
        YaxesMin = ViReal64()
        XaxesMax = ViReal64()
        XaxesMin = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadAxes(
            ViSession(Vi),
            ViInt32(Type),
            byref(YaxesMax),
            byref(YaxesMin),
            byref(XaxesMax),
            byref(XaxesMin),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        YaxesMax = float(YaxesMax.value)
        YaxesMin = float(YaxesMin.value)
        XaxesMax = float(XaxesMax.value)
        XaxesMin = float(XaxesMin.value)
        return YaxesMax, YaxesMin, XaxesMax, XaxesMin

    def ConfigureMaskLimits(self, Vi, MaxVoltage, MaxCurrent, MaxPower):
        status = self.dll.Tkdpo2k3k4k_ConfigureMaskLimits(
            ViSession(Vi), ViReal64(MaxVoltage), ViReal64(MaxCurrent), ViReal64(MaxPower)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadMaskLimits(self, Vi):
        MaxVoltage = ViReal64()
        MaxCurrent = ViReal64()
        MaxPower = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadMaskLimits(
            ViSession(Vi), byref(MaxVoltage), byref(MaxCurrent), byref(MaxPower)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        MaxVoltage = float(MaxVoltage.value)
        MaxCurrent = float(MaxCurrent.value)
        MaxPower = float(MaxPower.value)
        return MaxVoltage, MaxCurrent, MaxPower

    def SetMaskPoints(self, Vi, VoltsBufferSize, Volts, AmpsBufferSize, Amps):
        _Volts = (ViReal64 * len(Volts))(*Volts)
        _Amps = (ViReal64 * len(Amps))(*Amps)
        _status = self.dll.Tkdpo2k3k4k_SetMaskPoints(
            ViSession(Vi),
            ViInt32(VoltsBufferSize),
            _Volts,
            ViInt32(AmpsBufferSize),
            _Amps,
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def GetMaskPoints(self, Vi, VoltsBufferSize, AmpsBufferSize):
        Volts = ARRAY_ViReal64(VoltsBufferSize)
        VoltsActualSize = ViInt32()
        Amps = ARRAY_ViReal64(AmpsBufferSize)
        AmpsActualSize = ViInt32()
        status = self.dll.Tkdpo2k3k4k_GetMaskPoints(
            ViSession(Vi),
            ViInt32(VoltsBufferSize),
            Volts,
            byref(VoltsActualSize),
            ViInt32(AmpsBufferSize),
            Amps,
            byref(AmpsActualSize),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Volts = list(Volts)
        VoltsActualSize = int(VoltsActualSize.value)
        Amps = list(Amps)
        AmpsActualSize = int(AmpsActualSize.value)
        return Volts, VoltsActualSize, Amps, AmpsActualSize

    def GetSpectrumTraceDisplayState(self, Vi, Type):
        SpectrumTraceDisplayState = ViBoolean()
        status = self.dll.Tkdpo2k3k4k_GetSpectrumTraceDisplayState(
            ViSession(Vi), ViInt32(Type), byref(SpectrumTraceDisplayState)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return bool(SpectrumTraceDisplayState.value)

    def SetSpectrumTraceDisplayState(self, Vi, Type, SpectrumTraceDisplayState):
        status = self.dll.Tkdpo2k3k4k_SetSpectrumTraceDisplayState(
            ViSession(Vi), ViInt32(Type), ViBoolean(SpectrumTraceDisplayState)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def GetRfVsTimeTraceDisplayState(self, Vi, Type):
        RFVsTimeTraceDisplayState = ViBoolean()
        status = self.dll.Tkdpo2k3k4k_GetRfVsTimeTraceDisplayState(
            ViSession(Vi), ViInt32(Type), byref(RFVsTimeTraceDisplayState)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return bool(RFVsTimeTraceDisplayState.value)

    def SetRfVsTimeTraceDisplayState(self, Vi, Type, RFVsTimeTraceDisplayState):
        status = self.dll.Tkdpo2k3k4k_SetRfVsTimeTraceDisplayState(
            ViSession(Vi), ViInt32(Type), ViBoolean(RFVsTimeTraceDisplayState)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigureVerticalParameters(self, Vi, RFTraceType, Scale, Position):
        status = self.dll.Tkdpo2k3k4k_ConfigureVerticalParameters(
            ViSession(Vi), ViInt32(RFTraceType), ViReal64(Scale), ViReal64(Position)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadVerticalParameters(self, Vi, RFTraceType):
        Scale = ViReal64()
        Position = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadVerticalParameters(
            ViSession(Vi), ViInt32(RFTraceType), byref(Scale), byref(Position)
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Scale = float(Scale.value)
        Position = float(Position.value)
        return Scale, Position

    def ConfigureManualDetectionMethod(self, Vi, Type, Method):
        status = self.dll.Tkdpo2k3k4k_ConfigureManualDetectionMethod(ViSession(Vi), ViInt32(Type), ViInt32(Method))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadManualDetectionMethod(self, Vi, Type):
        Method = ViInt32()
        status = self.dll.Tkdpo2k3k4k_ReadManualDetectionMethod(ViSession(Vi), ViInt32(Type), byref(Method))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        return int(Method.value)

    def SetAutoRefLevel(self, Vi):
        status = self.dll.Tkdpo2k3k4k_SetAutoRefLevel(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def MoveRefToCentre(self, Vi):
        status = self.dll.Tkdpo2k3k4k_MoveRefToCentre(ViSession(Vi))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadReference(self, Vi):
        Frequency = ViReal64()
        Amplitude = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadReference(ViSession(Vi), byref(Frequency), byref(Amplitude))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        Frequency = float(Frequency.value)
        Amplitude = float(Amplitude.value)
        return Frequency, Amplitude

    def ReadManual(self, Vi, Marker):
        HorizontalValue = ViReal64()
        HorizontalDelta = ViReal64()
        VerticalValue = ViReal64()
        VerticalDelta = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadManual(
            ViSession(Vi),
            ViInt32(Marker),
            byref(HorizontalValue),
            byref(HorizontalDelta),
            byref(VerticalValue),
            byref(VerticalDelta),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        HorizontalValue = float(HorizontalValue.value)
        HorizontalDelta = float(HorizontalDelta.value)
        VerticalValue = float(VerticalValue.value)
        VerticalDelta = float(VerticalDelta.value)
        return HorizontalValue, HorizontalDelta, VerticalValue, VerticalDelta

    def ConfigureManual(self, Vi, Marker, HorizontalValue):
        status = self.dll.Tkdpo2k3k4k_ConfigureManual(ViSession(Vi), ViInt32(Marker), ViReal64(HorizontalValue))
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ConfigurePeak(self, Vi, MaximumMarkers, Threshold, Excursion):
        status = self.dll.Tkdpo2k3k4k_ConfigurePeak(
            ViSession(Vi),
            ViInt32(MaximumMarkers),
            ViReal64(Threshold),
            ViReal64(Excursion),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)

        return

    def ReadPeak(self, Vi):
        State = ViBoolean()
        MaximumMarkers = ViInt32()
        Threshold = ViReal64()
        Excursion = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadPeak(
            ViSession(Vi),
            byref(State),
            byref(MaximumMarkers),
            byref(Threshold),
            byref(Excursion),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        State = bool(State.value)
        MaximumMarkers = int(MaximumMarkers.value)
        Threshold = float(Threshold.value)
        Excursion = float(Excursion.value)
        return State, MaximumMarkers, Threshold, Excursion

    def FetchY(self, Vi, Source, TraceArrayBufferSize):
        TraceArray = ARRAY_ViReal64(TraceArrayBufferSize)
        TraceArrayActualSize = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_FetchY(
            ViSession(Vi),
            ViInt32(Source),
            ViInt32(TraceArrayBufferSize),
            TraceArray,
            byref(TraceArrayActualSize),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        TraceArray = list(TraceArray)
        TraceArrayActualSize = int(TraceArrayActualSize.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return TraceArray, TraceArrayActualSize, InitialX, XIncrement

    def ReadY(self, Vi, Source, TraceArrayBufferSize):
        TraceArray = ARRAY_ViReal64(TraceArrayBufferSize)
        TraceArrayActualSize = ViInt32()
        InitialX = ViReal64()
        XIncrement = ViReal64()
        status = self.dll.Tkdpo2k3k4k_ReadY(
            ViSession(Vi),
            ViInt32(Source),
            ViInt32(TraceArrayBufferSize),
            TraceArray,
            byref(TraceArrayActualSize),
            byref(InitialX),
            byref(XIncrement),
        )
        if int(status) < 0:
            raise InstrumentError(status)
        elif int(status) > 0:
            raise InstrumentWarning(status)
        TraceArray = list(TraceArray)
        TraceArrayActualSize = int(TraceArrayActualSize.value)
        InitialX = float(InitialX.value)
        XIncrement = float(XIncrement.value)
        return TraceArray, TraceArrayActualSize, InitialX, XIncrement
