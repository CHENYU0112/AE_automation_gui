from __future__ import annotations

from pverify.core.lab.driver_identity import *

from . import AgXSAn_const
from .AgXSAn_dllwrap import *


class AgXSAn(IVICDriverWrapper):
    def __init__(self):
        super().__init__()
        self._dllwrap = AgXSAn_dllwrap()
        self._vi = None
        """:type : int"""
        self.__Initialized = False
        self.Enums = AgXSAn_const
        self.__Identity = Identity_IviC(self)

    @property
    def Identity(self):
        return self.__Identity

    @property
    def Initialized(self):
        return self.__Initialized

    @property
    def dll(self):
        return self._dllwrap.dll

    @property
    def drivername(self):
        return self._dllwrap.drivername

    @property
    def const(self):
        return self._dllwrap.const

    def Initialize(self, ResourceName, IdQuery, Reset, OptionString=""):
        """
        Opens the I/O session to the instrument. Driver methods and properties that
        access the instrument are only accessible after Initialize is called. Initialize
        optionally performs a Reset and queries the instrument to validate the
        instrument model.

        :param ResourceName: An IVI logical name or an instrument specific string that identifies the address
            of the instrument, such as a VISA resource descriptor string.
        :type ResourceName: str
        :param IdQuery: Specifies whether to verify the ID of the instrument.
        :type IdQuery: bool
        :param Reset: Specifies whether to reset the instrument.
        :type Reset: bool
        :keyword OptionString: The user can use the OptionsString parameter to specify the initial values of
            certain IVI inherent attributes for the session. The format of an assignment in
            the OptionsString parameter is "Name=Value", where Name is one of: RangeCheck,
            QuerytInstrStatus, Cache, Simulate, RecordCoercions, InterchangeCheck, or
            DriverSetup. Value is either true or false except for DriverSetup. If the
            Options String parameter contains an assignment for the Driver Setup attribute,
            the Initialize function assumes that everything following "DriverSetup=" is part
            of the assignment.
        """
        self._vi = self._dllwrap.InitWithOptions(ResourceName, IdQuery, Reset, OptionString)
        self.__Initialized = True

    def Close(self):
        """
        Closes the I/O session to the instrument. Driver methods and properties that
        access the instrument are not accessible after Close is called.
        """
        self._dllwrap.close(self._vi)
        self.__Initialized = False

    def init(self, ResourceName, IdQuery, Reset):
        """

        :param ResourceName:
        :type ResourceName:
        :param IdQuery:
        :type IdQuery:
        :param Reset:
        :type Reset:
        """
        return self._dllwrap.init(ResourceName, IdQuery, Reset)

    def SelectInstrPersonality(self, PersonalityName):
        """

        :param PersonalityName:
        :type PersonalityName:
        """
        return self._dllwrap.SelectInstrPersonality(self._vi, PersonalityName)

    def revision_query(self):
        """"""
        return self._dllwrap.revision_query(self._vi)

    def error_message(self, ErrorCode):
        """

        :param ErrorCode:
        :type ErrorCode:
        """
        return self._dllwrap.error_message(self._vi, ErrorCode)

    def GetError(self, ErrorDescriptionBufferSize):
        """

        :param ErrorDescriptionBufferSize:
        :type ErrorDescriptionBufferSize:
        """
        return self._dllwrap.GetError(self._vi, ErrorDescriptionBufferSize)

    def ClearError(self):
        """"""
        return self._dllwrap.ClearError(self._vi)

    def GetNextCoercionRecord(self, CoercionRecordBufferSize):
        """

        :param CoercionRecordBufferSize:
        :type CoercionRecordBufferSize:
        """
        return self._dllwrap.GetNextCoercionRecord(self._vi, CoercionRecordBufferSize)

    def InvalidateAllAttributes(self):
        """"""
        return self._dllwrap.InvalidateAllAttributes(self._vi)

    def Disable(self):
        """"""
        return self._dllwrap.Disable(self._vi)

    def error_query(self):
        """"""
        return self._dllwrap.error_query(self._vi)

    def LockSession(self):
        """"""
        return self._dllwrap.LockSession(self._vi)

    def reset(self):
        """"""
        return self._dllwrap.reset(self._vi)

    def ResetWithDefaults(self):
        """"""
        return self._dllwrap.ResetWithDefaults(self._vi)

    def self_test(self):
        """"""
        return self._dllwrap.self_test(self._vi)

    def UnlockSession(self):
        """"""
        return self._dllwrap.UnlockSession(self._vi)

    def GetAttributeViInt32(self, RepCapIdentifier, AttributeID):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param AttributeID:
        :type AttributeID:
        """
        return self._dllwrap.GetAttributeViInt32(self._vi, RepCapIdentifier, AttributeID)

    def GetAttributeViReal64(self, RepCapIdentifier, AttributeID):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param AttributeID:
        :type AttributeID:
        """
        return self._dllwrap.GetAttributeViReal64(self._vi, RepCapIdentifier, AttributeID)

    def GetAttributeViBoolean(self, RepCapIdentifier, AttributeID):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param AttributeID:
        :type AttributeID:
        """
        return self._dllwrap.GetAttributeViBoolean(self._vi, RepCapIdentifier, AttributeID)

    def GetAttributeViSession(self, RepCapIdentifier, AttributeID):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param AttributeID:
        :type AttributeID:
        """
        return self._dllwrap.GetAttributeViSession(self._vi, RepCapIdentifier, AttributeID)

    def GetAttributeViString(self, RepCapIdentifier, AttributeID, AttributeValueBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param AttributeID:
        :type AttributeID:
        :param AttributeValueBufferSize:
        :type AttributeValueBufferSize:
        """
        return self._dllwrap.GetAttributeViString(self._vi, RepCapIdentifier, AttributeID, AttributeValueBufferSize)

    def SetAttributeViInt32(self, RepCapIdentifier, AttributeID, AttributeValue):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param AttributeID:
        :type AttributeID:
        :param AttributeValue:
        :type AttributeValue:
        """
        return self._dllwrap.SetAttributeViInt32(self._vi, RepCapIdentifier, AttributeID, AttributeValue)

    def SetAttributeViReal64(self, RepCapIdentifier, AttributeID, AttributeValue):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param AttributeID:
        :type AttributeID:
        :param AttributeValue:
        :type AttributeValue:
        """
        return self._dllwrap.SetAttributeViReal64(self._vi, RepCapIdentifier, AttributeID, AttributeValue)

    def SetAttributeViBoolean(self, RepCapIdentifier, AttributeID, AttributeValue):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param AttributeID:
        :type AttributeID:
        :param AttributeValue:
        :type AttributeValue:
        """
        return self._dllwrap.SetAttributeViBoolean(self._vi, RepCapIdentifier, AttributeID, AttributeValue)

    def SetAttributeViSession(self, RepCapIdentifier, AttributeID, AttributeValue):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param AttributeID:
        :type AttributeID:
        :param AttributeValue:
        :type AttributeValue:
        """
        return self._dllwrap.SetAttributeViSession(self._vi, RepCapIdentifier, AttributeID, AttributeValue)

    def SetAttributeViString(self, RepCapIdentifier, AttributeID, AttributeValue):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param AttributeID:
        :type AttributeID:
        :param AttributeValue:
        :type AttributeValue:
        """
        return self._dllwrap.SetAttributeViString(self._vi, RepCapIdentifier, AttributeID, AttributeValue)

    def ConfigureFrequencyOffset(self, FrequencyOffset):
        """

        :param FrequencyOffset:
        :type FrequencyOffset:
        """
        return self._dllwrap.ConfigureFrequencyOffset(self._vi, FrequencyOffset)

    def ConfigureTraceType(self, TraceName, TraceType):
        """

        :param TraceName:
        :type TraceName:
        :param TraceType:
        :type TraceType:
        """
        return self._dllwrap.ConfigureTraceType(self._vi, TraceName, TraceType)

    def GetTraceName(self, Index, NameBufferSize):
        """

        :param Index:
        :type Index:
        :param NameBufferSize:
        :type NameBufferSize:
        """
        return self._dllwrap.GetTraceName(self._vi, Index, NameBufferSize)

    def QueryTraceSize(self, TraceName):
        """

        :param TraceName:
        :type TraceName:
        """
        return self._dllwrap.QueryTraceSize(self._vi, TraceName)

    def ConfigureAcquisition(
        self,
        SweepModeContinuous,
        NumberOfSweeps,
        DetectorTypeAuto,
        DetectorType,
        VerticalScale,
    ):
        """

        :param SweepModeContinuous:
        :type SweepModeContinuous:
        :param NumberOfSweeps:
        :type NumberOfSweeps:
        :param DetectorTypeAuto:
        :type DetectorTypeAuto:
        :param DetectorType:
        :type DetectorType:
        :param VerticalScale:
        :type VerticalScale:
        """
        return self._dllwrap.ConfigureAcquisition(
            self._vi,
            SweepModeContinuous,
            NumberOfSweeps,
            DetectorTypeAuto,
            DetectorType,
            VerticalScale,
        )

    def ConfigureFrequencyCenterSpan(self, CenterFrequency, Span):
        """

        :param CenterFrequency:
        :type CenterFrequency:
        :param Span:
        :type Span:
        """
        return self._dllwrap.ConfigureFrequencyCenterSpan(self._vi, CenterFrequency, Span)

    def ConfigureFrequencyStartStop(self, StartFrequency, StopFrequency):
        """

        :param StartFrequency:
        :type StartFrequency:
        :param StopFrequency:
        :type StopFrequency:
        """
        return self._dllwrap.ConfigureFrequencyStartStop(self._vi, StartFrequency, StopFrequency)

    def ConfigureLevel(
        self,
        AmplitudeUnits,
        InputImpedance,
        ReferenceLevel,
        ReferenceLevelOffset,
        AttenuationAuto,
        Attenuation,
    ):
        """

        :param AmplitudeUnits:
        :type AmplitudeUnits:
        :param InputImpedance:
        :type InputImpedance:
        :param ReferenceLevel:
        :type ReferenceLevel:
        :param ReferenceLevelOffset:
        :type ReferenceLevelOffset:
        :param AttenuationAuto:
        :type AttenuationAuto:
        :param Attenuation:
        :type Attenuation:
        """
        return self._dllwrap.ConfigureLevel(
            self._vi,
            AmplitudeUnits,
            InputImpedance,
            ReferenceLevel,
            ReferenceLevelOffset,
            AttenuationAuto,
            Attenuation,
        )

    def ConfigureSweepCoupling(
        self,
        ResolutionBandwidthAuto,
        ResolutionBandwidth,
        VideoBandwidthAuto,
        VideoBandwidth,
        SweepTimeAuto,
        SweepTime,
    ):
        """

        :param ResolutionBandwidthAuto:
        :type ResolutionBandwidthAuto:
        :param ResolutionBandwidth:
        :type ResolutionBandwidth:
        :param VideoBandwidthAuto:
        :type VideoBandwidthAuto:
        :param VideoBandwidth:
        :type VideoBandwidth:
        :param SweepTimeAuto:
        :type SweepTimeAuto:
        :param SweepTime:
        :type SweepTime:
        """
        return self._dllwrap.ConfigureSweepCoupling(
            self._vi,
            ResolutionBandwidthAuto,
            ResolutionBandwidth,
            VideoBandwidthAuto,
            VideoBandwidth,
            SweepTimeAuto,
            SweepTime,
        )

    def ConfigureSignalTrackEnabled(self, SignalTrackEnabled):
        """

        :param SignalTrackEnabled:
        :type SignalTrackEnabled:
        """
        return self._dllwrap.ConfigureSignalTrackEnabled(self._vi, SignalTrackEnabled)

    def GetMarkerName(self, Index, NameBufferSize):
        """

        :param Index:
        :type Index:
        :param NameBufferSize:
        :type NameBufferSize:
        """
        return self._dllwrap.GetMarkerName(self._vi, Index, NameBufferSize)

    def MoveMarker(self, MarkerPosition):
        """

        :param MarkerPosition:
        :type MarkerPosition:
        """
        return self._dllwrap.MoveMarker(self._vi, MarkerPosition)

    def SetActiveMarker(self, ActiveMarker):
        """

        :param ActiveMarker:
        :type ActiveMarker:
        """
        return self._dllwrap.SetActiveMarker(self._vi, ActiveMarker)

    def QueryMarkerType(self):
        """"""
        return self._dllwrap.QueryMarkerType(self._vi)

    def ConfigureMarkerEnabled(self, MarkerEnabled, MarkerTraceName):
        """

        :param MarkerEnabled:
        :type MarkerEnabled:
        :param MarkerTraceName:
        :type MarkerTraceName:
        """
        return self._dllwrap.ConfigureMarkerEnabled(self._vi, MarkerEnabled, MarkerTraceName)

    def ConfigureMarkerSearch(self, PeakExcursion, MarkerThreshold):
        """

        :param PeakExcursion:
        :type PeakExcursion:
        :param MarkerThreshold:
        :type MarkerThreshold:
        """
        return self._dllwrap.ConfigureMarkerSearch(self._vi, PeakExcursion, MarkerThreshold)

    def DisableAllMarkers(self):
        """"""
        return self._dllwrap.DisableAllMarkers(self._vi)

    def MakeMarkerDelta(self, DeltaMarker):
        """

        :param DeltaMarker:
        :type DeltaMarker:
        """
        return self._dllwrap.MakeMarkerDelta(self._vi, DeltaMarker)

    def QueryMarker(self):
        """"""
        return self._dllwrap.QueryMarker(self._vi)

    def QueryReferenceMarker(self):
        """"""
        return self._dllwrap.QueryReferenceMarker(self._vi)

    def MarkerSearch(self, SearchType):
        """

        :param SearchType:
        :type SearchType:
        """
        return self._dllwrap.MarkerSearch(self._vi, SearchType)

    def SetInstrumentFromMarker(self, InstrumentSetting):
        """

        :param InstrumentSetting:
        :type InstrumentSetting:
        """
        return self._dllwrap.SetInstrumentFromMarker(self._vi, InstrumentSetting)

    def ConfigureMarkerFrequencyCounter(self, Enabled, Resolution):
        """

        :param Enabled:
        :type Enabled:
        :param Resolution:
        :type Resolution:
        """
        return self._dllwrap.ConfigureMarkerFrequencyCounter(self._vi, Enabled, Resolution)

    def ConfigureTriggerSource(self, TriggerSource):
        """

        :param TriggerSource:
        :type TriggerSource:
        """
        return self._dllwrap.ConfigureTriggerSource(self._vi, TriggerSource)

    def ConfigureExternalTrigger(self, ExternalTriggerLevel, ExternalTriggerSlope):
        """

        :param ExternalTriggerLevel:
        :type ExternalTriggerLevel:
        :param ExternalTriggerSlope:
        :type ExternalTriggerSlope:
        """
        return self._dllwrap.ConfigureExternalTrigger(self._vi, ExternalTriggerLevel, ExternalTriggerSlope)

    def ConfigureVideoTrigger(self, VideoTriggerLevel, VideoTriggerSlope):
        """

        :param VideoTriggerLevel:
        :type VideoTriggerLevel:
        :param VideoTriggerSlope:
        :type VideoTriggerSlope:
        """
        return self._dllwrap.ConfigureVideoTrigger(self._vi, VideoTriggerLevel, VideoTriggerSlope)

    def IviLxiSync_GetTriggerAlarmName(self, AlarmIndex, AlarmNameBufferSize):
        """

        :param AlarmIndex:
        :type AlarmIndex:
        :param AlarmNameBufferSize:
        :type AlarmNameBufferSize:
        """
        return self._dllwrap.IviLxiSync_GetTriggerAlarmName(self._vi, AlarmIndex, AlarmNameBufferSize)

    def IviLxiSync_ConfigureTriggerAlarm(self, AlarmName, TimeSeconds, TimeFraction, Period, RepeatCount):
        """

        :param AlarmName:
        :type AlarmName:
        :param TimeSeconds:
        :type TimeSeconds:
        :param TimeFraction:
        :type TimeFraction:
        :param Period:
        :type Period:
        :param RepeatCount:
        :type RepeatCount:
        """
        return self._dllwrap.IviLxiSync_ConfigureTriggerAlarm(
            self._vi, AlarmName, TimeSeconds, TimeFraction, Period, RepeatCount
        )

    def IviLxiSync_AddTriggerAlarm(self, AlarmName):
        """

        :param AlarmName:
        :type AlarmName:
        """
        return self._dllwrap.IviLxiSync_AddTriggerAlarm(self._vi, AlarmName)

    def IviLxiSync_DisableAllTriggerAlarms(self):
        """"""
        return self._dllwrap.IviLxiSync_DisableAllTriggerAlarms(self._vi)

    def IviLxiSync_RemoveTriggerAlarm(self, AlarmName):
        """

        :param AlarmName:
        :type AlarmName:
        """
        return self._dllwrap.IviLxiSync_RemoveTriggerAlarm(self._vi, AlarmName)

    def IviLxiSync_RemoveAllTriggerAlarms(self):
        """"""
        return self._dllwrap.IviLxiSync_RemoveAllTriggerAlarms(self._vi)

    def IviLxiSync_GetTriggerSourceName(self, SourceIndex, SourceNameBufferSize):
        """

        :param SourceIndex:
        :type SourceIndex:
        :param SourceNameBufferSize:
        :type SourceNameBufferSize:
        """
        return self._dllwrap.IviLxiSync_GetTriggerSourceName(self._vi, SourceIndex, SourceNameBufferSize)

    def IviLxiSync_ConfigureTriggerSource(self, SourceName, Delay, Detection):
        """

        :param SourceName:
        :type SourceName:
        :param Delay:
        :type Delay:
        :param Detection:
        :type Detection:
        """
        return self._dllwrap.IviLxiSync_ConfigureTriggerSource(self._vi, SourceName, Delay, Detection)

    def IviLxiSync_AddTriggerSource(self, SourceName):
        """

        :param SourceName:
        :type SourceName:
        """
        return self._dllwrap.IviLxiSync_AddTriggerSource(self._vi, SourceName)

    def IviLxiSync_RemoveTriggerSource(self, SourceName):
        """

        :param SourceName:
        :type SourceName:
        """
        return self._dllwrap.IviLxiSync_RemoveTriggerSource(self._vi, SourceName)

    def IviLxiSync_RemoveAllCustomTriggerSources(self):
        """"""
        return self._dllwrap.IviLxiSync_RemoveAllCustomTriggerSources(self._vi)

    def ConfigureConversionLossTableEnabled(self, ConversionLossTableEnabled):
        """

        :param ConversionLossTableEnabled:
        :type ConversionLossTableEnabled:
        """
        return self._dllwrap.ConfigureConversionLossTableEnabled(self._vi, ConversionLossTableEnabled)

    def ConfigureExternalMixerBiasEnabled(self, BiasEnabled):
        """

        :param BiasEnabled:
        :type BiasEnabled:
        """
        return self._dllwrap.ConfigureExternalMixerBiasEnabled(self._vi, BiasEnabled)

    def ConfigureExternalMixerEnabled(self, ExternalMixerEnabled):
        """

        :param ExternalMixerEnabled:
        :type ExternalMixerEnabled:
        """
        return self._dllwrap.ConfigureExternalMixerEnabled(self._vi, ExternalMixerEnabled)

    def ConfigureExternalMixerNumberOfPorts(self, NumberOfPorts):
        """

        :param NumberOfPorts:
        :type NumberOfPorts:
        """
        return self._dllwrap.ConfigureExternalMixerNumberOfPorts(self._vi, NumberOfPorts)

    def ConfigureExternalMixer(self, Harmonic, AverageConversionLoss):
        """

        :param Harmonic:
        :type Harmonic:
        :param AverageConversionLoss:
        :type AverageConversionLoss:
        """
        return self._dllwrap.ConfigureExternalMixer(self._vi, Harmonic, AverageConversionLoss)

    def ConfigureExternalMixerBias(self, Bias, BiasLimit):
        """

        :param Bias:
        :type Bias:
        :param BiasLimit:
        :type BiasLimit:
        """
        return self._dllwrap.ConfigureExternalMixerBias(self._vi, Bias, BiasLimit)

    def ConfigureConversionLossTable(self, Count):
        """

        :param Count:
        :type Count:
        """
        return self._dllwrap.ConfigureConversionLossTable(self._vi, Count)

    def PeakPreselector(self):
        """"""
        return self._dllwrap.PeakPreselector(self._vi)

    def AddTraces(self, DestinationTrace, Trace1, Trace2):
        """

        :param DestinationTrace:
        :type DestinationTrace:
        :param Trace1:
        :type Trace1:
        :param Trace2:
        :type Trace2:
        """
        return self._dllwrap.AddTraces(self._vi, DestinationTrace, Trace1, Trace2)

    def CopyTrace(self, DestinationTrace, SourceTrace):
        """

        :param DestinationTrace:
        :type DestinationTrace:
        :param SourceTrace:
        :type SourceTrace:
        """
        return self._dllwrap.CopyTrace(self._vi, DestinationTrace, SourceTrace)

    def ExchangeTraces(self, Trace1, Trace2):
        """

        :param Trace1:
        :type Trace1:
        :param Trace2:
        :type Trace2:
        """
        return self._dllwrap.ExchangeTraces(self._vi, Trace1, Trace2)

    def SubtractTraces(self, DestinationTrace, Trace1, Trace2):
        """

        :param DestinationTrace:
        :type DestinationTrace:
        :param Trace1:
        :type Trace1:
        :param Trace2:
        :type Trace2:
        """
        return self._dllwrap.SubtractTraces(self._vi, DestinationTrace, Trace1, Trace2)

    def IviLxiSync_GetArmAlarmName(self, AlarmIndex, AlarmNameBufferSize):
        """

        :param AlarmIndex:
        :type AlarmIndex:
        :param AlarmNameBufferSize:
        :type AlarmNameBufferSize:
        """
        return self._dllwrap.IviLxiSync_GetArmAlarmName(self._vi, AlarmIndex, AlarmNameBufferSize)

    def IviLxiSync_ConfigureArmAlarm(self, AlarmName, Enabled, TimeSeconds, TimeFraction, Period, RepeatCount):
        """

        :param AlarmName:
        :type AlarmName:
        :param Enabled:
        :type Enabled:
        :param TimeSeconds:
        :type TimeSeconds:
        :param TimeFraction:
        :type TimeFraction:
        :param Period:
        :type Period:
        :param RepeatCount:
        :type RepeatCount:
        """
        return self._dllwrap.IviLxiSync_ConfigureArmAlarm(
            self._vi, AlarmName, Enabled, TimeSeconds, TimeFraction, Period, RepeatCount
        )

    def IviLxiSync_AddArmAlarm(self, AlarmName):
        """

        :param AlarmName:
        :type AlarmName:
        """
        return self._dllwrap.IviLxiSync_AddArmAlarm(self._vi, AlarmName)

    def IviLxiSync_DisableAllArmAlarms(self):
        """"""
        return self._dllwrap.IviLxiSync_DisableAllArmAlarms(self._vi)

    def IviLxiSync_RemoveArmAlarm(self, AlarmName):
        """

        :param AlarmName:
        :type AlarmName:
        """
        return self._dllwrap.IviLxiSync_RemoveArmAlarm(self._vi, AlarmName)

    def IviLxiSync_RemoveAllCustomArmAlarms(self):
        """"""
        return self._dllwrap.IviLxiSync_RemoveAllCustomArmAlarms(self._vi)

    def IviLxiSync_GetArmSourceName(self, SourceIndex, SourceNameBufferSize):
        """

        :param SourceIndex:
        :type SourceIndex:
        :param SourceNameBufferSize:
        :type SourceNameBufferSize:
        """
        return self._dllwrap.IviLxiSync_GetArmSourceName(self._vi, SourceIndex, SourceNameBufferSize)

    def IviLxiSync_ConfigureArmSource(self, SourceName, Enabled, Detection):
        """

        :param SourceName:
        :type SourceName:
        :param Enabled:
        :type Enabled:
        :param Detection:
        :type Detection:
        """
        return self._dllwrap.IviLxiSync_ConfigureArmSource(self._vi, SourceName, Enabled, Detection)

    def IviLxiSync_AddArmSource(self, SourceName):
        """

        :param SourceName:
        :type SourceName:
        """
        return self._dllwrap.IviLxiSync_AddArmSource(self._vi, SourceName)

    def IviLxiSync_DisableAllArmSources(self):
        """"""
        return self._dllwrap.IviLxiSync_DisableAllArmSources(self._vi)

    def IviLxiSync_RemoveArmSource(self, SourceName):
        """

        :param SourceName:
        :type SourceName:
        """
        return self._dllwrap.IviLxiSync_RemoveArmSource(self._vi, SourceName)

    def IviLxiSync_RemoveAllCustomArmSources(self):
        """"""
        return self._dllwrap.IviLxiSync_RemoveAllCustomArmSources(self._vi)

    def IviLxiSync_GetEventName(self, EventIndex, EventNameBufferSize):
        """

        :param EventIndex:
        :type EventIndex:
        :param EventNameBufferSize:
        :type EventNameBufferSize:
        """
        return self._dllwrap.IviLxiSync_GetEventName(self._vi, EventIndex, EventNameBufferSize)

    def IviLxiSync_ConfigureEvent(self, EventName, DriveMode, Source, DestinationPath, Slope):
        """

        :param EventName:
        :type EventName:
        :param DriveMode:
        :type DriveMode:
        :param Source:
        :type Source:
        :param DestinationPath:
        :type DestinationPath:
        :param Slope:
        :type Slope:
        """
        return self._dllwrap.IviLxiSync_ConfigureEvent(self._vi, EventName, DriveMode, Source, DestinationPath, Slope)

    def IviLxiSync_AddEvent(self, EventName):
        """

        :param EventName:
        :type EventName:
        """
        return self._dllwrap.IviLxiSync_AddEvent(self._vi, EventName)

    def IviLxiSync_DisableAllEvents(self):
        """"""
        return self._dllwrap.IviLxiSync_DisableAllEvents(self._vi)

    def IviLxiSync_RemoveEvent(self, EventName):
        """

        :param EventName:
        :type EventName:
        """
        return self._dllwrap.IviLxiSync_RemoveEvent(self._vi, EventName)

    def IviLxiSync_RemoveAllCustomEvents(self):
        """"""
        return self._dllwrap.IviLxiSync_RemoveAllCustomEvents(self._vi)

    def FetchYTrace(self, TraceName, ArrayLength):
        """

        :param TraceName:
        :type TraceName:
        :param ArrayLength:
        :type ArrayLength:
        """
        return self._dllwrap.FetchYTrace(self._vi, TraceName, ArrayLength)

    def ReadYTrace(self, TraceName, MaxTimeMilliseconds, ArrayLength):
        """

        :param TraceName:
        :type TraceName:
        :param MaxTimeMilliseconds:
        :type MaxTimeMilliseconds:
        :param ArrayLength:
        :type ArrayLength:
        """
        return self._dllwrap.ReadYTrace(self._vi, TraceName, MaxTimeMilliseconds, ArrayLength)

    def Abort(self):
        """"""
        return self._dllwrap.Abort(self._vi)

    def AcquisitionStatus(self):
        """"""
        return self._dllwrap.AcquisitionStatus(self._vi)

    def Initiate(self):
        """"""
        return self._dllwrap.Initiate(self._vi)

    def SendSoftwareTrigger(self):
        """"""
        return self._dllwrap.SendSoftwareTrigger(self._vi)

    def TriggerExternalConfigure(self, ExternalTriggerLevel, ExternalTriggerSlope):
        """

        :param ExternalTriggerLevel:
        :type ExternalTriggerLevel:
        :param ExternalTriggerSlope:
        :type ExternalTriggerSlope:
        """
        return self._dllwrap.TriggerExternalConfigure(self._vi, ExternalTriggerLevel, ExternalTriggerSlope)

    def TriggerExternal2Configure(self, External2TriggerLevel, External2TriggerSlope):
        """

        :param External2TriggerLevel:
        :type External2TriggerLevel:
        :param External2TriggerSlope:
        :type External2TriggerSlope:
        """
        return self._dllwrap.TriggerExternal2Configure(self._vi, External2TriggerLevel, External2TriggerSlope)

    def TriggerVideoConfigure(self, VideoTriggerLevel, VideoTriggerSlope):
        """

        :param VideoTriggerLevel:
        :type VideoTriggerLevel:
        :param VideoTriggerSlope:
        :type VideoTriggerSlope:
        """
        return self._dllwrap.TriggerVideoConfigure(self._vi, VideoTriggerLevel, VideoTriggerSlope)

    def IviLxiSync_ClearEventLog(self):
        """"""
        return self._dllwrap.IviLxiSync_ClearEventLog(self._vi)

    def IviLxiSync_GetNextEventLogEntry(self, LogEntryBufferSize):
        """

        :param LogEntryBufferSize:
        :type LogEntryBufferSize:
        """
        return self._dllwrap.IviLxiSync_GetNextEventLogEntry(self._vi, LogEntryBufferSize)

    def IviLxiSync_GetSystemTime(self):
        """"""
        return self._dllwrap.IviLxiSync_GetSystemTime(self._vi)

    def FrequencyFullSpan(self):
        """"""
        return self._dllwrap.FrequencyFullSpan(self._vi)

    def FrequencyPreviousSpan(self):
        """"""
        return self._dllwrap.FrequencyPreviousSpan(self._vi)

    def FrequencyTune(self):
        """"""
        return self._dllwrap.FrequencyTune(self._vi)

    def AcquisitionGetDetectorTrace(self, TraceNo):
        """

        :param TraceNo:
        :type TraceNo:
        """
        return self._dllwrap.AcquisitionGetDetectorTrace(self._vi, TraceNo)

    def AcquisitionGetDetectorTraceAutoEnabled(self, TraceNo):
        """

        :param TraceNo:
        :type TraceNo:
        """
        return self._dllwrap.AcquisitionGetDetectorTraceAutoEnabled(self._vi, TraceNo)

    def AcquisitionSetDetectorTrace(self, TraceNo, DetectorType):
        """

        :param TraceNo:
        :type TraceNo:
        :param DetectorType:
        :type DetectorType:
        """
        return self._dllwrap.AcquisitionSetDetectorTrace(self._vi, TraceNo, DetectorType)

    def AcquisitionSetDetectorTraceAutoEnabled(self, TraceNo, Auto):
        """

        :param TraceNo:
        :type TraceNo:
        :param Auto:
        :type Auto:
        """
        return self._dllwrap.AcquisitionSetDetectorTraceAutoEnabled(self._vi, TraceNo, Auto)

    def ZoomIn(self):
        """"""
        return self._dllwrap.ZoomIn(self._vi)

    def ZoomOut(self):
        """"""
        return self._dllwrap.ZoomOut(self._vi)

    def TraceClear(self, RepCapIdentifier):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        """
        return self._dllwrap.TraceClear(self._vi, RepCapIdentifier)

    def TraceFetchX(self, Trace, ValBufferSize):
        """

        :param Trace:
        :type Trace:
        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.TraceFetchX(self._vi, Trace, ValBufferSize)

    def TraceCompress(self, Trace, Method, StartOffset, Length, RepeatOffset, RepeatLimit, ValBufferSize):
        """

        :param Trace:
        :type Trace:
        :param Method:
        :type Method:
        :param StartOffset:
        :type StartOffset:
        :param Length:
        :type Length:
        :param RepeatOffset:
        :type RepeatOffset:
        :param RepeatLimit:
        :type RepeatLimit:
        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.TraceCompress(
            self._vi,
            Trace,
            Method,
            StartOffset,
            Length,
            RepeatOffset,
            RepeatLimit,
            ValBufferSize,
        )

    def TraceImportTraceCSV(self, Trace, TraceNumber, Filename):
        """

        :param Trace:
        :type Trace:
        :param TraceNumber:
        :type TraceNumber:
        :param Filename:
        :type Filename:
        """
        return self._dllwrap.TraceImportTraceCSV(self._vi, Trace, TraceNumber, Filename)

    def TraceExportTraceCSV(self, Trace, TraceNumber, Filename):
        """

        :param Trace:
        :type Trace:
        :param TraceNumber:
        :type TraceNumber:
        :param Filename:
        :type Filename:
        """
        return self._dllwrap.TraceExportTraceCSV(self._vi, Trace, TraceNumber, Filename)

    def TracePeaks(self, Trace, Threshold, Excursion, Sort, ValBufferSize):
        """

        :param Trace:
        :type Trace:
        :param Threshold:
        :type Threshold:
        :param Excursion:
        :type Excursion:
        :param Sort:
        :type Sort:
        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.TracePeaks(self._vi, Trace, Threshold, Excursion, Sort, ValBufferSize)

    def SAACPConfigure(self):
        """"""
        return self._dllwrap.SAACPConfigure(self._vi)

    def SAACPConfigureNoPreset(self):
        """"""
        return self._dllwrap.SAACPConfigureNoPreset(self._vi)

    def SAACPTraceFetch(self, RepCapIdentifier, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPTraceFetch(self._vi, RepCapIdentifier, RetValBufferSize)

    def SAACPTraceRead(self, RepCapIdentifier, MaxTime, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPTraceRead(self._vi, RepCapIdentifier, MaxTime, RetValBufferSize)

    def SAACPTraceReadSignal(self, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPTraceReadSignal(
            self._vi, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize
        )

    def SAACPTracesAbort(self):
        """"""
        return self._dllwrap.SAACPTracesAbort(self._vi)

    def SAACPTracesInitiate(self):
        """"""
        return self._dllwrap.SAACPTracesInitiate(self._vi)

    def SAACPTracesInitiateSignal(self, Frequency, Amplitude):
        """

        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        """
        return self._dllwrap.SAACPTracesInitiateSignal(self._vi, Frequency, Amplitude)

    def SAACPCarrierListConfigureCarrierMethod(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SAACPCarrierListConfigureCarrierMethod(self._vi, StateBufferSize)

    def SAACPCarrierListConfigureChannelSpacing(self, FrequencyDifferenceBufferSize):
        """

        :param FrequencyDifferenceBufferSize:
        :type FrequencyDifferenceBufferSize:
        """
        return self._dllwrap.SAACPCarrierListConfigureChannelSpacing(self._vi, FrequencyDifferenceBufferSize)

    def SAACPCarrierListConfigureCouplingEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SAACPCarrierListConfigureCouplingEnabled(self._vi, StateBufferSize)

    def SAACPCarrierListConfigureIntegrationBandwidth(self, BandwidthBufferSize):
        """

        :param BandwidthBufferSize:
        :type BandwidthBufferSize:
        """
        return self._dllwrap.SAACPCarrierListConfigureIntegrationBandwidth(self._vi, BandwidthBufferSize)

    def SAACPCarrierListConfigureMethod(self, MethodBufferSize):
        """

        :param MethodBufferSize:
        :type MethodBufferSize:
        """
        return self._dllwrap.SAACPCarrierListConfigureMethod(self._vi, MethodBufferSize)

    def SAACPCarrierListConfigurePowerPresent(self, EnabledBufferSize):
        """

        :param EnabledBufferSize:
        :type EnabledBufferSize:
        """
        return self._dllwrap.SAACPCarrierListConfigurePowerPresent(self._vi, EnabledBufferSize)

    def SAACPCarrierListQueryCarrierMethod(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPCarrierListQueryCarrierMethod(self._vi, RetValBufferSize)

    def SAACPCarrierListQueryChannelSpacing(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPCarrierListQueryChannelSpacing(self._vi, RetValBufferSize)

    def SAACPCarrierListQueryCouplingEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPCarrierListQueryCouplingEnabled(self._vi, RetValBufferSize)

    def SAACPCarrierListQueryIntegrationBandwidth(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPCarrierListQueryIntegrationBandwidth(self._vi, RetValBufferSize)

    def SAACPCarrierListQueryMethod(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPCarrierListQueryMethod(self._vi, RetValBufferSize)

    def SAACPCarrierListQueryPowerPresent(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPCarrierListQueryPowerPresent(self._vi, RetValBufferSize)

    def SAACPFrequencyFullSpan(self):
        """"""
        return self._dllwrap.SAACPFrequencyFullSpan(self._vi)

    def SAACPFrequencyLastSpan(self):
        """"""
        return self._dllwrap.SAACPFrequencyLastSpan(self._vi)

    def SAACPMarkerConfigureEnabled(self, Enabled, Trace):
        """

        :param Enabled:
        :type Enabled:
        :param Trace:
        :type Trace:
        """
        return self._dllwrap.SAACPMarkerConfigureEnabled(self._vi, Enabled, Trace)

    def SAACPMarkerDisableAll(self):
        """"""
        return self._dllwrap.SAACPMarkerDisableAll(self._vi)

    def SAACPMarkerQuery(self):
        """"""
        return self._dllwrap.SAACPMarkerQuery(self._vi)

    def SAACPMarkerSearch(self, SearchType):
        """

        :param SearchType:
        :type SearchType:
        """
        return self._dllwrap.SAACPMarkerSearch(self._vi, SearchType)

    def SAACPOffsetListConfigureAbsoluteLimit(self, LimitBufferSize):
        """

        :param LimitBufferSize:
        :type LimitBufferSize:
        """
        return self._dllwrap.SAACPOffsetListConfigureAbsoluteLimit(self._vi, LimitBufferSize)

    def SAACPOffsetListConfigureEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SAACPOffsetListConfigureEnabled(self._vi, StateBufferSize)

    def SAACPOffsetListConfigureFrequency(self, FrequencyDifferenceBufferSize):
        """

        :param FrequencyDifferenceBufferSize:
        :type FrequencyDifferenceBufferSize:
        """
        return self._dllwrap.SAACPOffsetListConfigureFrequency(self._vi, FrequencyDifferenceBufferSize)

    def SAACPOffsetListConfigureLowerLimit(self, LimitBufferSize):
        """

        :param LimitBufferSize:
        :type LimitBufferSize:
        """
        return self._dllwrap.SAACPOffsetListConfigureLowerLimit(self._vi, LimitBufferSize)

    def SAACPOffsetListConfigureRelativeLimitCarrier(self, LimitBufferSize):
        """

        :param LimitBufferSize:
        :type LimitBufferSize:
        """
        return self._dllwrap.SAACPOffsetListConfigureRelativeLimitCarrier(self._vi, LimitBufferSize)

    def SAACPOffsetListConfigureRelativeLimitPSD(self, LimitBufferSize):
        """

        :param LimitBufferSize:
        :type LimitBufferSize:
        """
        return self._dllwrap.SAACPOffsetListConfigureRelativeLimitPSD(self._vi, LimitBufferSize)

    def SAACPOffsetListConfigureSidebandSelection(self, SidebandBufferSize):
        """

        :param SidebandBufferSize:
        :type SidebandBufferSize:
        """
        return self._dllwrap.SAACPOffsetListConfigureSidebandSelection(self._vi, SidebandBufferSize)

    def SAACPOffsetListConfigureTest(self, TypeBufferSize):
        """

        :param TypeBufferSize:
        :type TypeBufferSize:
        """
        return self._dllwrap.SAACPOffsetListConfigureTest(self._vi, TypeBufferSize)

    def SAACPOffsetListConfigureUpperLimit(self, LimitBufferSize):
        """

        :param LimitBufferSize:
        :type LimitBufferSize:
        """
        return self._dllwrap.SAACPOffsetListConfigureUpperLimit(self._vi, LimitBufferSize)

    def SAACPOffsetListQueryAbsoluteLimit(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListQueryAbsoluteLimit(self._vi, RetValBufferSize)

    def SAACPOffsetListQueryEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListQueryEnabled(self._vi, RetValBufferSize)

    def SAACPOffsetListQueryFrequency(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListQueryFrequency(self._vi, RetValBufferSize)

    def SAACPOffsetListQueryLowerLimit(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListQueryLowerLimit(self._vi, RetValBufferSize)

    def SAACPOffsetListQueryRelativeLimitCarrier(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListQueryRelativeLimitCarrier(self._vi, RetValBufferSize)

    def SAACPOffsetListQueryRelativeLimitPSD(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListQueryRelativeLimitPSD(self._vi, RetValBufferSize)

    def SAACPOffsetListQuerySidebandSelection(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListQuerySidebandSelection(self._vi, RetValBufferSize)

    def SAACPOffsetListQueryTest(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListQueryTest(self._vi, RetValBufferSize)

    def SAACPOffsetListQueryUpperLimit(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListQueryUpperLimit(self._vi, RetValBufferSize)

    def SAACPOffsetListBandwidthConfigureReference(self, BandwidthBufferSize):
        """

        :param BandwidthBufferSize:
        :type BandwidthBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthConfigureReference(self._vi, BandwidthBufferSize)

    def SAACPOffsetListBandwidthConfigureResolution(self, BandwidthBufferSize):
        """

        :param BandwidthBufferSize:
        :type BandwidthBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthConfigureResolution(self._vi, BandwidthBufferSize)

    def SAACPOffsetListBandwidthConfigureResolutionAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthConfigureResolutionAutoEnabled(self._vi, StateBufferSize)

    def SAACPOffsetListBandwidthConfigureVideo(self, BandwidthBufferSize):
        """

        :param BandwidthBufferSize:
        :type BandwidthBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthConfigureVideo(self._vi, BandwidthBufferSize)

    def SAACPOffsetListBandwidthConfigureVideoAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthConfigureVideoAutoEnabled(self._vi, StateBufferSize)

    def SAACPOffsetListBandwidthQueryReference(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthQueryReference(self._vi, RetValBufferSize)

    def SAACPOffsetListBandwidthQueryResolution(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthQueryResolution(self._vi, RetValBufferSize)

    def SAACPOffsetListBandwidthQueryResolutionAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthQueryResolutionAutoEnabled(self._vi, RetValBufferSize)

    def SAACPOffsetListBandwidthQueryVideo(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthQueryVideo(self._vi, RetValBufferSize)

    def SAACPOffsetListBandwidthQueryVideoAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthQueryVideoAutoEnabled(self._vi, RetValBufferSize)

    def SAACPOffsetListBandwidthConfigureShape(self, ShapeBufferSize):
        """

        :param ShapeBufferSize:
        :type ShapeBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthConfigureShape(self._vi, ShapeBufferSize)

    def SAACPOffsetListBandwidthQueryShape(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthQueryShape(self._vi, RetValBufferSize)

    def SAACPOffsetListBandwidthConfigureType(self, TypeBufferSize):
        """

        :param TypeBufferSize:
        :type TypeBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthConfigureType(self._vi, TypeBufferSize)

    def SAACPOffsetListBandwidthQueryType(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListBandwidthQueryType(self._vi, RetValBufferSize)

    def SAACPOffsetListFilterConfigureAlpha(self, AlphaValueBufferSize):
        """

        :param AlphaValueBufferSize:
        :type AlphaValueBufferSize:
        """
        return self._dllwrap.SAACPOffsetListFilterConfigureAlpha(self._vi, AlphaValueBufferSize)

    def SAACPOffsetListFilterQueryAlpha(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListFilterQueryAlpha(self._vi, RetValBufferSize)

    def SAACPOffsetListFilterConfigureEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SAACPOffsetListFilterConfigureEnabled(self._vi, StateBufferSize)

    def SAACPOffsetListFilterQueryEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAACPOffsetListFilterQueryEnabled(self._vi, RetValBufferSize)

    def SABurstPowerConfigure(self):
        """"""
        return self._dllwrap.SABurstPowerConfigure(self._vi)

    def SABurstPowerConfigureNoPreset(self):
        """"""
        return self._dllwrap.SABurstPowerConfigureNoPreset(self._vi)

    def SABurstPowerTraceFetch(self, RepCapIdentifier, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SABurstPowerTraceFetch(self._vi, RepCapIdentifier, RetValBufferSize)

    def SABurstPowerTraceRead(self, RepCapIdentifier, MaxTime, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SABurstPowerTraceRead(self._vi, RepCapIdentifier, MaxTime, RetValBufferSize)

    def SABurstPowerTraceReadSignal(self, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SABurstPowerTraceReadSignal(
            self._vi, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize
        )

    def SABurstPowerTracesAbort(self):
        """"""
        return self._dllwrap.SABurstPowerTracesAbort(self._vi)

    def SABurstPowerTracesInitiate(self):
        """"""
        return self._dllwrap.SABurstPowerTracesInitiate(self._vi)

    def SABurstPowerTracesInitiateSignal(self, Frequency, Amplitude):
        """

        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        """
        return self._dllwrap.SABurstPowerTracesInitiateSignal(self._vi, Frequency, Amplitude)

    def SABurstPowerMarkerDisableAll(self):
        """"""
        return self._dllwrap.SABurstPowerMarkerDisableAll(self._vi)

    def SABurstPowerMarkerConfigureEnabled(self, Enabled, Trace):
        """

        :param Enabled:
        :type Enabled:
        :param Trace:
        :type Trace:
        """
        return self._dllwrap.SABurstPowerMarkerConfigureEnabled(self._vi, Enabled, Trace)

    def SABurstPowerMarkerQuery(self):
        """"""
        return self._dllwrap.SABurstPowerMarkerQuery(self._vi)

    def SABurstPowerMarkerSearch(self, SearchType):
        """

        :param SearchType:
        :type SearchType:
        """
        return self._dllwrap.SABurstPowerMarkerSearch(self._vi, SearchType)

    def SAChannelPowerConfigure(self):
        """"""
        return self._dllwrap.SAChannelPowerConfigure(self._vi)

    def SAChannelPowerConfigureNoPreset(self):
        """"""
        return self._dllwrap.SAChannelPowerConfigureNoPreset(self._vi)

    def SAChannelPowerTraceFetch(self, RepCapIdentifier, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAChannelPowerTraceFetch(self._vi, RepCapIdentifier, RetValBufferSize)

    def SAChannelPowerTraceRead(self, RepCapIdentifier, MaxTime, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAChannelPowerTraceRead(self._vi, RepCapIdentifier, MaxTime, RetValBufferSize)

    def SAChannelPowerTraceReadSignal(self, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAChannelPowerTraceReadSignal(
            self._vi, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize
        )

    def SAChannelPowerTracesAbort(self):
        """"""
        return self._dllwrap.SAChannelPowerTracesAbort(self._vi)

    def SAChannelPowerTracesInitiate(self):
        """"""
        return self._dllwrap.SAChannelPowerTracesInitiate(self._vi)

    def SAChannelPowerTracesInitiateSignal(self, Frequency, Amplitude):
        """

        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        """
        return self._dllwrap.SAChannelPowerTracesInitiateSignal(self._vi, Frequency, Amplitude)

    def SAChannelPowerFrequencyFullSpan(self):
        """"""
        return self._dllwrap.SAChannelPowerFrequencyFullSpan(self._vi)

    def SAChannelPowerFrequencyLastSpan(self):
        """"""
        return self._dllwrap.SAChannelPowerFrequencyLastSpan(self._vi)

    def SAChannelPowerMarkerDisableAll(self):
        """"""
        return self._dllwrap.SAChannelPowerMarkerDisableAll(self._vi)

    def SAChannelPowerMarkerQuery(self):
        """"""
        return self._dllwrap.SAChannelPowerMarkerQuery(self._vi)

    def SAChannelPowerMarkerSearch(self, SearchType):
        """

        :param SearchType:
        :type SearchType:
        """
        return self._dllwrap.SAChannelPowerMarkerSearch(self._vi, SearchType)

    def SAOccupiedBandwidthConfigure(self):
        """"""
        return self._dllwrap.SAOccupiedBandwidthConfigure(self._vi)

    def SAOccupiedBandwidthConfigureNoPreset(self):
        """"""
        return self._dllwrap.SAOccupiedBandwidthConfigureNoPreset(self._vi)

    def SAOccupiedBandwidthTraceFetch(self, RepCapIdentifier, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAOccupiedBandwidthTraceFetch(self._vi, RepCapIdentifier, RetValBufferSize)

    def SAOccupiedBandwidthTraceRead(self, RepCapIdentifier, MaxTime, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAOccupiedBandwidthTraceRead(self._vi, RepCapIdentifier, MaxTime, RetValBufferSize)

    def SAOccupiedBandwidthTraceReadSignal(self, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAOccupiedBandwidthTraceReadSignal(
            self._vi, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize
        )

    def SAOccupiedBandwidthTracesAbort(self):
        """"""
        return self._dllwrap.SAOccupiedBandwidthTracesAbort(self._vi)

    def SAOccupiedBandwidthTracesInitiate(self):
        """"""
        return self._dllwrap.SAOccupiedBandwidthTracesInitiate(self._vi)

    def SAOccupiedBandwidthTracesInitiateSignal(self, Frequency, Amplitude):
        """

        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        """
        return self._dllwrap.SAOccupiedBandwidthTracesInitiateSignal(self._vi, Frequency, Amplitude)

    def SAOccupiedBandwidthFrequencyFullSpan(self):
        """"""
        return self._dllwrap.SAOccupiedBandwidthFrequencyFullSpan(self._vi)

    def SAOccupiedBandwidthFrequencyLastSpan(self):
        """"""
        return self._dllwrap.SAOccupiedBandwidthFrequencyLastSpan(self._vi)

    def SAOccupiedBandwidthMarkerDisableAll(self):
        """"""
        return self._dllwrap.SAOccupiedBandwidthMarkerDisableAll(self._vi)

    def SAOccupiedBandwidthMarkerQuery(self):
        """"""
        return self._dllwrap.SAOccupiedBandwidthMarkerQuery(self._vi)

    def SAOccupiedBandwidthMarkerSearch(self, SearchType):
        """

        :param SearchType:
        :type SearchType:
        """
        return self._dllwrap.SAOccupiedBandwidthMarkerSearch(self._vi, SearchType)

    def SAPowerStatisticsConfigure(self):
        """"""
        return self._dllwrap.SAPowerStatisticsConfigure(self._vi)

    def SAPowerStatisticsConfigureNoPreset(self):
        """"""
        return self._dllwrap.SAPowerStatisticsConfigureNoPreset(self._vi)

    def SAPowerStatisticsTraceFetch(self, RepCapIdentifier, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAPowerStatisticsTraceFetch(self._vi, RepCapIdentifier, RetValBufferSize)

    def SAPowerStatisticsTraceRead(self, RepCapIdentifier, MaxTime, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAPowerStatisticsTraceRead(self._vi, RepCapIdentifier, MaxTime, RetValBufferSize)

    def SAPowerStatisticsTraceReadSignal(self, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAPowerStatisticsTraceReadSignal(
            self._vi, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize
        )

    def SAPowerStatisticsTracesAbort(self):
        """"""
        return self._dllwrap.SAPowerStatisticsTracesAbort(self._vi)

    def SAPowerStatisticsTracesInitiate(self):
        """"""
        return self._dllwrap.SAPowerStatisticsTracesInitiate(self._vi)

    def SAPowerStatisticsTracesInitiateSignal(self, Frequency, Amplitude):
        """

        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        """
        return self._dllwrap.SAPowerStatisticsTracesInitiateSignal(self._vi, Frequency, Amplitude)

    def SAPowerStatisticsTracesStoreAsReference(self):
        """"""
        return self._dllwrap.SAPowerStatisticsTracesStoreAsReference(self._vi)

    def SAPowerStatisticsDisplayStoreReferenceTrace(self):
        """"""
        return self._dllwrap.SAPowerStatisticsDisplayStoreReferenceTrace(self._vi)

    def SAPowerStatisticsMarkerConfigureEnabled(self, Enabled, Trace):
        """

        :param Enabled:
        :type Enabled:
        :param Trace:
        :type Trace:
        """
        return self._dllwrap.SAPowerStatisticsMarkerConfigureEnabled(self._vi, Enabled, Trace)

    def SAPowerStatisticsMarkerDisableAll(self):
        """"""
        return self._dllwrap.SAPowerStatisticsMarkerDisableAll(self._vi)

    def SAPowerStatisticsMarkerQuery(self):
        """"""
        return self._dllwrap.SAPowerStatisticsMarkerQuery(self._vi)

    def SASEMaskConfigure(self):
        """"""
        return self._dllwrap.SASEMaskConfigure(self._vi)

    def SASEMaskConfigureNoPreset(self):
        """"""
        return self._dllwrap.SASEMaskConfigureNoPreset(self._vi)

    def SASEMaskTraceFetch(self, RepCapIdentifier, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskTraceFetch(self._vi, RepCapIdentifier, RetValBufferSize)

    def SASEMaskTraceRead(self, RepCapIdentifier, MaxTime, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskTraceRead(self._vi, RepCapIdentifier, MaxTime, RetValBufferSize)

    def SASEMaskTraceReadSignal(self, SASEMaskTrace, MaxTime, Frequency, Amplitude, RetValBufferSize):
        """

        :param SASEMaskTrace:
        :type SASEMaskTrace:
        :param MaxTime:
        :type MaxTime:
        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskTraceReadSignal(
            self._vi, SASEMaskTrace, MaxTime, Frequency, Amplitude, RetValBufferSize
        )

    def SASEMaskTracesAbort(self):
        """"""
        return self._dllwrap.SASEMaskTracesAbort(self._vi)

    def SASEMaskTracesInitiate(self):
        """"""
        return self._dllwrap.SASEMaskTracesInitiate(self._vi)

    def SASEMaskTracesInitiateSignal(self, Frequency, Amplitude):
        """

        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        """
        return self._dllwrap.SASEMaskTracesInitiateSignal(self._vi, Frequency, Amplitude)

    def SASEMaskMarkerDisableAll(self):
        """"""
        return self._dllwrap.SASEMaskMarkerDisableAll(self._vi)

    def SASEMaskMarkerQuery(self):
        """"""
        return self._dllwrap.SASEMaskMarkerQuery(self._vi)

    def SASEMaskOffsetListConfigureEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListConfigureEnabled(self._vi, StateBufferSize)

    def SASEMaskOffsetListQueryEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListQueryEnabled(self._vi, RetValBufferSize)

    def SASEMaskOffsetListConfigureSidebandSelection(self, SidebandBufferSize):
        """

        :param SidebandBufferSize:
        :type SidebandBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListConfigureSidebandSelection(self._vi, SidebandBufferSize)

    def SASEMaskOffsetListQuerySidebandSelection(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListQuerySidebandSelection(self._vi, RetValBufferSize)

    def SASEMaskOffsetListConfigureRelativeAttenuation(self, AttenuationValueBufferSize):
        """

        :param AttenuationValueBufferSize:
        :type AttenuationValueBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListConfigureRelativeAttenuation(self._vi, AttenuationValueBufferSize)

    def SASEMaskOffsetListQueryRelativeAttenuation(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListQueryRelativeAttenuation(self._vi, RetValBufferSize)

    def SASEMaskOffsetListConfigureSweepTime(self, SweepTimeBufferSize):
        """

        :param SweepTimeBufferSize:
        :type SweepTimeBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListConfigureSweepTime(self._vi, SweepTimeBufferSize)

    def SASEMaskOffsetListQuerySweepTime(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListQuerySweepTime(self._vi, RetValBufferSize)

    def SASEMaskOffsetListConfigureSweepTimeAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListConfigureSweepTimeAutoEnabled(self._vi, StateBufferSize)

    def SASEMaskOffsetListQuerySweepTimeAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListQuerySweepTimeAutoEnabled(self._vi, RetValBufferSize)

    def SASEMaskOffsetListConfigureTest(self, TypeBufferSize):
        """

        :param TypeBufferSize:
        :type TypeBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListConfigureTest(self._vi, TypeBufferSize)

    def SASEMaskOffsetListQueryTest(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListQueryTest(self._vi, RetValBufferSize)

    def SASEMaskOffsetListBandwidthConfigureMeasurementMultiplier(self, MultiplierValueBufferSize):
        """

        :param MultiplierValueBufferSize:
        :type MultiplierValueBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthConfigureMeasurementMultiplier(
            self._vi, MultiplierValueBufferSize
        )

    def SASEMaskOffsetListBandwidthQueryMeasurementMultiplier(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthQueryMeasurementMultiplier(self._vi, RetValBufferSize)

    def SASEMaskOffsetListBandwidthConfigureResolution(self, BandwidthBufferSize):
        """

        :param BandwidthBufferSize:
        :type BandwidthBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthConfigureResolution(self._vi, BandwidthBufferSize)

    def SASEMaskOffsetListBandwidthQueryResolution(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthQueryResolution(self._vi, RetValBufferSize)

    def SASEMaskOffsetListBandwidthConfigureResolutionAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthConfigureResolutionAutoEnabled(self._vi, StateBufferSize)

    def SASEMaskOffsetListBandwidthConfigureVideo(self, BandwidthBufferSize):
        """

        :param BandwidthBufferSize:
        :type BandwidthBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthConfigureVideo(self._vi, BandwidthBufferSize)

    def SASEMaskOffsetListBandwidthConfigureVideoAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthConfigureVideoAutoEnabled(self._vi, StateBufferSize)

    def SASEMaskOffsetListBandwidthQueryResolutionAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthQueryResolutionAutoEnabled(self._vi, RetValBufferSize)

    def SASEMaskOffsetListBandwidthQueryVideo(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthQueryVideo(self._vi, RetValBufferSize)

    def SASEMaskOffsetListBandwidthQueryVideoAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthQueryVideoAutoEnabled(self._vi, RetValBufferSize)

    def SASEMaskOffsetListBandwidthConfigureRatio(self, RatioValueBufferSize):
        """

        :param RatioValueBufferSize:
        :type RatioValueBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthConfigureRatio(self._vi, RatioValueBufferSize)

    def SASEMaskOffsetListBandwidthQueryRatio(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthQueryRatio(self._vi, RetValBufferSize)

    def SASEMaskOffsetListBandwidthConfigureRatioAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthConfigureRatioAutoEnabled(self._vi, StateBufferSize)

    def SASEMaskOffsetListBandwidthQueryRatioAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListBandwidthQueryRatioAutoEnabled(self._vi, RetValBufferSize)

    def SASEMaskOffsetListStartConfigureAbsoluteAmplitudeLimit(self, LimitBufferSize):
        """

        :param LimitBufferSize:
        :type LimitBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStartConfigureAbsoluteAmplitudeLimit(self._vi, LimitBufferSize)

    def SASEMaskOffsetListStartConfigureRelativeAmplitudeLimit(self, LimitBufferSize):
        """

        :param LimitBufferSize:
        :type LimitBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStartConfigureRelativeAmplitudeLimit(self._vi, LimitBufferSize)

    def SASEMaskOffsetListStartQueryAbsoluteAmplitudeLimit(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStartQueryAbsoluteAmplitudeLimit(self._vi, RetValBufferSize)

    def SASEMaskOffsetListStartQueryRelativeAmplitudeLimit(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStartQueryRelativeAmplitudeLimit(self._vi, RetValBufferSize)

    def SASEMaskOffsetListStartConfigureFrequency(self, FrequencyBufferSize):
        """

        :param FrequencyBufferSize:
        :type FrequencyBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStartConfigureFrequency(self._vi, FrequencyBufferSize)

    def SASEMaskOffsetListStartQueryFrequency(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStartQueryFrequency(self._vi, RetValBufferSize)

    def SASEMaskOffsetListStopConfigureAbsoluteAmplitudeLimit(self, LimitBufferSize):
        """

        :param LimitBufferSize:
        :type LimitBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStopConfigureAbsoluteAmplitudeLimit(self._vi, LimitBufferSize)

    def SASEMaskOffsetListStopConfigureFrequency(self, FrequencyBufferSize):
        """

        :param FrequencyBufferSize:
        :type FrequencyBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStopConfigureFrequency(self._vi, FrequencyBufferSize)

    def SASEMaskOffsetListStopConfigureRelativeAmplitudeLimit(self, LimitBufferSize):
        """

        :param LimitBufferSize:
        :type LimitBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStopConfigureRelativeAmplitudeLimit(self._vi, LimitBufferSize)

    def SASEMaskOffsetListStopQueryAbsoluteAmplitudeLimit(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStopQueryAbsoluteAmplitudeLimit(self._vi, RetValBufferSize)

    def SASEMaskOffsetListStopQueryFrequency(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStopQueryFrequency(self._vi, RetValBufferSize)

    def SASEMaskOffsetListStopQueryRelativeAmplitudeLimit(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStopQueryRelativeAmplitudeLimit(self._vi, RetValBufferSize)

    def SASEMaskOffsetListStopConfigureRelativeAmplitudeLimitAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStopConfigureRelativeAmplitudeLimitAutoEnabled(self._vi, StateBufferSize)

    def SASEMaskOffsetListStopQueryRelativeAmplitudeLimitAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStopQueryRelativeAmplitudeLimitAutoEnabled(self._vi, RetValBufferSize)

    def SASEMaskOffsetListStopConfigureAbsoluteAmplitudeLimitCoupleEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStopConfigureAbsoluteAmplitudeLimitCoupleEnabled(
            self._vi, StateBufferSize
        )

    def SASEMaskOffsetListStopQueryAbsoluteAmplitudeLimitCoupleEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASEMaskOffsetListStopQueryAbsoluteAmplitudeLimitCoupleEnabled(self._vi, RetValBufferSize)

    def SASpuriousEmissionsConfigure(self):
        """"""
        return self._dllwrap.SASpuriousEmissionsConfigure(self._vi)

    def SASpuriousEmissionsConfigureIFGainState(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsConfigureIFGainState(self._vi, StateBufferSize)

    def SASpuriousEmissionsQueryIFGainState(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsQueryIFGainState(self._vi, RetValBufferSize)

    def SASpuriousEmissionsConfigureIFGainAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsConfigureIFGainAutoEnabled(self._vi, StateBufferSize)

    def SASpuriousEmissionsQueryIFGainAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsQueryIFGainAutoEnabled(self._vi, RetValBufferSize)

    def SASpuriousEmissionsConfigureNoPreset(self):
        """"""
        return self._dllwrap.SASpuriousEmissionsConfigureNoPreset(self._vi)

    def SASpuriousEmissionsTraceFetch(self, RepCapIdentifier, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsTraceFetch(self._vi, RepCapIdentifier, RetValBufferSize)

    def SASpuriousEmissionsTraceRead(self, RepCapIdentifier, MaxTime, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsTraceRead(self._vi, RepCapIdentifier, MaxTime, RetValBufferSize)

    def SASpuriousEmissionsTraceReadSignal(
        self, SASpuriousEmissionsTrace, MaxTime, Frequency, Amplitude, RetValBufferSize
    ):
        """

        :param SASpuriousEmissionsTrace:
        :type SASpuriousEmissionsTrace:
        :param MaxTime:
        :type MaxTime:
        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsTraceReadSignal(
            self._vi,
            SASpuriousEmissionsTrace,
            MaxTime,
            Frequency,
            Amplitude,
            RetValBufferSize,
        )

    def SASpuriousEmissionsTracesAbort(self):
        """"""
        return self._dllwrap.SASpuriousEmissionsTracesAbort(self._vi)

    def SASpuriousEmissionsTracesInitiate(self):
        """"""
        return self._dllwrap.SASpuriousEmissionsTracesInitiate(self._vi)

    def SASpuriousEmissionsTracesInitiateSignal(self, Frequency, Amplitude):
        """

        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        """
        return self._dllwrap.SASpuriousEmissionsTracesInitiateSignal(self._vi, Frequency, Amplitude)

    def SASpuriousEmissionsMarkerConfigureEnabled(self, Enabled, Trace):
        """

        :param Enabled:
        :type Enabled:
        :param Trace:
        :type Trace:
        """
        return self._dllwrap.SASpuriousEmissionsMarkerConfigureEnabled(self._vi, Enabled, Trace)

    def SASpuriousEmissionsMarkerDisableAll(self):
        """"""
        return self._dllwrap.SASpuriousEmissionsMarkerDisableAll(self._vi)

    def SASpuriousEmissionsMarkerQuery(self):
        """"""
        return self._dllwrap.SASpuriousEmissionsMarkerQuery(self._vi)

    def SASpuriousEmissionsMarkerSearch(self, SearchType):
        """

        :param SearchType:
        :type SearchType:
        """
        return self._dllwrap.SASpuriousEmissionsMarkerSearch(self._vi, SearchType)

    def SASpuriousEmissionsRangeTableConfigureAttenuation(self, AttenuationValueBufferSize):
        """

        :param AttenuationValueBufferSize:
        :type AttenuationValueBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableConfigureAttenuation(self._vi, AttenuationValueBufferSize)

    def SASpuriousEmissionsRangeTableQueryAttenuation(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableQueryAttenuation(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableConfigurePeakExcursion(self, RelativeAmplitudeBufferSize):
        """

        :param RelativeAmplitudeBufferSize:
        :type RelativeAmplitudeBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableConfigurePeakExcursion(self._vi, RelativeAmplitudeBufferSize)

    def SASpuriousEmissionsRangeTableQueryPeakExcursion(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableQueryPeakExcursion(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableConfigurePeakThreshold(self, ThresholdBufferSize):
        """

        :param ThresholdBufferSize:
        :type ThresholdBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableConfigurePeakThreshold(self._vi, ThresholdBufferSize)

    def SASpuriousEmissionsRangeTableQueryPeakThreshold(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableQueryPeakThreshold(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableConfigureSweepTime(self, SweepTimeBufferSize):
        """

        :param SweepTimeBufferSize:
        :type SweepTimeBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableConfigureSweepTime(self._vi, SweepTimeBufferSize)

    def SASpuriousEmissionsRangeTableConfigureSweepTimeAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableConfigureSweepTimeAutoEnabled(self._vi, StateBufferSize)

    def SASpuriousEmissionsRangeTableQuerySweepTime(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableQuerySweepTime(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableQuerySweepTimeAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableQuerySweepTimeAutoEnabled(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableConfigureSweepPoints(self, SweepPointsBufferSize):
        """

        :param SweepPointsBufferSize:
        :type SweepPointsBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableConfigureSweepPoints(self._vi, SweepPointsBufferSize)

    def SASpuriousEmissionsRangeTableQuerySweepPoints(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableQuerySweepPoints(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableConfigureSweepPointsAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableConfigureSweepPointsAutoEnabled(self._vi, StateBufferSize)

    def SASpuriousEmissionsRangeTableQuerySweepPointsAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableQuerySweepPointsAutoEnabled(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableConfigureEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableConfigureEnabled(self._vi, StateBufferSize)

    def SASpuriousEmissionsRangeTableQueryEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableQueryEnabled(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableConfigureSweepTimeAutoRules(self, AutoRulesBufferSize):
        """

        :param AutoRulesBufferSize:
        :type AutoRulesBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableConfigureSweepTimeAutoRules(self._vi, AutoRulesBufferSize)

    def SASpuriousEmissionsRangeTableQuerySweepTimeAutoRules(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableQuerySweepTimeAutoRules(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableConfigureAttenuationAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableConfigureAttenuationAutoEnabled(self._vi, StateBufferSize)

    def SASpuriousEmissionsRangeTableQueryAttenuationAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableQueryAttenuationAutoEnabled(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableConfigureDetector1(self, DetectorBufferSize):
        """

        :param DetectorBufferSize:
        :type DetectorBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableConfigureDetector1(self._vi, DetectorBufferSize)

    def SASpuriousEmissionsRangeTableQueryDetector1(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableQueryDetector1(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableConfigureDetector2(self, DetectorBufferSize):
        """

        :param DetectorBufferSize:
        :type DetectorBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableConfigureDetector2(self._vi, DetectorBufferSize)

    def SASpuriousEmissionsRangeTableQueryDetector2(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableQueryDetector2(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableStartConfigureAbsoluteAmplitudeLimit(self, LimitBufferSize):
        """

        :param LimitBufferSize:
        :type LimitBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableStartConfigureAbsoluteAmplitudeLimit(
            self._vi, LimitBufferSize
        )

    def SASpuriousEmissionsRangeTableStartConfigureFrequency(self, FrequencyBufferSize):
        """

        :param FrequencyBufferSize:
        :type FrequencyBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableStartConfigureFrequency(self._vi, FrequencyBufferSize)

    def SASpuriousEmissionsRangeTableStartQueryAbsoluteAmplitudeLimit(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableStartQueryAbsoluteAmplitudeLimit(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableStartQueryFrequency(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableStartQueryFrequency(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableStopConfigureAbsoluteAmplitudeLimit(self, LimitBufferSize):
        """

        :param LimitBufferSize:
        :type LimitBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableStopConfigureAbsoluteAmplitudeLimit(self._vi, LimitBufferSize)

    def SASpuriousEmissionsRangeTableStopConfigureFrequency(self, FrequencyBufferSize):
        """

        :param FrequencyBufferSize:
        :type FrequencyBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableStopConfigureFrequency(self._vi, FrequencyBufferSize)

    def SASpuriousEmissionsRangeTableStopQueryAbsoluteAmplitudeLimit(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableStopQueryAbsoluteAmplitudeLimit(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableStopQueryFrequency(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableStopQueryFrequency(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableStopConfigureAbsoluteAmplitudeLimitAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableStopConfigureAbsoluteAmplitudeLimitAutoEnabled(
            self._vi, StateBufferSize
        )

    def SASpuriousEmissionsRangeTableStopQueryAbsoluteAmplitudeLimitAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableStopQueryAbsoluteAmplitudeLimitAutoEnabled(
            self._vi, RetValBufferSize
        )

    def SASpuriousEmissionsRangeTableBandwidthConfigureResolution(self, BandwidthBufferSize):
        """

        :param BandwidthBufferSize:
        :type BandwidthBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableBandwidthConfigureResolution(self._vi, BandwidthBufferSize)

    def SASpuriousEmissionsRangeTableBandwidthConfigureResolutionAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableBandwidthConfigureResolutionAutoEnabled(
            self._vi, StateBufferSize
        )

    def SASpuriousEmissionsRangeTableBandwidthConfigureShape(self, ShapeBufferSize):
        """

        :param ShapeBufferSize:
        :type ShapeBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableBandwidthConfigureShape(self._vi, ShapeBufferSize)

    def SASpuriousEmissionsRangeTableBandwidthConfigureVideo(self, BandwidthBufferSize):
        """

        :param BandwidthBufferSize:
        :type BandwidthBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableBandwidthConfigureVideo(self._vi, BandwidthBufferSize)

    def SASpuriousEmissionsRangeTableBandwidthConfigureVideoAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableBandwidthConfigureVideoAutoEnabled(self._vi, StateBufferSize)

    def SASpuriousEmissionsRangeTableBandwidthQueryResolution(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableBandwidthQueryResolution(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableBandwidthQueryResolutionAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableBandwidthQueryResolutionAutoEnabled(
            self._vi, RetValBufferSize
        )

    def SASpuriousEmissionsRangeTableBandwidthQueryShape(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableBandwidthQueryShape(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableBandwidthQueryVideo(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableBandwidthQueryVideo(self._vi, RetValBufferSize)

    def SASpuriousEmissionsRangeTableBandwidthQueryVideoAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SASpuriousEmissionsRangeTableBandwidthQueryVideoAutoEnabled(self._vi, RetValBufferSize)

    def SAHarmonicDistortionConfigure(self):
        """"""
        return self._dllwrap.SAHarmonicDistortionConfigure(self._vi)

    def SAHarmonicDistortionConfigureNoPreset(self):
        """"""
        return self._dllwrap.SAHarmonicDistortionConfigureNoPreset(self._vi)

    def SAHarmonicDistortionTraceFetch(self, RepCapIdentifier, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionTraceFetch(self._vi, RepCapIdentifier, RetValBufferSize)

    def SAHarmonicDistortionTraceRead(self, RepCapIdentifier, MaxTime, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionTraceRead(self._vi, RepCapIdentifier, MaxTime, RetValBufferSize)

    def SAHarmonicDistortionTraceReadSignal(self, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionTraceReadSignal(
            self._vi, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize
        )

    def SAHarmonicDistortionTracesAbort(self):
        """"""
        return self._dllwrap.SAHarmonicDistortionTracesAbort(self._vi)

    def SAHarmonicDistortionTracesInitiate(self):
        """"""
        return self._dllwrap.SAHarmonicDistortionTracesInitiate(self._vi)

    def SAHarmonicDistortionTracesInitiateSignal(self, Frequency, Amplitude):
        """

        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        """
        return self._dllwrap.SAHarmonicDistortionTracesInitiateSignal(self._vi, Frequency, Amplitude)

    def SAHarmonicDistortionRangeTableAutoFill(self):
        """"""
        return self._dllwrap.SAHarmonicDistortionRangeTableAutoFill(self._vi)

    def SAHarmonicDistortionRangeTableConfigureSweepTime(self, SweepTimeBufferSize):
        """

        :param SweepTimeBufferSize:
        :type SweepTimeBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableConfigureSweepTime(self._vi, SweepTimeBufferSize)

    def SAHarmonicDistortionRangeTableConfigureSweepTimeAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableConfigureSweepTimeAutoEnabled(self._vi, StateBufferSize)

    def SAHarmonicDistortionRangeTableQuerySweepTime(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableQuerySweepTime(self._vi, RetValBufferSize)

    def SAHarmonicDistortionRangeTableQuerySweepTimeAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableQuerySweepTimeAutoEnabled(self._vi, RetValBufferSize)

    def SAHarmonicDistortionRangeTableConfigureFrequency(self, FrequencyBufferSize):
        """

        :param FrequencyBufferSize:
        :type FrequencyBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableConfigureFrequency(self._vi, FrequencyBufferSize)

    def SAHarmonicDistortionRangeTableQueryFrequency(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableQueryFrequency(self._vi, RetValBufferSize)

    def SAHarmonicDistortionRangeTableConfigureToneEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableConfigureToneEnabled(self._vi, StateBufferSize)

    def SAHarmonicDistortionRangeTableQueryToneEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableQueryToneEnabled(self._vi, RetValBufferSize)

    def SAHarmonicDistortionRangeTableConfigureSpan(self, SpanBufferSize):
        """

        :param SpanBufferSize:
        :type SpanBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableConfigureSpan(self._vi, SpanBufferSize)

    def SAHarmonicDistortionRangeTableQuerySpan(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableQuerySpan(self._vi, RetValBufferSize)

    def SAHarmonicDistortionRangeTableBandwidthConfigureResolution(self, BandwidthBufferSize):
        """

        :param BandwidthBufferSize:
        :type BandwidthBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableBandwidthConfigureResolution(self._vi, BandwidthBufferSize)

    def SAHarmonicDistortionRangeTableBandwidthConfigureResolutionAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableBandwidthConfigureResolutionAutoEnabled(
            self._vi, StateBufferSize
        )

    def SAHarmonicDistortionRangeTableBandwidthConfigureVideo(self, BandwidthBufferSize):
        """

        :param BandwidthBufferSize:
        :type BandwidthBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableBandwidthConfigureVideo(self._vi, BandwidthBufferSize)

    def SAHarmonicDistortionRangeTableBandwidthConfigureVideoAutoEnabled(self, StateBufferSize):
        """

        :param StateBufferSize:
        :type StateBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableBandwidthConfigureVideoAutoEnabled(self._vi, StateBufferSize)

    def SAHarmonicDistortionRangeTableBandwidthQueryResolution(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableBandwidthQueryResolution(self._vi, RetValBufferSize)

    def SAHarmonicDistortionRangeTableBandwidthQueryResolutionAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableBandwidthQueryResolutionAutoEnabled(
            self._vi, RetValBufferSize
        )

    def SAHarmonicDistortionRangeTableBandwidthQueryVideo(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableBandwidthQueryVideo(self._vi, RetValBufferSize)

    def SAHarmonicDistortionRangeTableBandwidthQueryVideoAutoEnabled(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAHarmonicDistortionRangeTableBandwidthQueryVideoAutoEnabled(self._vi, RetValBufferSize)

    def SAHarmonicDistortionToneConfigureEnabled(self, HarmonicNumber, State):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        :param State:
        :type State:
        """
        return self._dllwrap.SAHarmonicDistortionToneConfigureEnabled(self._vi, HarmonicNumber, State)

    def SAHarmonicDistortionToneQueryEnabled(self, HarmonicNumber):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        """
        return self._dllwrap.SAHarmonicDistortionToneQueryEnabled(self._vi, HarmonicNumber)

    def SAHarmonicDistortionToneConfigureSweepTime(self, HarmonicNumber, SweepTime):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        :param SweepTime:
        :type SweepTime:
        """
        return self._dllwrap.SAHarmonicDistortionToneConfigureSweepTime(self._vi, HarmonicNumber, SweepTime)

    def SAHarmonicDistortionToneQuerySweepTime(self, HarmonicNumber):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        """
        return self._dllwrap.SAHarmonicDistortionToneQuerySweepTime(self._vi, HarmonicNumber)

    def SAHarmonicDistortionToneConfigureSweepTimeAutoEnabled(self, HarmonicNumber, State):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        :param State:
        :type State:
        """
        return self._dllwrap.SAHarmonicDistortionToneConfigureSweepTimeAutoEnabled(self._vi, HarmonicNumber, State)

    def SAHarmonicDistortionToneQuerySweepTimeAutoEnabled(self, HarmonicNumber):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        """
        return self._dllwrap.SAHarmonicDistortionToneQuerySweepTimeAutoEnabled(self._vi, HarmonicNumber)

    def SAHarmonicDistortionToneConfigureSpan(self, HarmonicNumber, Span):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        :param Span:
        :type Span:
        """
        return self._dllwrap.SAHarmonicDistortionToneConfigureSpan(self._vi, HarmonicNumber, Span)

    def SAHarmonicDistortionToneQuerySpan(self, HarmonicNumber):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        """
        return self._dllwrap.SAHarmonicDistortionToneQuerySpan(self._vi, HarmonicNumber)

    def SAHarmonicDistortionToneConfigureFrequency(self, HarmonicNumber, Frequency):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        :param Frequency:
        :type Frequency:
        """
        return self._dllwrap.SAHarmonicDistortionToneConfigureFrequency(self._vi, HarmonicNumber, Frequency)

    def SAHarmonicDistortionToneQueryFrequency(self, HarmonicNumber):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        """
        return self._dllwrap.SAHarmonicDistortionToneQueryFrequency(self._vi, HarmonicNumber)

    def SAHarmonicDistortionToneBandwidthConfigureResolutionAutoEnabled(self, HarmonicNumber, State):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        :param State:
        :type State:
        """
        return self._dllwrap.SAHarmonicDistortionToneBandwidthConfigureResolutionAutoEnabled(
            self._vi, HarmonicNumber, State
        )

    def SAHarmonicDistortionToneBandwidthConfigureResolution(self, HarmonicNumber, Bandwidth):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        :param Bandwidth:
        :type Bandwidth:
        """
        return self._dllwrap.SAHarmonicDistortionToneBandwidthConfigureResolution(self._vi, HarmonicNumber, Bandwidth)

    def SAHarmonicDistortionToneBandwidthQueryResolutionAutoEnabled(self, HarmonicNumber):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        """
        return self._dllwrap.SAHarmonicDistortionToneBandwidthQueryResolutionAutoEnabled(self._vi, HarmonicNumber)

    def SAHarmonicDistortionToneBandwidthQueryResolution(self, HarmonicNumber):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        """
        return self._dllwrap.SAHarmonicDistortionToneBandwidthQueryResolution(self._vi, HarmonicNumber)

    def SAHarmonicDistortionToneBandwidthConfigureVideoAutoEnabled(self, HarmonicNumber, State):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        :param State:
        :type State:
        """
        return self._dllwrap.SAHarmonicDistortionToneBandwidthConfigureVideoAutoEnabled(self._vi, HarmonicNumber, State)

    def SAHarmonicDistortionToneBandwidthQueryVideoAutoEnabled(self, HarmonicNumber):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        """
        return self._dllwrap.SAHarmonicDistortionToneBandwidthQueryVideoAutoEnabled(self._vi, HarmonicNumber)

    def SAHarmonicDistortionToneBandwidthConfigureVideo(self, HarmonicNumber, Bandwidth):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        :param Bandwidth:
        :type Bandwidth:
        """
        return self._dllwrap.SAHarmonicDistortionToneBandwidthConfigureVideo(self._vi, HarmonicNumber, Bandwidth)

    def SAHarmonicDistortionToneBandwidthQueryVideo(self, HarmonicNumber):
        """

        :param HarmonicNumber:
        :type HarmonicNumber:
        """
        return self._dllwrap.SAHarmonicDistortionToneBandwidthQueryVideo(self._vi, HarmonicNumber)

    def SAThirdOrderInterceptConfigure(self):
        """"""
        return self._dllwrap.SAThirdOrderInterceptConfigure(self._vi)

    def SAThirdOrderInterceptAutoTune(self):
        """"""
        return self._dllwrap.SAThirdOrderInterceptAutoTune(self._vi)

    def SAThirdOrderInterceptConfigureNoPreset(self):
        """"""
        return self._dllwrap.SAThirdOrderInterceptConfigureNoPreset(self._vi)

    def SAThirdOrderInterceptTraceFetch(self, RepCapIdentifier, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAThirdOrderInterceptTraceFetch(self._vi, RepCapIdentifier, RetValBufferSize)

    def SAThirdOrderInterceptTraceRead(self, RepCapIdentifier, MaxTime, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAThirdOrderInterceptTraceRead(self._vi, RepCapIdentifier, MaxTime, RetValBufferSize)

    def SAThirdOrderInterceptTraceReadSignal(self, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param MaxTime:
        :type MaxTime:
        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAThirdOrderInterceptTraceReadSignal(
            self._vi, RepCapIdentifier, MaxTime, Frequency, Amplitude, RetValBufferSize
        )

    def SAThirdOrderInterceptTracesAbort(self):
        """"""
        return self._dllwrap.SAThirdOrderInterceptTracesAbort(self._vi)

    def SAThirdOrderInterceptTracesInitiate(self):
        """"""
        return self._dllwrap.SAThirdOrderInterceptTracesInitiate(self._vi)

    def SAThirdOrderInterceptTracesInitiateSignal(self, Frequency, Amplitude):
        """

        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        """
        return self._dllwrap.SAThirdOrderInterceptTracesInitiateSignal(self._vi, Frequency, Amplitude)

    def SALimitBuildFromExisting(self, RepCapIdentifier, SourceTraceNumber):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param SourceTraceNumber:
        :type SourceTraceNumber:
        """
        return self._dllwrap.SALimitBuildFromExisting(self._vi, RepCapIdentifier, SourceTraceNumber)

    def SALimitConfigureData(self, RepCapIdentifier, DataArrayBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param DataArrayBufferSize:
        :type DataArrayBufferSize:
        """
        return self._dllwrap.SALimitConfigureData(self._vi, RepCapIdentifier, DataArrayBufferSize)

    def SALimitCopy(self, RepCapIdentifier, SourceLineNumber):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param SourceLineNumber:
        :type SourceLineNumber:
        """
        return self._dllwrap.SALimitCopy(self._vi, RepCapIdentifier, SourceLineNumber)

    def SALimitDelete(self, RepCapIdentifier):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        """
        return self._dllwrap.SALimitDelete(self._vi, RepCapIdentifier)

    def SALimitMergeData(self, RepCapIdentifier, DataArrayBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param DataArrayBufferSize:
        :type DataArrayBufferSize:
        """
        return self._dllwrap.SALimitMergeData(self._vi, RepCapIdentifier, DataArrayBufferSize)

    def SALimitQueryData(self, RepCapIdentifier, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SALimitQueryData(self._vi, RepCapIdentifier, RetValBufferSize)

    def SALimitUpdateOffsets(self, RepCapIdentifier):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        """
        return self._dllwrap.SALimitUpdateOffsets(self._vi, RepCapIdentifier)

    def SALimitsDeleteAll(self):
        """"""
        return self._dllwrap.SALimitsDeleteAll(self._vi)

    def SAListSweepAbort(self):
        """"""
        return self._dllwrap.SAListSweepAbort(self._vi)

    def SAListSweepConfigure(self):
        """"""
        return self._dllwrap.SAListSweepConfigure(self._vi)

    def SAListSweepConfigureNoPreset(self):
        """"""
        return self._dllwrap.SAListSweepConfigureNoPreset(self._vi)

    def SAListSweepFetch(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepFetch(self._vi, RetValBufferSize)

    def SAListSweepInitiate(self):
        """"""
        return self._dllwrap.SAListSweepInitiate(self._vi)

    def SAListSweepMeasure(self, MaxTime, RetValBufferSize):
        """

        :param MaxTime:
        :type MaxTime:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepMeasure(self._vi, MaxTime, RetValBufferSize)

    def SAListSweepRead(self, MaxTime, RetValBufferSize):
        """

        :param MaxTime:
        :type MaxTime:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepRead(self._vi, MaxTime, RetValBufferSize)

    def SAListSweepConfigureParameters(
        self,
        PeakMeasurementEnabled,
        RMSMeasurementEnabled,
        AveragingMeasurementEnabled,
        TriggerSource,
        TriggerSlope,
        TriggerOffset,
        GateLength,
    ):
        """

        :param PeakMeasurementEnabled:
        :type PeakMeasurementEnabled:
        :param RMSMeasurementEnabled:
        :type RMSMeasurementEnabled:
        :param AveragingMeasurementEnabled:
        :type AveragingMeasurementEnabled:
        :param TriggerSource:
        :type TriggerSource:
        :param TriggerSlope:
        :type TriggerSlope:
        :param TriggerOffset:
        :type TriggerOffset:
        :param GateLength:
        :type GateLength:
        """
        return self._dllwrap.SAListSweepConfigureParameters(
            self._vi,
            PeakMeasurementEnabled,
            RMSMeasurementEnabled,
            AveragingMeasurementEnabled,
            TriggerSource,
            TriggerSlope,
            TriggerOffset,
            GateLength,
        )

    def SAListSweepBandwidthConfigureResolution(self, BandwidthBufferSize):
        """

        :param BandwidthBufferSize:
        :type BandwidthBufferSize:
        """
        return self._dllwrap.SAListSweepBandwidthConfigureResolution(self._vi, BandwidthBufferSize)

    def SAListSweepBandwidthConfigureVideo(self, BandwidthBufferSize):
        """

        :param BandwidthBufferSize:
        :type BandwidthBufferSize:
        """
        return self._dllwrap.SAListSweepBandwidthConfigureVideo(self._vi, BandwidthBufferSize)

    def SAListSweepBandwidthQueryResolution(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepBandwidthQueryResolution(self._vi, RetValBufferSize)

    def SAListSweepBandwidthQueryVideo(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepBandwidthQueryVideo(self._vi, RetValBufferSize)

    def SAListSweepBandwidthConfigureResolutionShape(self, ShapeBufferSize):
        """

        :param ShapeBufferSize:
        :type ShapeBufferSize:
        """
        return self._dllwrap.SAListSweepBandwidthConfigureResolutionShape(self._vi, ShapeBufferSize)

    def SAListSweepBandwidthQueryResolutionShape(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepBandwidthQueryResolutionShape(self._vi, RetValBufferSize)

    def SAListSweepFrequencyConfigure(self, FrequencyBufferSize):
        """

        :param FrequencyBufferSize:
        :type FrequencyBufferSize:
        """
        return self._dllwrap.SAListSweepFrequencyConfigure(self._vi, FrequencyBufferSize)

    def SAListSweepFrequencyQuery(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepFrequencyQuery(self._vi, RetValBufferSize)

    def SAListSweepSequenceConfigure(self, SequenceBufferSize):
        """

        :param SequenceBufferSize:
        :type SequenceBufferSize:
        """
        return self._dllwrap.SAListSweepSequenceConfigure(self._vi, SequenceBufferSize)

    def SAListSweepSequenceQuery(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepSequenceQuery(self._vi, RetValBufferSize)

    def SAListSweepTriggerConfigureDelay(self, TimeBufferSize):
        """

        :param TimeBufferSize:
        :type TimeBufferSize:
        """
        return self._dllwrap.SAListSweepTriggerConfigureDelay(self._vi, TimeBufferSize)

    def SAListSweepTriggerConfigureHoldoff(self, TimeBufferSize):
        """

        :param TimeBufferSize:
        :type TimeBufferSize:
        """
        return self._dllwrap.SAListSweepTriggerConfigureHoldoff(self._vi, TimeBufferSize)

    def SAListSweepTriggerConfigureLevel(self, AmplitudeBufferSize):
        """

        :param AmplitudeBufferSize:
        :type AmplitudeBufferSize:
        """
        return self._dllwrap.SAListSweepTriggerConfigureLevel(self._vi, AmplitudeBufferSize)

    def SAListSweepTriggerQueryDelay(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepTriggerQueryDelay(self._vi, RetValBufferSize)

    def SAListSweepTriggerQueryHoldoff(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepTriggerQueryHoldoff(self._vi, RetValBufferSize)

    def SAListSweepTriggerQueryLevel(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepTriggerQueryLevel(self._vi, RetValBufferSize)

    def SAListSweepTimeConfigure(self, TimeBufferSize):
        """

        :param TimeBufferSize:
        :type TimeBufferSize:
        """
        return self._dllwrap.SAListSweepTimeConfigure(self._vi, TimeBufferSize)

    def SAListSweepTimeQuery(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepTimeQuery(self._vi, RetValBufferSize)

    def SAListSweepDetectorConfigure(self, DetectorTypeBufferSize):
        """

        :param DetectorTypeBufferSize:
        :type DetectorTypeBufferSize:
        """
        return self._dllwrap.SAListSweepDetectorConfigure(self._vi, DetectorTypeBufferSize)

    def SAListSweepDetectorQuery(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepDetectorQuery(self._vi, RetValBufferSize)

    def SAListSweepAttenuationConfigureElectronic(self, PowerBufferSize):
        """

        :param PowerBufferSize:
        :type PowerBufferSize:
        """
        return self._dllwrap.SAListSweepAttenuationConfigureElectronic(self._vi, PowerBufferSize)

    def SAListSweepAttenuationConfigureMechanical(self, PowerBufferSize):
        """

        :param PowerBufferSize:
        :type PowerBufferSize:
        """
        return self._dllwrap.SAListSweepAttenuationConfigureMechanical(self._vi, PowerBufferSize)

    def SAListSweepAttenuationQueryElectronic(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepAttenuationQueryElectronic(self._vi, RetValBufferSize)

    def SAListSweepAttenuationQueryMechanical(self, RetValBufferSize):
        """

        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.SAListSweepAttenuationQueryMechanical(self._vi, RetValBufferSize)

    def SAMarkerConfigureEnabled(self, Enabled, Trace):
        """

        :param Enabled:
        :type Enabled:
        :param Trace:
        :type Trace:
        """
        return self._dllwrap.SAMarkerConfigureEnabled(self._vi, Enabled, Trace)

    def SAMarkerConfigureSearch(self, PeakExcursion, MarkerThreshold):
        """

        :param PeakExcursion:
        :type PeakExcursion:
        :param MarkerThreshold:
        :type MarkerThreshold:
        """
        return self._dllwrap.SAMarkerConfigureSearch(self._vi, PeakExcursion, MarkerThreshold)

    def SAMarkerDisableAll(self):
        """"""
        return self._dllwrap.SAMarkerDisableAll(self._vi)

    def SAMarkerMakeDelta(self, DeltaMarker):
        """

        :param DeltaMarker:
        :type DeltaMarker:
        """
        return self._dllwrap.SAMarkerMakeDelta(self._vi, DeltaMarker)

    def SAMarkerQuery(self):
        """"""
        return self._dllwrap.SAMarkerQuery(self._vi)

    def SAMarkerQueryReference(self):
        """"""
        return self._dllwrap.SAMarkerQueryReference(self._vi)

    def SAMarkerSearch(self, SearchType):
        """

        :param SearchType:
        :type SearchType:
        """
        return self._dllwrap.SAMarkerSearch(self._vi, SearchType)

    def SAMarkerSetInstrumentFromMarker(self, InstrumentSetting):
        """

        :param InstrumentSetting:
        :type InstrumentSetting:
        """
        return self._dllwrap.SAMarkerSetInstrumentFromMarker(self._vi, InstrumentSetting)

    def SAMarkerFrequencyCounterQueryCount(self):
        """"""
        return self._dllwrap.SAMarkerFrequencyCounterQueryCount(self._vi)

    def SAMarkerMeasureAtMarkerConfigureDetectorType(self, DetectorIdentifier, DetectorType):
        """

        :param DetectorIdentifier:
        :type DetectorIdentifier:
        :param DetectorType:
        :type DetectorType:
        """
        return self._dllwrap.SAMarkerMeasureAtMarkerConfigureDetectorType(self._vi, DetectorIdentifier, DetectorType)

    def SAMarkerMeasureAtMarkerQueryDetectorType(self, DetectorIdentifier):
        """

        :param DetectorIdentifier:
        :type DetectorIdentifier:
        """
        return self._dllwrap.SAMarkerMeasureAtMarkerQueryDetectorType(self._vi, DetectorIdentifier)

    def SAMarkerMeasureAtMarkeConfigureDetectorDwellTime(self, DetectorIdentifier, DwellTime):
        """

        :param DetectorIdentifier:
        :type DetectorIdentifier:
        :param DwellTime:
        :type DwellTime:
        """
        return self._dllwrap.SAMarkerMeasureAtMarkeConfigureDetectorDwellTime(self._vi, DetectorIdentifier, DwellTime)

    def SAMarkerMeasureAtMarkeQueryDetectorDwellTime(self, DetectorIdentifier):
        """

        :param DetectorIdentifier:
        :type DetectorIdentifier:
        """
        return self._dllwrap.SAMarkerMeasureAtMarkeQueryDetectorDwellTime(self._vi, DetectorIdentifier)

    def SAMarkerMeasureAtMarkerRead(self, ValBufferSize):
        """

        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.SAMarkerMeasureAtMarkerRead(self._vi, ValBufferSize)

    def SASweptSAFetch(self, SASweptSA, ValBufferSize):
        """

        :param SASweptSA:
        :type SASweptSA:
        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.SASweptSAFetch(self._vi, SASweptSA, ValBufferSize)

    def SASweptSAMeasure(self, SASweptSA, ValBufferSize):
        """

        :param SASweptSA:
        :type SASweptSA:
        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.SASweptSAMeasure(self._vi, SASweptSA, ValBufferSize)

    def SASweptSARead(self, SASweptSA, MaxTime, ValBufferSize):
        """

        :param SASweptSA:
        :type SASweptSA:
        :param MaxTime:
        :type MaxTime:
        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.SASweptSARead(self._vi, SASweptSA, MaxTime, ValBufferSize)

    def SASweptSAsInitiate(self):
        """"""
        return self._dllwrap.SASweptSAsInitiate(self._vi)

    def SASweptSAsConfigureNoPreset(self):
        """"""
        return self._dllwrap.SASweptSAsConfigureNoPreset(self._vi)

    def SASweptSAsConfigure(self):
        """"""
        return self._dllwrap.SASweptSAsConfigure(self._vi)

    def SASourcePreset(self):
        """"""
        return self._dllwrap.SASourcePreset(self._vi)

    def SASourceGetSourceSettings(self, ValBufferSize):
        """

        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.SASourceGetSourceSettings(self._vi, ValBufferSize)

    def SASourceLevelSetTrackingPeak(self):
        """"""
        return self._dllwrap.SASourceLevelSetTrackingPeak(self._vi)

    def StateTriggerConfigure(self, RepCapIdentifier, Enabled, Detection, Filter, Identifier):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param Enabled:
        :type Enabled:
        :param Detection:
        :type Detection:
        :param Filter:
        :type Filter:
        :param Identifier:
        :type Identifier:
        """
        return self._dllwrap.StateTriggerConfigure(self._vi, RepCapIdentifier, Enabled, Detection, Filter, Identifier)

    def StateTriggerDisableAllTriggerSources(self, RepCapIdentifier):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        """
        return self._dllwrap.StateTriggerDisableAllTriggerSources(self._vi, RepCapIdentifier)

    def StateTriggerRemoveAllCustomStateTriggerSources(self, RepCapIdentifier):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        """
        return self._dllwrap.StateTriggerRemoveAllCustomStateTriggerSources(self._vi, RepCapIdentifier)

    def SystemDisableLocalControls(self):
        """"""
        return self._dllwrap.SystemDisableLocalControls(self._vi)

    def SystemEnableLocalControls(self):
        """"""
        return self._dllwrap.SystemEnableLocalControls(self._vi)

    def SystemGetScreenImage(self, ImageBufferSize):
        """

        :param ImageBufferSize:
        :type ImageBufferSize:
        """
        return self._dllwrap.SystemGetScreenImage(self._vi, ImageBufferSize)

    def SystemGetState(self, pDataBufferSize):
        """

        :param pDataBufferSize:
        :type pDataBufferSize:
        """
        return self._dllwrap.SystemGetState(self._vi, pDataBufferSize)

    def SystemPutState(self, DataBufferSize):
        """

        :param DataBufferSize:
        :type DataBufferSize:
        """
        return self._dllwrap.SystemPutState(self._vi, DataBufferSize)

    def SystemRecallState(self, Identifier):
        """

        :param Identifier:
        :type Identifier:
        """
        return self._dllwrap.SystemRecallState(self._vi, Identifier)

    def SystemSaveState(self, Identifier):
        """

        :param Identifier:
        :type Identifier:
        """
        return self._dllwrap.SystemSaveState(self._vi, Identifier)

    def SystemWaitForOperationComplete(self, MaxTimeMilliseconds):
        """

        :param MaxTimeMilliseconds:
        :type MaxTimeMilliseconds:
        """
        return self._dllwrap.SystemWaitForOperationComplete(self._vi, MaxTimeMilliseconds)

    def SystemReadBytes(self, ValBufferSize):
        """

        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.SystemReadBytes(self._vi, ValBufferSize)

    def SystemReadString(self, ValBufferSize):
        """

        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.SystemReadString(self._vi, ValBufferSize)

    def SystemWriteBytes(self, BufferBufferSize):
        """

        :param BufferBufferSize:
        :type BufferBufferSize:
        """
        return self._dllwrap.SystemWriteBytes(self._vi, BufferBufferSize)

    def SystemWriteString(self, Data):
        """

        :param Data:
        :type Data:
        """
        return self._dllwrap.SystemWriteString(self._vi, Data)

    def SystemClearIO(self):
        """"""
        return self._dllwrap.SystemClearIO(self._vi)

    def viRead(self, BufferSize):
        """

        :param BufferSize:
        :type BufferSize:
        """
        return self._dllwrap.viRead(self._vi, BufferSize)

    def viWrite(self, Count):
        """

        :param Count:
        :type Count:
        """
        return self._dllwrap.viWrite(self._vi, Count)

    def SystemModePreset(self):
        """"""
        return self._dllwrap.SystemModePreset(self._vi)

    def SystemUserPresetAllModes(self):
        """"""
        return self._dllwrap.SystemUserPresetAllModes(self._vi)

    def InputRFRangeOptimize(self):
        """"""
        return self._dllwrap.InputRFRangeOptimize(self._vi)

    def InputRFCorrectionConfigureData(self, RepCapIdentifier, DataArrayBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param DataArrayBufferSize:
        :type DataArrayBufferSize:
        """
        return self._dllwrap.InputRFCorrectionConfigureData(self._vi, RepCapIdentifier, DataArrayBufferSize)

    def InputRFCorrectionDelete(self, RepCapIdentifier):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        """
        return self._dllwrap.InputRFCorrectionDelete(self._vi, RepCapIdentifier)

    def InputRFCorrectionMergeData(self, RepCapIdentifier, DataArrayBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param DataArrayBufferSize:
        :type DataArrayBufferSize:
        """
        return self._dllwrap.InputRFCorrectionMergeData(self._vi, RepCapIdentifier, DataArrayBufferSize)

    def InputRFCorrectionQueryData(self, RepCapIdentifier, RetValBufferSize):
        """

        :param RepCapIdentifier:
        :type RepCapIdentifier:
        :param RetValBufferSize:
        :type RetValBufferSize:
        """
        return self._dllwrap.InputRFCorrectionQueryData(self._vi, RepCapIdentifier, RetValBufferSize)

    def Copy(self, InputRFCorrection, DestinationCorrectionSet):
        """

        :param InputRFCorrection:
        :type InputRFCorrection:
        :param DestinationCorrectionSet:
        :type DestinationCorrectionSet:
        """
        return self._dllwrap.Copy(self._vi, InputRFCorrection, DestinationCorrectionSet)

    def InputRFCorrectionsDeleteAll(self):
        """"""
        return self._dllwrap.InputRFCorrectionsDeleteAll(self._vi)

    def CalibrationCalibrate(self):
        """"""
        return self._dllwrap.CalibrationCalibrate(self._vi)

    def CalibrationRFPreselectorCalibrateConductedBand(self):
        """"""
        return self._dllwrap.CalibrationRFPreselectorCalibrateConductedBand(self._vi)

    def CalibrationRFPreselectorCalibrateRadiatedBand(self):
        """"""
        return self._dllwrap.CalibrationRFPreselectorCalibrateRadiatedBand(self._vi)

    def CalibrationRFPreselectorCalibrateFullBand(self):
        """"""
        return self._dllwrap.CalibrationRFPreselectorCalibrateFullBand(self._vi)

    def CalibrationRFPreselectorQueryAlignConductedBandTimestamp(self, ValBufferSize):
        """

        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.CalibrationRFPreselectorQueryAlignConductedBandTimestamp(self._vi, ValBufferSize)

    def CalibrationRFPreselectorQueryAlignRadiatedBandTimestamp(self, ValBufferSize):
        """

        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.CalibrationRFPreselectorQueryAlignRadiatedBandTimestamp(self._vi, ValBufferSize)

    def CalibrationRFPreselectorQueryAlignConductedBandTemprature(self):
        """"""
        return self._dllwrap.CalibrationRFPreselectorQueryAlignConductedBandTemprature(self._vi)

    def CalibrationRFPreselectorQueryAlignRadiatedBandTemprature(self):
        """"""
        return self._dllwrap.CalibrationRFPreselectorQueryAlignRadiatedBandTemprature(self._vi)

    def MemoryOperationQueryDirectoryCatalog(self, FileName, ValBufferSize):
        """

        :param FileName:
        :type FileName:
        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.MemoryOperationQueryDirectoryCatalog(self._vi, FileName, ValBufferSize)

    def MemoryOperationSetStorageDirectory(self, DirectoryPathBufferSize, DirectoryPath):
        """

        :param DirectoryPathBufferSize:
        :type DirectoryPathBufferSize:
        :param DirectoryPath:
        :type DirectoryPath:
        """
        return self._dllwrap.MemoryOperationSetStorageDirectory(self._vi, DirectoryPathBufferSize, DirectoryPath)

    def MemoryOperationQueryStorageDirectory(self, ValBufferSize):
        """

        :param ValBufferSize:
        :type ValBufferSize:
        """
        return self._dllwrap.MemoryOperationQueryStorageDirectory(self._vi, ValBufferSize)

    def MemoryOperationCopy(self, SourcePathBufferSize, SourcePath, DestinationPathBufferSize, DestinationPath):
        """

        :param SourcePathBufferSize:
        :type SourcePathBufferSize:
        :param SourcePath:
        :type SourcePath:
        :param DestinationPathBufferSize:
        :type DestinationPathBufferSize:
        :param DestinationPath:
        :type DestinationPath:
        """
        return self._dllwrap.MemoryOperationCopy(
            self._vi,
            SourcePathBufferSize,
            SourcePath,
            DestinationPathBufferSize,
            DestinationPath,
        )

    def MemoryOperationDelete(self, FilenameBufferSize, Filename):
        """

        :param FilenameBufferSize:
        :type FilenameBufferSize:
        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationDelete(self._vi, FilenameBufferSize, Filename)

    def MemoryOperationLoadCorrectionFileData(self, CorrectionIdentifier, FilenameBufferSize, Filename):
        """

        :param CorrectionIdentifier:
        :type CorrectionIdentifier:
        :param FilenameBufferSize:
        :type FilenameBufferSize:
        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationLoadCorrectionFileData(
            self._vi, CorrectionIdentifier, FilenameBufferSize, Filename
        )

    def MemoryOperationLoadLimitFileData(self, LimitLineIdentifier, FilenameBufferSize, Filename):
        """

        :param LimitLineIdentifier:
        :type LimitLineIdentifier:
        :param FilenameBufferSize:
        :type FilenameBufferSize:
        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationLoadLimitFileData(
            self._vi, LimitLineIdentifier, FilenameBufferSize, Filename
        )

    def MemoryOperationRecallState(self, Filename):
        """

        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationRecallState(self._vi, Filename)

    def MemoryOperationRecallTraceFromTraceFile(self, TraceNumber, Filename):
        """

        :param TraceNumber:
        :type TraceNumber:
        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationRecallTraceFromTraceFile(self._vi, TraceNumber, Filename)

    def MemoryOperationRecallTraceFromRegister(self, TraceNumber, RegisterIdentifier):
        """

        :param TraceNumber:
        :type TraceNumber:
        :param RegisterIdentifier:
        :type RegisterIdentifier:
        """
        return self._dllwrap.MemoryOperationRecallTraceFromRegister(self._vi, TraceNumber, RegisterIdentifier)

    def MemoryOperationCreateStorageDirectory(self, DirectoryPath):
        """

        :param DirectoryPath:
        :type DirectoryPath:
        """
        return self._dllwrap.MemoryOperationCreateStorageDirectory(self._vi, DirectoryPath)

    def MemoryOperationMove(self, SourcePath, DestinationPath):
        """

        :param SourcePath:
        :type SourcePath:
        :param DestinationPath:
        :type DestinationPath:
        """
        return self._dllwrap.MemoryOperationMove(self._vi, SourcePath, DestinationPath)

    def MemoryOperationRemoveStorageDirectory(self, DirectoryPath):
        """

        :param DirectoryPath:
        :type DirectoryPath:
        """
        return self._dllwrap.MemoryOperationRemoveStorageDirectory(self._vi, DirectoryPath)

    def MemoryOperationStoreCorrectionDataToFile(self, CorrectionIdentifier, Filename):
        """

        :param CorrectionIdentifier:
        :type CorrectionIdentifier:
        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationStoreCorrectionDataToFile(self._vi, CorrectionIdentifier, Filename)

    def MemoryOperationStoreLimitDataToFile(self, LimitLineIdentifier, Filename):
        """

        :param LimitLineIdentifier:
        :type LimitLineIdentifier:
        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationStoreLimitDataToFile(self._vi, LimitLineIdentifier, Filename)

    def MemoryOperationStoreMeasurementResultsToFile(self, Filename):
        """

        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationStoreMeasurementResultsToFile(self._vi, Filename)

    def MemoryOperationStoreMarkerTableToFile(self, FilenameBufferSize, Filename):
        """

        :param FilenameBufferSize:
        :type FilenameBufferSize:
        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationStoreMarkerTableToFile(self._vi, FilenameBufferSize, Filename)

    def MemoryOperationStorePeakTableToFile(self, Filename):
        """

        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationStorePeakTableToFile(self._vi, Filename)

    def MemoryOperationStoreScreenImageToFile(self, Filename):
        """

        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationStoreScreenImageToFile(self._vi, Filename)

    def MemoryOperationStoreState(self, Filename):
        """

        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationStoreState(self._vi, Filename)

    def MemoryOperationStoreTraceToTraceFile(self, TraceNumber, Filename):
        """

        :param TraceNumber:
        :type TraceNumber:
        :param Filename:
        :type Filename:
        """
        return self._dllwrap.MemoryOperationStoreTraceToTraceFile(self._vi, TraceNumber, Filename)

    def MemoryOperationStoreTraceToRegister(self, TraceNumber, RegisterIdentifier):
        """

        :param TraceNumber:
        :type TraceNumber:
        :param RegisterIdentifier:
        :type RegisterIdentifier:
        """
        return self._dllwrap.MemoryOperationStoreTraceToRegister(self._vi, TraceNumber, RegisterIdentifier)

    def TracesInitiateSignal(self, Trace, Frequency, Amplitude, Span):
        """

        :param Trace:
        :type Trace:
        :param Frequency:
        :type Frequency:
        :param Amplitude:
        :type Amplitude:
        :param Span:
        :type Span:
        """
        return self._dllwrap.TracesInitiateSignal(self._vi, Trace, Frequency, Amplitude, Span)

    def TracesClearAverage(self):
        """"""
        return self._dllwrap.TracesClearAverage(self._vi)

    def TracesClearAll(self):
        """"""
        return self._dllwrap.TracesClearAll(self._vi)

    def TracesConfigureFunctions(
        self,
        Trace,
        Destination,
        Function,
        Operand1,
        Operand2,
        LogOffset,
        LogDifferenceReference,
    ):
        """

        :param Trace:
        :type Trace:
        :param Destination:
        :type Destination:
        :param Function:
        :type Function:
        :param Operand1:
        :type Operand1:
        :param Operand2:
        :type Operand2:
        :param LogOffset:
        :type LogOffset:
        :param LogDifferenceReference:
        :type LogDifferenceReference:
        """
        return self._dllwrap.TracesConfigureFunctions(
            self._vi,
            Trace,
            Destination,
            Function,
            Operand1,
            Operand2,
            LogOffset,
            LogDifferenceReference,
        )

    def StatusClear(self):
        """"""
        return self._dllwrap.StatusClear(self._vi)

    def StatusConfigureServiceRequest(self, Reason):
        """

        :param Reason:
        :type Reason:
        """
        return self._dllwrap.StatusConfigureServiceRequest(self._vi, Reason)

    def StatusPreset(self):
        """"""
        return self._dllwrap.StatusPreset(self._vi)

    def Status_GetRegister(self, Register, SubRegister):
        """

        :param Register:
        :type Register:
        :param SubRegister:
        :type SubRegister:
        """
        return self._dllwrap.Status_GetRegister(self._vi, Register, SubRegister)

    def Status_SetRegister(self, Register, SubRegister, Val):
        """

        :param Register:
        :type Register:
        :param SubRegister:
        :type SubRegister:
        :param Val:
        :type Val:
        """
        return self._dllwrap.Status_SetRegister(self._vi, Register, SubRegister, Val)
