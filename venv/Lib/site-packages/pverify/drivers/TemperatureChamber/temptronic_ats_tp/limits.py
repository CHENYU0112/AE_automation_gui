from __future__ import annotations

import numpy as np


class LIMITS_ATS710:
    TEMP_HIGH = 225.0  # °C
    TEMP_LOW = -75.0  # °C
    FLOW_HIGH = 8.5  # unit: l/s -> 18 scfm
    FLOW_LOW = 2.36  # unit: l/s -> 5 scfm
    WINDOW_HIGH = 9.9  # unit: °C
    WINDOW_LOW = 0.1  # unit: °C
    RATE_HIGH = 9999  # °C/minute
    RATE_LOW = 0  # °C/minute


class LIMITS_ATS_545_645:
    TEMP_HIGH = 225.0  # °C
    TEMP_LOW = -75.0  # °C
    FLOW_HIGH = 8.5  # unit: l/s -> 18 scfm  NOT SUPPORTED (ToDo: Check)
    FLOW_LOW = 1.9  # unit: l/s -> 4 scfm  NOT SUPPORTED (ToDo: Check)
    WINDOW_HIGH = 9.9  # unit: °C
    WINDOW_LOW = 0.1  # unit: °C
    RATE_HIGH = 9999  # °C/minute
    RATE_LOW = 0  # °C/minute


class LIMITS_TP04310:
    TEMP_HIGH = 225.0  # °C
    TEMP_LOW = -75.0  # °C
    FLOW_HIGH = 8.5  # unit: l/s -> 18 scfm  NOT SUPPORTED (ToDo: Check)
    FLOW_LOW = 2.36  # unit: l/s -> 5 scfm  NOT SUPPORTED (ToDo: Check)
    WINDOW_HIGH = 9.9  # unit: °C
    WINDOW_LOW = 0.1  # unit: °C
    RATE_HIGH = 9999  # °C/minute
    RATE_LOW = 0  # °C/minute


LIMITS_DEFAULT = LIMITS_ATS710
SCFH_TO_LPS = 127.11
SCFM_TO_LPS = 2.11


def scfm_to_lps(scfm: float | int) -> float:
    return np.round(scfm / SCFM_TO_LPS, decimals=3)


def lps_to_scfm(lps: float | int) -> int:
    return int(lps * SCFM_TO_LPS)
