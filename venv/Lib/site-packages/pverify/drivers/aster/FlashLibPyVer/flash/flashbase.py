# Copyright (C) Infineon Technologies (2019)
#
# All rights reserved.
#
# This document contains proprietary information belonging to Infineon
# Technologies. Passing on and copying of this document, and Comunication
# of its contents is not permitted without prior written authorization.

"""Abstract base class for FLASH interfaces."""
from __future__ import annotations

from abc import ABCMeta, abstractmethod


class FlashLibError(Exception):
    """Main exception class"""


class FlashBase(metaclass=ABCMeta):
    """Basic class for FLASH drivers and libraries where the mandatory methods
    are declared"""

    _initialized = False

    @abstractmethod
    def __init__(self):
        """Constructor"""

    @property
    def initialized(self):
        """Initialized property for all sub-classes to have a common variable
        in all sub-classes to check whether the library has been initialized
        """
        return self._initialized

    @abstractmethod
    def init_flash_lib(self, connection=0, flash_cfg=None, **kwargs):
        """Initialize Flash Library"""

    @abstractmethod
    def program_flash(self, connection=0, bin_file=None, **kwargs):
        """Program Flash"""

    @abstractmethod
    def erase_flash(self, connection=0, **kwargs):
        """Erase Flash"""

    @abstractmethod
    def verify_flash(self, connection=0, bin_file=None, **kwargs):
        """Verify Flash"""
