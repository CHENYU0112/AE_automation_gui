from __future__ import annotations

from ctypes import byref

from pverify.core.lab.ivi.headers.ivi import *
from pverify.core.lab.ivi.helper import *
from pverify.core.lab.ivi.ivi_base_classes import IVICDriverWrapper

from . import KE2230_const as const
from .KE2230_const import *


class KE2230_dllwrap(IVICDriverWrapper):
    def __init__(self):
        super().__init__()
        self._dll = load_dll("KE2230_32.dll", "KE2230_64.dll")
        """:type : ctypes.WinDLL"""

    @property
    def dll(self):
        return self._dll

    @property
    def drivername(self):
        return "KE2230"

    @property
    def const(self):
        return const

    def init(self, ResourceName, IdQuery, Reset):
        Vi = ViSession()
        _status = self.dll.KE2230_init(ViRsrc(ResourceName), ViBoolean(IdQuery), ViBoolean(Reset), byref(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return int(Vi.value)

    def close(self, Vi):
        _status = self.dll.KE2230_close(ViSession(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def InitWithOptions(self, ResourceName, IdQuery, Reset, OptionsString):
        Vi = ViSession()
        _status = self.dll.KE2230_InitWithOptions(
            ViRsrc(ResourceName),
            ViBoolean(IdQuery),
            ViBoolean(Reset),
            ViConstString(OptionsString),
            byref(Vi),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return int(Vi.value)

    def revision_query(self, Vi):
        DriverRev = ARRAY_ViChar(1024)
        InstrRev = ARRAY_ViChar(1024)
        _status = self.dll.KE2230_revision_query(ViSession(Vi), DriverRev, InstrRev)
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        DriverRev = decode(DriverRev)
        InstrRev = decode(InstrRev)
        return DriverRev, InstrRev

    def error_message(self, Vi, ErrorCode):
        ErrorMessage = ARRAY_ViChar(1024)
        _status = self.dll.KE2230_error_message(ViSession(Vi), ViStatus(ErrorCode), ErrorMessage)
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return decode(ErrorMessage)

    def GetError(self, Vi, ErrorDescriptionBufferSize):
        ErrorCode = ViStatus()
        ErrorDescription = ARRAY_ViChar(1024)
        _status = self.dll.KE2230_GetError(
            ViSession(Vi),
            byref(ErrorCode),
            ViInt32(ErrorDescriptionBufferSize),
            ErrorDescription,
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        ErrorDescription = decode(ErrorDescription)
        return ErrorCode, ErrorDescription

    def ClearError(self, Vi):
        _status = self.dll.KE2230_ClearError(ViSession(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def ClearInterchangeWarnings(self, Vi):
        _status = self.dll.KE2230_ClearInterchangeWarnings(ViSession(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def GetNextCoercionRecord(self, Vi, CoercionRecordBufferSize):
        CoercionRecord = ARRAY_ViChar(1024)
        _status = self.dll.KE2230_GetNextCoercionRecord(
            ViSession(Vi), ViInt32(CoercionRecordBufferSize), CoercionRecord
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return decode(CoercionRecord)

    def GetNextInterchangeWarning(self, Vi, InterchangeWarningBufferSize):
        InterchangeWarning = ARRAY_ViChar(1024)
        _status = self.dll.KE2230_GetNextInterchangeWarning(
            ViSession(Vi), ViInt32(InterchangeWarningBufferSize), InterchangeWarning
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return decode(InterchangeWarning)

    def InvalidateAllAttributes(self, Vi):
        _status = self.dll.KE2230_InvalidateAllAttributes(ViSession(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def ResetInterchangeCheck(self, Vi):
        _status = self.dll.KE2230_ResetInterchangeCheck(ViSession(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def Disable(self, Vi):
        _status = self.dll.KE2230_Disable(ViSession(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def error_query(self, Vi):
        ErrorCode = ViInt32()
        ErrorMessage = ARRAY_ViChar(1024)
        _status = self.dll.KE2230_error_query(ViSession(Vi), byref(ErrorCode), ErrorMessage)
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        ErrorCode = int(ErrorCode.value)
        ErrorMessage = decode(ErrorMessage)
        return ErrorCode, ErrorMessage

    def LockSession(self, Vi):
        CallerHasLock = ViBoolean()
        _status = self.dll.KE2230_LockSession(ViSession(Vi), byref(CallerHasLock))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return bool(CallerHasLock.value)

    def reset(self, Vi):
        _status = self.dll.KE2230_reset(ViSession(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def ResetWithDefaults(self, Vi):
        _status = self.dll.KE2230_ResetWithDefaults(ViSession(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def self_test(self, Vi):
        TestResult = ViInt16()
        TestMessage = ARRAY_ViChar(1024)
        _status = self.dll.KE2230_self_test(ViSession(Vi), byref(TestResult), TestMessage)
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        TestResult = int(TestResult.value)
        TestMessage = decode(TestMessage)
        return TestResult, TestMessage

    def UnlockSession(self, Vi):
        CallerHasLock = ViBoolean()
        _status = self.dll.KE2230_UnlockSession(ViSession(Vi), byref(CallerHasLock))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return bool(CallerHasLock.value)

    def GetAttributeViInt32(self, Vi, RepCapIdentifier, AttributeID):
        AttributeValue = ViInt32()
        _status = self.dll.KE2230_GetAttributeViInt32(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            byref(AttributeValue),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return int(AttributeValue.value)

    def GetAttributeViReal64(self, Vi, RepCapIdentifier, AttributeID):
        AttributeValue = ViReal64()
        _status = self.dll.KE2230_GetAttributeViReal64(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            byref(AttributeValue),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return float(AttributeValue.value)

    def GetAttributeViBoolean(self, Vi, RepCapIdentifier, AttributeID):
        AttributeValue = ViBoolean()
        _status = self.dll.KE2230_GetAttributeViBoolean(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            byref(AttributeValue),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return bool(AttributeValue.value)

    def GetAttributeViSession(self, Vi, RepCapIdentifier, AttributeID):
        AttributeValue = ViSession()
        _status = self.dll.KE2230_GetAttributeViSession(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            byref(AttributeValue),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return int(AttributeValue.value)

    def GetAttributeViString(self, Vi, RepCapIdentifier, AttributeID, AttributeValueBufferSize):
        AttributeValue = ARRAY_ViChar(1024)
        _status = self.dll.KE2230_GetAttributeViString(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            ViInt32(AttributeValueBufferSize),
            AttributeValue,
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return decode(AttributeValue)

    def SetAttributeViInt32(self, Vi, RepCapIdentifier, AttributeID, AttributeValue):
        _status = self.dll.KE2230_SetAttributeViInt32(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            ViInt32(AttributeValue),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def SetAttributeViReal64(self, Vi, RepCapIdentifier, AttributeID, AttributeValue):
        _status = self.dll.KE2230_SetAttributeViReal64(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            ViReal64(AttributeValue),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def SetAttributeViBoolean(self, Vi, RepCapIdentifier, AttributeID, AttributeValue):
        _status = self.dll.KE2230_SetAttributeViBoolean(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            ViBoolean(AttributeValue),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def SetAttributeViSession(self, Vi, RepCapIdentifier, AttributeID, AttributeValue):
        _status = self.dll.KE2230_SetAttributeViSession(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            ViSession(AttributeValue),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def SetAttributeViString(self, Vi, RepCapIdentifier, AttributeID, AttributeValue):
        _status = self.dll.KE2230_SetAttributeViString(
            ViSession(Vi),
            ViConstString(RepCapIdentifier),
            ViAttr(AttributeID),
            ViConstString(AttributeValue),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def ResetStatusRegister(self, Vi):
        _status = self.dll.KE2230_ResetStatusRegister(ViSession(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def GetChannelQuestStatusRegister(self, Vi, Channel):
        ChannelQuestStatusRegister = ViInt32()
        _status = self.dll.KE2230_GetChannelQuestStatusRegister(
            ViSession(Vi), ViInt32(Channel), byref(ChannelQuestStatusRegister)
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return int(ChannelQuestStatusRegister.value)

    def GetChannelQuestEventEnableRegister(self, Vi, Channel):
        ChannelQuestEventEnableRegister = ViInt32()
        _status = self.dll.KE2230_GetChannelQuestEventEnableRegister(
            ViSession(Vi), ViInt32(Channel), byref(ChannelQuestEventEnableRegister)
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return int(ChannelQuestEventEnableRegister.value)

    def SetChannelQuestEventEnableRegister(self, Vi, Channel, ChannelQuestEventEnableRegister):
        _status = self.dll.KE2230_SetChannelQuestEventEnableRegister(
            ViSession(Vi), ViInt32(Channel), ViInt32(ChannelQuestEventEnableRegister)
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def GetChannelQuestConditionRegister(self, Vi, Channel):
        ChannelQuestConditionRegister = ViInt32()
        _status = self.dll.KE2230_GetChannelQuestConditionRegister(
            ViSession(Vi), ViInt32(Channel), byref(ChannelQuestConditionRegister)
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return int(ChannelQuestConditionRegister.value)

    def GetChannelOperationStatusRegister(self, Vi, Channel):
        ChannelOperationStatusRegister = ViInt32()
        _status = self.dll.KE2230_GetChannelOperationStatusRegister(
            ViSession(Vi), ViInt32(Channel), byref(ChannelOperationStatusRegister)
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return int(ChannelOperationStatusRegister.value)

    def GetChannelOperationEventEnableRegister(self, Vi, Channel):
        ChannelOperationEventEnableRegister = ViInt32()
        _status = self.dll.KE2230_GetChannelOperationEventEnableRegister(
            ViSession(Vi), ViInt32(Channel), byref(ChannelOperationEventEnableRegister)
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return int(ChannelOperationEventEnableRegister.value)

    def SetChannelOperationEventEnableRegister(self, Vi, Channel, ChannelOperationEventEnableRegister):
        _status = self.dll.KE2230_SetChannelOperationEventEnableRegister(
            ViSession(Vi), ViInt32(Channel), ViInt32(ChannelOperationEventEnableRegister)
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def GetChannelOperationConditionRegister(self, Vi, Channel):
        ChannelOperationConditionRegister = ViInt32()
        _status = self.dll.KE2230_GetChannelOperationConditionRegister(
            ViSession(Vi), ViInt32(Channel), byref(ChannelOperationConditionRegister)
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return int(ChannelOperationConditionRegister.value)

    def SaveState(self, Vi, Item):
        _status = self.dll.KE2230_SaveState(ViSession(Vi), ViInt32(Item))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def RecallState(self, Vi, Item):
        _status = self.dll.KE2230_RecallState(ViSession(Vi), ViInt32(Item))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def ClearDisplayText(self, Vi):
        _status = self.dll.KE2230_ClearDisplayText(ViSession(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def Beep(self, Vi):
        _status = self.dll.KE2230_Beep(ViSession(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def SendSoftwareTrigger2(self, Vi):
        _status = self.dll.KE2230_SendSoftwareTrigger2(ViSession(Vi))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def Query(self, Vi, Command, ValBufferSize):
        Val = ARRAY_ViChar(1024)
        _status = self.dll.KE2230_Query(ViSession(Vi), ViConstString(Command), ViInt32(ValBufferSize), Val)
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return decode(Val)

    def ReadPartialString(self, Vi, Length, ValBufferSize):
        Val = ARRAY_ViChar(1024)
        _status = self.dll.KE2230_ReadPartialString(ViSession(Vi), ViInt32(Length), ViInt32(ValBufferSize), Val)
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return decode(Val)

    def ReadString(self, Vi, ValBufferSize):
        Val = ARRAY_ViChar(1024)
        _status = self.dll.KE2230_ReadString(ViSession(Vi), ViInt32(ValBufferSize), Val)
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return decode(Val)

    def WriteString(self, Vi, Command):
        _status = self.dll.KE2230_WriteString(ViSession(Vi), ViConstString(Command))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def Measure(self, Vi, OutputChannel2, MeasurementType):
        Val = ViReal64()
        _status = self.dll.KE2230_Measure(
            ViSession(Vi),
            ViConstString(OutputChannel2),
            ViInt32(MeasurementType),
            byref(Val),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return float(Val.value)

    def CurrentStepDown(self, Vi, OutputChannel):
        _status = self.dll.KE2230_CurrentStepDown(ViSession(Vi), ViConstString(OutputChannel))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def CurrentStepUp(self, Vi, OutputChannel):
        _status = self.dll.KE2230_CurrentStepUp(ViSession(Vi), ViConstString(OutputChannel))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def VoltageStepUp(self, Vi, OutputChannel):
        _status = self.dll.KE2230_VoltageStepUp(ViSession(Vi), ViConstString(OutputChannel))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def VoltageStepDown(self, Vi, OutputChannel):
        _status = self.dll.KE2230_VoltageStepDown(ViSession(Vi), ViConstString(OutputChannel))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def Apply(self, Vi, Channel, OptionalParametersBufferSize, OptionalParameters):
        _status = self.dll.KE2230_Apply(
            ViSession(Vi),
            ViInt32(Channel),
            ViInt32(OptionalParametersBufferSize),
            ViConstString(OptionalParameters),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def GetOutputChannelName(self, Vi, Index, NameBufferSize):
        Name = ARRAY_ViChar(1024)
        _status = self.dll.KE2230_GetOutputChannelName(ViSession(Vi), ViInt32(Index), ViInt32(NameBufferSize), Name)
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return decode(Name)

    def QueryCurrentLimitMax(self, Vi, OutputChannel, VoltageLevel):
        Val = ViReal64()
        _status = self.dll.KE2230_QueryCurrentLimitMax(
            ViSession(Vi),
            ViConstString(OutputChannel),
            ViReal64(VoltageLevel),
            byref(Val),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return float(Val.value)

    def QueryState(self, Vi, OutputChannel, OutputState):
        Val = ViBoolean()
        _status = self.dll.KE2230_QueryState(
            ViSession(Vi), ViConstString(OutputChannel), ViInt32(OutputState), byref(Val)
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return bool(Val.value)

    def QueryVoltageLevelMax(self, Vi, OutputChannel, CurrentLimit):
        Val = ViReal64()
        _status = self.dll.KE2230_QueryVoltageLevelMax(
            ViSession(Vi),
            ViConstString(OutputChannel),
            ViReal64(CurrentLimit),
            byref(Val),
        )
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return float(Val.value)

    def GetEnabled(self, Vi, OutputChannel):
        Enabled = ViBoolean()
        _status = self.dll.KE2230_GetEnabled(ViSession(Vi), ViConstString(OutputChannel), byref(Enabled))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return bool(Enabled.value)

    def SetEnabled(self, Vi, OutputChannel, Enabled):
        _status = self.dll.KE2230_SetEnabled(ViSession(Vi), ViConstString(OutputChannel), ViBoolean(Enabled))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)

        return

    def Fetch(self, Vi, OutputChannel, FetchType):
        Val = ViReal64()
        _status = self.dll.KE2230_Fetch(ViSession(Vi), ViConstString(OutputChannel), ViInt32(FetchType), byref(Val))
        if int(_status) < 0:
            raise InstrumentError(_status)
        elif int(_status) > 0:
            raise InstrumentWarning(_status)
        return float(Val.value)
