from __future__ import annotations

from .ag5313xni import *


class IIviCounterTotalizeTimed:
    def __init__(self, root):
        self.root = root

    @property
    def Channel(self):
        return self.root.dllwrap.GetAttributeViString(None, IVI_CLASS_PUBLIC_ATTR_BASE + 51, 1024)

    @Channel.setter
    def Channel(self, value):
        """
        Specifies the input channel for the timed totalize function.
        """
        self.root.dllwrap.SetAttributeViString(None, IVI_CLASS_PUBLIC_ATTR_BASE + 51, value)

    @property
    def GateTime(self):
        return self.root.dllwrap.GetAttributeViReal64(None, IVI_CLASS_PUBLIC_ATTR_BASE + 52)

    @GateTime.setter
    def GateTime(self, value):
        """
        Specifies the gate time, in seconds, for the timed totalize function.
        """
        self.root.dllwrap.SetAttributeViReal64(None, IVI_CLASS_PUBLIC_ATTR_BASE + 52, value)

    def Configure(self, Channel, GateTime):
        """
        Sets the measurement function to Timed Totalize and configures the gate time
        attribute.

        :param Channel: Specifies the channel that will be counted.
        :type Channel: str
        :param GateTime: Specifies the gate time that will gate the counter channel.
        :type GateTime: float
        """
        self.root.dllwrap.ConfigureTimedTotalize(Channel, GateTime)
