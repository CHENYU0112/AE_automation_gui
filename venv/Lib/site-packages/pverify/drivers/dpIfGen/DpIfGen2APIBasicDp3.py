"""

Simple Wrapper to provide Initialize/Close support

"""
from __future__ import annotations

from pverify.drivers.dpIfGen.dpIfGen2lib.dpIfGen3API.com_dpifgen3_api_basic_class import DpIfGen2APIBasicDp3Class


class DpIfGen2APIBasicDp3(DpIfGen2APIBasicDp3Class):
    def __init__(self):
        DpIfGen2APIBasicDp3Class.__init__(self)
        self.drivername = self.__class__.__name__
        self.IDN = "DpIfGen2APIBasicDp3 Version: {}, Max FW Version: {}, Min FW Version: {}".format(
            self.VERSION,
            self.MAX_DPIFGEN2_FW_VERSION,
            self.MIN_DPIFGEN2_FW_VERSION,
        )
        self.__Initialized = False

    # Read only dependent properties
    @property
    def Initialized(self):
        """
        Initialized is True between a successful call to the Initialize method
        and a successful call to the Close method, and False at all other
        times.
        """
        return self.__Initialized

    # Methods
    def Initialize(self, ResourceName="", IdQuery=1, Reset=0, OptionString=""):
        self.open()
        self.__Initialized = True

    def Close(self):
        """
        Closes the I/O session to the instrument. Driver methods and
        properties that access the instrument are not accessible after Close
        is called.
        """
        if self.__Initialized:
            self.__Initialized = False
            self.close()
