#!/usr/bin/python
# ===========================================================================
# Name:        lib_dpifgen3_commands_list.py
#
# Purpose:     File containing hid commands for easy reference
#
# Author:      Philipp Fuchs (IFAG PMM SYS SWT SWI)
#                                       <Philipp.Fuchs@infineon.com>
# Created:     26.06.2014
#
# Python Version: v2.7.2
#
# Dependency:
#
# ===========================================================================
# Copyright (C) 2014-2017 Infineon Technologies AG
# All rights reserved.
# ===========================================================================
#
# ===========================================================================
# This document contains proprietary information of Infineon Technologies AG.
# Passing on and copying of this document, and communication of its contents
# is not permitted without Infineon's prior written authorisation.
# ===========================================================================
#
from __future__ import annotations


class GenericTypes:
    def __init__(self):
        self.records = {}

    def add(self, name, value, description):
        new_item = {"name": name, "description": description}
        self.records[value] = new_item

    def get_name_by_value(self, value):
        return self.records[value]["name"]

    def get_description_by_value(self, value):
        return self.records[value]["description"]

    def get_value_by_name(self, name):
        for key in self.records:
            if name == self.records[key]["name"]:
                return key
        return None

    def get_values(self):
        return self.records.keys()

    def __str__(self):
        result = ""
        for value in self.get_values():
            result += f"0x{value:02X}: {self.get_description_by_value(value)}\n"
        return result


class RecordTypes(GenericTypes):
    def __init__(self):
        super().__init__()
        self.init()

    def init(self):
        self.add("OTP_FS_PATCH", 1, "Patch record")
        self.add("OTP_FS_DPARAM_FE", 2, "DPARAM record (front end)")
        self.add("OTP_FS_APARAM", 3, "APARAM record")
        self.add("OTP_FS_CUSTOMER_ID", 4, "Customer ID record")
        self.add("OTP_FS_CMDH_PASSWORD", 5, "Password record")
        self.add("OTP_FS_DPARAM_BE", 6, "DPARAM record (back end)")


class InfoTypes(GenericTypes):
    def __init__(self):
        super().__init__()
        self.init()

    def init(self):
        # Info Codes of Info Get command
        # Attention: name must be unique
        # Notes:
        # name to be found in the DP3 firmware project
        # value is the info-code to be sent via UART to the device
        # description will be displayed on the GUI
        self.add("CMDH_CMD_INFO_GET_PATCH_VERSION", 3, "Chip patch version")
        self.add("CMDH_CMD_INFO_GET_CHIP_ID", 4, "Chip ID")
        self.add("CMDH_CMD_INFO_OTP_SIZE_AVAILABLE", 5, "Chip available OTP size")
        self.add("CMDH_CMD_INFO_GET_FW_VERSION", 0x11, "Chip ROM ID")
        self.add("CMDH_CMD_INFO_GET_RUN_IN_RAM", 0x12, "Run in RAM")
        self.add("CMDH_CMD_INFO_GET_EXCEPTION_STATUS", 0x13, "Exception status")
        self.add("CMDH_CMD_INFO_GET_JTAG_ID", 0x14, "JTAG ID")
        self.add("CMDH_CMD_INFO_GET_FW_STATUS", 0x15, "FW status")


class DpIfGen3Commands:
    """
    This class contains dpIfGen3 communication commands and constant strings.
    There are no functions implemented in this class. This class is neither
    executable from the command line nor directly usable by another class. It
    only serves as a common place for keeping the constants that are
    related to dpIFGen2 board and are referenced in different other scripts.
    """

    #: dpIfGen3 Command List Version v1.0.0
    VERSION = "1.0.1"

    # The following part of this file is generated by get_commands_list_from_h_file.py
    # Commands list begin. Don't remove following tag and lines between the tags.
    SYNC = "CMD01"
    PROTOCOL_ID = "CMD64"
    READ_SERIALNUMBER = "CMD14"
    READ_HARDWARE_VERSION = "CMD15"
    READ_FIRMWARE_VERSION = "CMD16"
    TEST_FOR_EXTERNAL_SUPPLY = "CMD78"  # not implemented yet
    SET_VOLTAGE_LEVEL = "CMD1A"
    PREPARE_BOOT_LOADER = "CMD17"  # not implemented
    WRITE_SERIALNUMBER = "CMD23"
    WRITE_HARDWARE_VERSION = "CMD24"
    STORE_FW = "CMD27"
    SET_SERIALPORT_PARAMETER = "CMD1B"
    GET_INFO = "CMD32"
    GET_INFO_COMBO = "CMD12"
    MEMORY_READ = "CMD02"
    MEMORY_READ_COMBO = "CMD22"
    MEMORY_WRITE = "CMD81"
    RECORD_READ = "CMD11"
    RECORD_READ_COMBO = "CMD31"
    RECORD_WRITE = "CMD82"
    RECORD_BURN = "CMD83"
    APP_RESET = "CMD19"
    APP_STOP = "CMD5F"
    APP_STATUS_GET = "CMD25"
    PING = "CMD56"
    TIMEOUT_CONFIG = "CMD20"  # not implemented yet
    IF_TIMEOUT_CONFIG = "CMDF0"
    STRESS_DP3 = "CMD55"
    TRANSPARENT_WRITE = "CMD85"
    TRANSPARENT_READ = "CMD2B"
    TRANSPARENT_EXECUTE = "CMD2A"
    HOST_BUFFER_SIZE_GET = "CMDF1"
    VCC_UART_STATUS_CONTROL = "CMD68"
    IO_STATUS_CONTROL = "CMD76"  # not implemented yet
    TEST_USERCAPDISCHARGE_ON = "CMDF2"  # not implemented yet
    CALIBRATE = "CMD42"  # not implemented yet
    DPIFGEN2_STATUS_GET = "CMDA2"  # not implemented yet
    # Commands list end. Don't remove!

    INFO_TYPES = InfoTypes()
    RECORD_TYPES = RecordTypes()

    # CMDH_CMD_INFO_GET_FW_STATUS: FW status information of the device
    FW_STATUS_RESET = 0x00
    FW_STATUS_SYS_MEM_INIT_PASS = 0x01
    FW_STATUS_COMMAND_HANLDER_LOOP = 0x02
    FW_STATUS_APPLICATION_STARTED = 0x03
    FW_STATUS_APPLICATION_STOPPED = 0x04

    # CMDH_CMD_INFO_GET_EXCEPTION_STATUS: exception status codes of the device
    EXCEPTION_NO_ERROR = 0x00
    EXCEPTION_ILLEGAL_PARAMETER = 0x01
    EXCEPTION_TIMEOUT = 0x02
    EXCEPTION_OUT_OF_RESOURCE = 0x03
    EXCEPTION_FAILED_COMMUNICATION = 0x04
    EXCEPTION_CORRUPT_MEMORY = 0x05
    EXCEPTION_SYSTEM_FAULT = 0x06

    # Constant Strings
    #: Exit Direct Mode
    DIRECT_MODE_EXIT_COMMAND = "X"

    #: Acknowledge String
    ACK = "ACK"

    # List of NACKs coming directly from chip. This is supported with chips with the updated ROM version.
    # This is specific to DP2B-B13.
    # TODO extract it from dp3_fw header file
    NACK_LIST_DP3 = {
        "ROM_doc_Version": "1.3",
        "00": {
            "Name": "STATUS_SUCCESS",
            "Description": "Successful execution",
            "Action": "No Action required",
        },
        "01": {
            "Name": "STATUS_FAILURE",
            "Description": "Generic Error Code for general protocol purposes "
            "or used as a non-contextualized generic NAK",
            "Action": "A generic action cannot be specified",
        },
        "02": {
            "Name": "STATUS_INVALID_COMMAND_ARGUMENT",
            "Description": "One of the arguments in the given Command Frame is not valid",
            "Action": "Please make sure the command sent has the correct arguments. "
            "If an API function issues this NAK, please file a JIRA in DPTOOLS. ",
        },
        "03": {
            "Name": "STATUS_UNKNOWN_COMMAND",
            "Description": "The Command or the Class of Command Frame is not known",
            "Action": "Please make sure the command sent has the correct code. "
            "If an API function issues this NAK, please file a JIRA in DPTOOLS. ",
        },
        "04": {
            "Name": "STATUS_UNKNOWN_MEMORY_VERSION",
            "Description": "The configured Memory Version in OTP is invalid",
            "Action": "",
        },
        "10": {
            "Name": "STATUS_DPARAM_CRC_MISMATCH",
            "Description": "CRC over OTP stored DPARAM failed",
            "Action": "The calculated CRC over DPARAM does not match with the expected CRC. "
            "Dump the DPARAM to verify the contents.",
        },
        "11": {
            "Name": "STATUS_FWPARAM_CRC_MISMATCH",
            "Description": "CRC over OTP stored FWPARAM failed",
            "Action": "The calculated CRC over FW PARAMs in OTP does not match with the expected CRC. "
            "Dump the FW PARAMs in OTP to verify the contents.",
        },
        "20": {
            "Name": "STATUS_APP_FW_CRC_MISMATCH",
            "Description": "CRC over OTP stored App FW failed",
            "Action": "The calculated CRC over FW in OTP does not match with the expected CRC. "
            "Dump the FW in OTP to verify the contents.",
        },
        "21": {
            "Name": "STATUS_APP_FW_MISSING_BOOT_VECTOR",
            "Description": "No App FW Boot-vector found in OTP",
            "Action": "Please make sure the chip is properly configured with the Boot vector.",
        },
        "22": {
            "Name": "STATUS_APP_FW_NOT_LAUNCHABLE",
            "Description": "App FW is not launchable (None detected or autostart disabled)",
            "Action": "Make sure the FW is downloaded/burnt and auto-start is enabled.",
        },
        "30": {
            "Name": "STATUS_PROTECTION_PERSISTENCE_ERROR",
            "Description": "Burning the password or a feature locking flag has failed. "
            "The low nibble of the code contains the OTP Error Code.",
            "Action": "Please report the bug to ROM code JIRA.",
        },
        "31": {
            "Name": "STATUS_PROTECTION_INVALID_PASSWORD",
            "Description": "The Password used for locking the controller is invalid",
            "Action": "Please enter a valid password. Beware that the chip is protected against "
            "Brute forcing the passwords.",
        },
        "60": {
            "Name": "STATUS_APARAM_CRC_MISMATCH",
            "Description": "CRC over OTP stored APARAM failed",
            "Action": "The calculated CRC over APARAM in OTP does not match with the expected CRC. "
            "Dump the APARAM in OTP to verify the contents.",
        },
        "61": {
            "Name": "STATUS_APARAM_OUT_OF_BOUNDARY",
            "Description": "APARAM r/w access attempt violated APARAM Memory Segment boundaries",
            "Action": "The range specified for this operation exceeds the limit of allocated APARAM.",
        },
        "62": {
            "Name": "STATUS_APARAM_NOT_ENOUGH_SPACE_LEFT",
            "Description": "The block and patch lists would have been "
            "collided if the entry would have been written.",
            "Action": "This patch cannot be burnt due to insufficient space. Please use a new chip ",
        },
        "7X": {
            "Name": "STATUS_APARAM_PERSISTENCE_ERROR",
            "Description": "APARAM Burning to OTP failed. The low nibble of the code contains the OTP Error.",
            "Action": "Refer to the lower nibble and report the error to ROM code JIRA.",
        },
        "A0": {
            "Name": "STATUS_APP_FW_PATCH_CRC_MISMATCH",
            "Description": "CRC over OTP stored FW Patch failed",
            "Action": "The calculated CRC over FW Patch in OTP does not match with the expected CRC. "
            "Dump the FW Patch in OTP to verify the contents.",
        },
        "A1": {
            "Name": "STATUS_APP_FW_PATCH_OUT_OF_BOUNDARY",
            "Description": "App FW Patch r/w access attempt violated App FW Patch Memory Segment boundaries",
            "Action": "Please make sure the Patch is with in the FW segment limits",
        },
        "A2": {
            "Name": "STATUS_APP_FW_PATCH_NOT_ENOUGH_SPACE_LEFT",
            "Description": "The block and patch lists would have been "
            "collided if the entry would have been written.",
            "Action": "",
        },
        "BX": {
            "Name": "STATUS_APP_FW_PATCH_PERSISTENCE_ERROR",
            "Description": "App FW Patch Burning to OTP failed. The low nibble of the code"
            " contains the OTP Error Code.",
            "Action": "Refer to the lower nibble and report the error to ROM code JIRA.",
        },
        "E0": {
            "Name": "STATUS_LIST_CRC_MISMATCH",
            "Description": "CRC over OTP stored List Entry failed",
            "Action": "The calculated CRC over APARAMs in OTP does not match with the expected CRC. "
            "Dump the APARAMs in OTP to verify the contents.",
        },
        "E1": {
            "Name": "STATUS_LIST_OUT_OF_BOUNDARY",
            "Description": "List r/w access attempt violated some boundaries",
            "Action": "The range specified for this operation exceeds the limit of allocated APARAM.",
        },
        "E2": {
            "Name": "STATUS_LIST_NOT_ENOUGH_SPACE_LEFT",
            "Description": "The block and patch lists would have been "
            "collided if the entry would have been written.",
            "Action": "",
        },
        "FX": {
            "Name": "STATUS_LIST_PERSISTENCE_ERROR",
            "Description": "List Burning to OTP failed. The low nibble of the code contains the OTP Error Code.",
            "Action": "Refer to the lower nibble and report the error to ROM code JIRA.",
        },
    }


# --- End of File ------------------------------------------------
