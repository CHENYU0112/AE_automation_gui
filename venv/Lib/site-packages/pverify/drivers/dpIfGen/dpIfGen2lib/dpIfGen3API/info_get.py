from __future__ import annotations


class InfoGetItem:
    def __init__(self, name):
        self.name = name
        self.code = None
        self.result = None
        self.description = None

    def code_set(self, code):
        self.code = code

    def code_get(self):
        return self.code

    def description_set(self, text):
        self.description = text

    def description_get(self):
        return self.description

    def result_set(self, result):
        self.result = result

    def result_get(self):
        return self.result


class InfoGet:
    def __init__(self):
        self.items = {}

    def add_info(self, name, code, description):
        if name not in self.items:
            self.items[name] = InfoGetItem(name)
            self.items[name].code_set(code)
            self.items[name].description_set(description)

    def get_info_names(self):
        return list(self.items.keys())

    def info_code_set(self, name, code):
        if name in self.items:
            self.items[name].code_set(code)

    def info_code_get(self, name):
        if name in self.items:
            return self.items[name].code_get()
        else:
            return None

    def description_set(self, name, text):
        if name in self.items:
            self.items[name].description_set(text)

    def description_get(self, name):
        if name in self.items:
            return self.items[name].description_get()
        else:
            return None

    def result_set(self, name, result):
        if name in self.items:
            self.items[name].result_set(result)

    def result_get(self, name):
        if name in self.items:
            return self.items[name].result_get()
        else:
            return None
