from __future__ import annotations

import unittest

from dpIfGen2lib.test.dp3.support.memory import Memory


class TestMemory(unittest.TestCase):
    def setUp(self):
        self.memory = Memory()

    def test_memory_write_read(self):
        self.memory.write(0, 1234)
        assert self.memory.read(0) == 1234

    def test_memory_clear_all(self):
        self.memory.burn(0xC000, 0x0010)
        self.memory.write(0x0000, 0x1234)
        self.memory.memory_clear_all()
        assert self.memory.read(49152) == 0
        assert self.memory.read(0) == 0

    def test_memory_clear(self):
        self.memory.burn(0xC000, 0x0010)
        self.memory.write(0x0000, 0x1234)
        self.memory.clear()
        assert self.memory.read(49152) == 16
        assert self.memory.read(0) == 0

    def test_memory_block_write(self):
        self.memory.block_write(0x1234, [0x0010, 0x1234, 0x4321])
        assert self.memory.read_block(4660, 3) == [16, 4660, 17185]

    def test_default_memory_reads_zero(self):
        data = self.memory.read(0x100)
        assert data == 0
