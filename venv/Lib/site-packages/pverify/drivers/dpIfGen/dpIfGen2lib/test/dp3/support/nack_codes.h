/* ============================================================================
 ** Copyright (C) 2016 Infineon Technologies AG
 ** All rights reserved.
 ** ============================================================================
 **
 ** ============================================================================
 ** This document contains proprietary information of Infineon Technologies AG.
 ** Passing on and copying of this document, and communication of its contents
 ** is not permitted without Infineon's prior written authorisation.
 ** ============================================================================
 */

#ifndef NACK_CODES_H_
#define NACK_CODES_H_

/**
 * @file    nack_codes.h
 * @brief   Interface of definition of NACK codes.
 */

/**
 * @page pg_nack_codes NACK codes
 *
 * @section sct_nack_codes_over Overview
 * These codes define error codes send by .dpIfGen2.
 *\n
 * \n
 *
 * @section sct_nack_codes_arch Architecture
 * All error codes defined by .dpIfGen2 will show 0xFF in low byte position. As low byte is transmitted first 0xFF appears first.
 * For Compatibility reason only the error codes for calibration differ and start with 0x04 as it was defined in
 * firmware V2 (0x04 in high byte). For these commands are only used for calibration of the XDP supply this is not a problem.
 * These commands would not be used when debugging application.
 * All other error codes not defined here are of XDP origin. Please refer to XDP firmware documentation.
 *\n
 * \n
 * @section sct_nack_codes_impl Implementation
 * These codes also have some remarks on possible reasons and a small help for the user to be able to remove the error.
 * \n
 * Definition of the NACK codes: @ref group_nack_codes
 */

/*
==============================================================================
   1. INCLUDE FILES
==============================================================================
*/

/*
==============================================================================
   2. DEFINITIONS
==============================================================================
*/

/*
==============================================================================
   3. TYPES
==============================================================================
*/

/**
 * @defgroup group_nack_codes NACK Codes
 * @{
 */
typedef enum
{
    ACK_DEFAULT = 0, ///< 0x0000
    NAK_DUMMY = 0xFFFF, ///< 0xFFFF

    /** @@NAME:             NAK_VDD_SHORTED
     *
     *  @@DESCRIPTION:      DpIfGen2 could not reach desired VDD. There are several possible root causes:
     *                      impedance of load < 40R or
     *                      there is a too big supply capacitor on the .dp supply or
     *                      the USB side cannot provide enough power.
     *
     *  @@ACTION:           Check load, check the capacitor on VDD, check USB connection (e.g. do not use a hub or too long cable);
     *                      start again.
     */
    NAK_VDD_SHORTED = 0x01FF, ///< 0x01FF

    /** @@NAME:             NAK_EXTERNAL_SUPPLY
     *
     *  @@DESCRIPTION:      An external supply is attached or the .dp device generates its own supply.
     *                      DpIfGen2 does not provide any supply to the .dp device.
     *
     *  @@ACTION:           No action required.
     */
    NAK_EXTERNAL_SUPPLY = 0x02FF, ///< 0x02FF

    /** @@NAME:             NAK_VOLATGE_LEVEL_NOT_REACHED
     *
     *  @@DESCRIPTION:      The .dp device supply generated by DpIfGen2 could not reach the desired level.
     *                      The current which is drawn by the .dp device could be too high.
     *
     *  @@ACTION:           Change the .dp device.
     */
    NAK_VOLATGE_LEVEL_NOT_REACHED = 0x03FF, ///< 0x03FF

    /** @@NAME:             NAK_VOLTAGE_DEFINITION_OUT_OF_RANGE
     *
     *  @@DESCRIPTION:      The set-voltage command has been used with a voltage value outside the allowed range.
     *
     *
     *  @@ACTION:           Check the allowed voltage range of the set-voltage command.
     *                      Hint: the definition is done (value x 10) to achieve a resolution of 100mV.
     *                      Thus 5v would be 50d -> 0x32
     */
    NAK_VOLTAGE_DEFINITION_OUT_OF_RANGE = 0x04FF, ///< 0x04FF

    /** @@NAME:             NAK_POWER_OFF
     *
     *  @@DESCRIPTION:      Trying to execute a .dp related command (other as sync) without having used set-voltage before.
     *
     *  @@ACTION:           Make sure that a set-voltage command (typically setting to 12V) has been executed before.
     */
    NAK_POWER_OFF = 0x05FF, ///< 0x05FF

    /** @@NAME:             NAK_NOT_SYNCED
     *
     *  @@DESCRIPTION:      Trying to execute a .dp related command without having used sync before.
     *
     *  @@ACTION:           Make sure that a sync command  has been executed before.
     */
    NAK_NOT_SYNCED = 0x06FF, ///< 0x06FF

    /** @@NAME:             NAK_EEPROM_VERIFY_ERROR
     *
     *  @@DESCRIPTION:      Trying to write data to the EEPROM (of DpIfGen2) has failed.
     *                      The EEPROM is used to store serial number (S/N), hardware ID and boot string.
     *
     *  @@ACTION:           Try again, if error persists exchange DpIfGen2 hardware.
     */
    NAK_EEPROM_VERIFY_ERROR = 0x07FF, ///< 0x07FF

    /** @@NAME:             NAK_EEPROM_WRITE_ERROR
     *
     *  @@DESCRIPTION:      Trying to do a write when the prior write command has not finished yet.
     *
     *  @@ACTION:           Turn power off and on again and try again. If error persists exchange DpIfGen2 hardware.
     */
    NAK_EEPROM_WRITE_ERROR = 0x08FF, ///< 0x08FF

    /** @@NAME:             NAK_EEPROM_STRING_ERROR
     *
    *   @@DESCRIPTION:      The string size  is out of range. It should be at least one byte and maximal 32 bytes.
    *
    *   @@ACTION:           Set string size according to definition.
    */
    NAK_EEPROM_STRING_ERROR = 0x09FF, ///< 0x09FF

    /** @@NAME:             NAK_UART_TIMEOUT
     *
    *   @@DESCRIPTION:      A timeout took place when communicating with the .dp device.
    *                       All actions from DpIfGen2 to .dp device will be supervised by a timeout.
    *
    *   @@ACTION:           Check connection, supply and if correct .dp device is attached.
    */
    NAK_UART_TIMEOUT  = 0x0AFF, ///< 0x0AFF

    /** @@NAME:              NAK_UNEXPECTED
     *
    *   @@DESCRIPTION:       An unexpected value has been echoed on sync command.
    *
    *   @@ACTION:            Check .dp device.
    */
    NAK_UNEXPECTED = 0x0BFF, ///< 0x0BFF

    /** @@NAME:             NAK_DATA_COLLISION
     *
     *  @@DESCRIPTION:      DpIfGen2 tries to send a byte on UART while another device is sending on the
     *                      same UART wire, too.
     *
     *  @@ACTION:           Check UART if other device is connected other then .dp device.
     */
    NAK_DATA_COLLISION = 0x0CFF, ///< 0x0CFF

    /** @@NAME:             NAK_UART_INTERFACE_ERROR
     *
     *  @@DESCRIPTION:      The UART module discovered a signal error like frame-error or an override-error
     *                      of bytes in the receive buffer.
     *
     *  @@ACTION:           Try again.
     */
    NAK_UART_INTERFACE_ERROR = 0x0DFF, ///< 0x0DFF

    /** @@NAME:             NAK_UART_INACTIVE
     *
     *  @@DESCRIPTION:      The UART module was turned off
     *
     *  @@ACTION:           Check UART connection.
      *                     Hint: a short for longer than 10bits to gnd (on UART) will automatically turn off UART
     */
    NAK_UART_INACTIVE= 0x0EFF, ///< 0x0EFF


    /** @@NAME:             NAK_POWER_ON
     *
     *  @@DESCRIPTION:      The power is turned on and was expected to be off
     *
     *  @@ACTION:           Turn power off and repeat action
     */
     NAK_POWER_ON = 0x0FFF, ///< 0x0FFF

    /** @@NAME:             NAK_INVALID_STRING_VALUE
     *
     *  @@DESCRIPTION:      The string contains a a non ASCII  character.
     *
     *  @@ACTION:           Only use 32 < character < 126 for string. Characters \r and \n are allowed, too.
     */
    NAK_INVALID_STRING_VALUE = 0x10FF, ///< 0x10FF

    /** @@NAME:             NAK_COMMAND_NOT_REGISTERD
     *
     *  @@DESCRIPTION:      An unknown command has been sent to DpIFGen2.
     *
     *  @@ACTION:           Check command ID.
     */
    NAK_COMMAND_NOT_REGISTERD = 0x11FF, ///< 0x11FF

    /** @@NAME:             NAK_COMMAND_ERROR
     *
     *  @@DESCRIPTION:      An invalid command has been sent to DpIfGen2.
     *
     *  @@ACTION:           Check number and consistency of arguments. For write command the number of bytes is included.
     */
    NAK_COMMAND_ERROR = 0x12FF, ///< 0x12FF

    /** @@NAME:             NAK_WRONG_ARGUMENT
     *
     *  @@DESCRIPTION:      The command for setting  a wrong parameter value.
     *
     *  @@ACTION:           Refer to documentation and check command.
     */
    NAK_WRONG_ARGUMENT = 0x13FF, ///< 0x13FF

    /** @@NAME:             NAK_VINTAGE_DEVICE
     *
     *  @@DESCRIPTION:      An old .dp device (dp2a, dp2b) has been detected. Those devices are not supported yet.
     *
     *  @@ACTION:           Replace .dp device or use board with .dp3
     */
    NAK_VINTAGE_DEVICE = 0x14FF, ///< 0x14FF

    /** @@NAME:             NAK_DATASIZE_MISSMATCH
     *
     *  @@DESCRIPTION:      MEMORY READ:Size of data to transmit is 0 or bigger than the available buffer size of DpIfGen2.
     *                      MEMORY WRITE:Size of data does not match the number of data bytes received.
     *  @@ACTION:           MEMORY READ:Reduce size of data or split transmission in smaller blocks.
     *                      MEMORY WRITE:Check host command and data transmission.
     */
    NAK_DATASIZE_MISSMATCH = 0x15FF, ///< 0x15FF

   /** @@NAME:              NAK_CRC_MISSMATCH
    *
    *  @@DESCRIPTION:       CRC of data received on a UART read command is wrong.
    *
    *  @@ACTION:            Bit error on transmission? Try again.
    */
    NAK_CRC_MISSMATCH = 0x16FF,  ///< 0x16FF

    /** @@NAME:             NAK_CS_IN_ACK_FRAME_MISSMATCH
     *
     *  @@DESCRIPTION:      Checksum of an UART ACK frame is not correct.
     *
     *  @@ACTION:           Bit error on transmission? Try again.
     */
    NAK_CS_IN_ACK_FRAME_MISSMATCH = 0x17FF, ///< 0x17FF

     /** @@NAME:             NAK_NOT_ALLOWED_IN_THIS_CONTEXT
     *
     *  @@DESCRIPTION:      You tried to tristate VCC or UART having not used this device before
     *
     *  @@ACTION:           Before tristate VCC you have to turn on power. Before tristate uart you have to sync first.
     */
    NAK_NOT_ALLOWED_IN_THIS_CONTEXT = 0x18FF, ///< 0x18FF

    /** @@NAME:             NAK_WRONG_FRAME_CONTEXT
     *
     *  @@DESCRIPTION:      The frame just sent to DpIfGen2 is not expected in the command flow.
     *
     *  @@ACTION:           Read user manual about usage of commands.
     */
    NAK_WRONG_FRAME_CONTEXT = 0x19FF, ///< 0x19FF

    /** @@NAME:             NAK_HOST_BUFFER_OVERRUN
     *
     *  @@DESCRIPTION:      Amount of data sent to DpIfGen2 exceeds limit.
     *
     *  @@ACTION:           Reduce data size.
     */
    NAK_HOST_BUFFER_OVERRUN = 0x1AFF, ///< 0x1AFF

    /** @@NAME:             NAK_RELEASE_TRISTAE_FIRST
     *
     *  @@DESCRIPTION:      UART or VCC has been set to tristate(blinking LED)
     *
     *  @@ACTION:           Send VCC_UART_STATUS_CONTROL (CMD68) to release tristate
     */
     NAK_RELEASE_TRISTAE_FIRST  = 0x1BFF, ///< 0x1BFF

    /** @@NAME:             NAK_NO_DATA_AND_END_RECIVED
     *
     *  @@DESCRIPTION:      A DAT frame or END frame (DAT\0) was expected but a different frame was sent to DpIfGen2.
     *
     *  @@ACTION:           Read user manual about usage of commands.
     */
    NAK_NO_DATA_AND_END_RECIVED = 0x1CFF, ///< 0x1CFF

    /** @@NAME:             NAK_NO_TRANSPARENT_UNFORMATED_WRITE_POSSIBLE
     *
     *  @@DESCRIPTION:      Transparent write can only be done in a formatted way.
     *
     *  @@ACTION:           Only use transparent write command in formatted way.
     *                      Please refer to user manual of DpIfGen2.
     */
    NAK_NO_TRANSPARENT_UNFORMATED_WRITE_POSSIBLE  = 0x1DFF, ///< 0x1DFF

    /** @@NAME:             NAK_BUFFER_COMPARE_MISSMATCH
     *
     *  @@DESCRIPTION:      Doing a memory write/read stress test was terminated with compare errors.
     *
     *  @@ACTION:           Check PC GUI or script.
     *                      Should never occur in normal usage (this command should have never been sent).
     */
    NAK_BUFFER_COMPARE_MISSMATCH = 0x1EFF, ///< 0x1EFF

    /** @@NAME:             NAK_BUFFER_SIZE_MISSMATCH
     *
     *  @@DESCRIPTION:      Doing a memory write/read stress test was terminated with write size is not equal to read size.
     *
     *  @@ACTION:           Check PC GUI or script.
     *                      Should never occur in normal usage (this command should have never been sent).
     */
    NAK_BUFFER_SIZE_MISSMATCH = 0x1FFF, ///< 0x1FFF


    /** @@NAME:             NAK_USER_CAP_DISCHARGE_DISABLE
     *
     *  @@DESCRIPTION:      This is a test for obtaining if the user cap discharge jumper is set
     *
     *  @@ACTION:
     */
    NAK_USER_CAP_DISCHARGE_DISABLE   = 0x20FF, ///< 0x20FF


    /** @@NAME:             NAK_WRONG_CALIBRATION_AGUMENT
     *
     *  @@DESCRIPTION:      Argument other than up/down/get/test (1,2,4,5) send
     *
     *  @@ACTION:           Check users manual
     */
    NAK_WRONG_CALIBRATION_AGUMENT = 0x048A, ///< 0x048A


    /** @@NAME:             NAK_NOT_CALIBRATED
     *
     *  @@DESCRIPTION:      dpIfGen2 HW is not calibrated (7V5 +/- 100mV)
     *
     *  @@ACTION:           Please calibrate dpIfgen2 using dpCalibrator
     */
    NAK_NOT_CALIBRATED = 0x048B, ///< 0x048B


    /** @@NAME:             NAK_CALIBRATION_MAXIMUM_REACHED
     *
     *  @@DESCRIPTION:      Upper or lower limit of calibration reached
     *
     *  @@ACTION:           If supply still out of range, get new dpIfgen2 hardware
     */
    NAK_CALIBRATION_MAXIMUM_REACHED = 0x04DA ///< 0x04DA

} Nack_Codes_t;
/// @}

/*
==============================================================================
   4. EXPORTED DATA
==============================================================================
*/

/*
==============================================================================
   5. FUNCTION PROTOTYPES
==============================================================================
*/

/*
==============================================================================
   6. INLINE FUNCTIONS
==============================================================================
*/


#endif /* NACK_CODES_H_ */

/* --- End of File ------------------------------------------------ */
