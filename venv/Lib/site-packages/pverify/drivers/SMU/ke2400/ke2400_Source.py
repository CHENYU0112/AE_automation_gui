from __future__ import annotations

from .ke2400_Source_X import ke2400_Source_I, ke2400_Source_V


class ke2400_Source:
    def __init__(self, parent):
        self._parent = parent
        """:type : pverify.drivers.SMU.ke2400.ke2400_Channel.ke2400_Channel"""
        self._name = self._parent._name

        self.__Voltage = ke2400_Source_V(self)
        self.__Current = ke2400_Source_I(self)

    @property
    def _root(self):
        return self._parent._parent

    @property
    def _inst(self):
        """
        The instrument visa resource
        """
        return self._root._inst

    @property
    def Voltage(self):
        """
        If the source mode is set to voltage, use this property to access the voltage sourcing subclass
        """
        return self.__Voltage

    @property
    def Current(self):
        """
        If the source mode is set to current, use this property to access the current sourcing subclass
        """
        return self.__Current

    def SetOutputEnabled(self, Enabled):
        """
        Configures whether the signal that the power supply produces appears at the output connector.

        :type Enabled: bool
        """
        self._root.LowLevel.Ke24xx_EnableSourceOutput(Enabled)

    def SetVoltageProtectionLevel(self, level=None):
        """
        Sets the overvoltage protection setting of the source output.

        :param level: The voltage protection level.
                      Levels between will be rounded to the next bigger valid level.
        :type level: int|float
        """
        self._root.LowLevel.Ke24xx_ConfigureVSourceProtection(level)
        self._root.CheckError()
