from __future__ import annotations


class ke2450_Measure_ConfigLists:
    def __init__(self, parent):
        self._parent = parent
        """:type : pverify.drivers.SMU.ke2450.ke2450_Measure.ke2450_Measure"""
        self._name = self._parent._name

    @property
    def _vi(self):
        """
        The instrument IO session
        """
        return self._parent._vi

    @property
    def _dllwrap(self):
        """
        The Python dll wrapper module
        """
        return self._parent._dllwrap

    def Create(self, Name):
        """
        Creates an empty measure configuration list

        :param Name: A string that represents the name of a measure configuration list.
        :type Name: str
        """
        self._dllwrap.CreateConfigurationList(self._vi, Name)

    def Delete(self, Name):
        """
        Deletes a measure configuration list

        :param Name: A string that represents the name of a measure configuration list.
        :type Name: str
        """
        self._dllwrap.DeleteConfigurationList(self._vi, Name)

    def DeleteIndex(self, Name, Index):
        """
        Deletes indexed configuration point in the configuration list

        :param Name: A string that represents the name of a measure configuration list.
        :type Name: str
        :param Index: A specific configuration point in the configuration list. 1-based
        :type Index: int|float
        """
        self._dllwrap.DeleteConfigListIndexData(self._vi, Name, int(Index))

    def GetSize(self, Name):
        """
        Returns the size (number of configuration points) of a measure configuration list.

        :param Name: A string that represents the name of a measure configuration list.
        :type Name: str
        """
        return self._dllwrap.GetConfigurationListSize(self._vi, Name)

    def Store(self, Name):
        """
        The active measure settings append to the end of the named configuration list

        :param Name: A string that represents the name of a measure configuration list.
        :type Name: str
        """
        self._dllwrap.AppendToConfigurationList(self._vi, Name)

    def StoreIndex(self, Name, Index):
        """
        Store the active measure settings to a configuration point in a configuration list

        :param Name: A string that represents the name of a measure configuration list.
        :type Name: str
        :param Index: A specific configuration point in the configuration list. 1-based
        :type Index: int|float
        """
        self._dllwrap.StoreToConfigurationList(self._vi, Name, int(Index))

    def RecallIndex(self, Name, Index):
        """
        To recall the settings stored in a specific configuration point on a specific configuration list

        :param Name: A string that represents the name of a measure configuration list.
        :type Name: str
        :param Index: A specific configuration point in the configuration list. 1-based
        :type Index: int|float
        """
        self._dllwrap.RecallConfigurationPoint(self._vi, Name, int(Index))
