from __future__ import annotations


class ke2450_DirectIO:
    def __init__(self, parent):
        self._parent = parent
        """:type : pverify.drivers.SMU.ke2450.ke2450.ke2450"""

    @property
    def _vi(self):
        """
        The instrument IO session
        """
        return self._parent._vi

    @property
    def _dllwrap(self):
        """
        The Python dll wrapper module
        """
        return self._parent._dllwrap

    def Write(self, Command):
        """
        Writes a command to the instrument. (term char is not required to append)
        """
        # try:
        #     self._parent.DevUtils.visa_mbr.write(Command)
        #     if "?" not in Command:
        #         self._parent.CheckError()
        # except Exception as e:
        #     self._parent.CheckError()
        #     raise
        self._dllwrap.WriteString(self._vi, Command)

    def Read(self, BufferSize=16384):
        """
        Returns a response from the instrument.

        Expect a 'query interrupted error' if you do a read without a write before.
        """
        # try:
        #     return self._parent.DevUtils.visa_mbr.read()
        # except Exception as e:
        #     self._parent.CheckError()
        #     raise
        return self._dllwrap.ReadString(self._vi, BufferSize)

    def Query(self, Command, BufferSize=16384):
        """
        Writes a command to the instrument and returns its response.
        """
        # try:
        #     return self._parent.DevUtils.visa_mbr.query(Command)
        # except Exception as e:
        #     self._parent.CheckError()
        #     raise
        return self._dllwrap.Query(self._vi, Command, BufferSize)
