from __future__ import annotations


class ke2450_Source_ConfigLists:
    def __init__(self, parent):
        self._parent = parent
        """:type : pverify.drivers.SMU.ke2450.ke2450_Source.ke2450_Source"""
        self._name = self._parent._name

    @property
    def _vi(self):
        """
        The instrument IO session
        """
        return self._parent._vi

    @property
    def _dllwrap(self):
        """
        The Python dll wrapper module
        """
        return self._parent._dllwrap

    def Create(self, Name):
        """
        Creates an empty configuration list for sourcing.

        :param Name: A string that represents the name of a source configuration list
        :type Name: str
        """
        self._dllwrap.CreateConfigurationList2(self._vi, Name)

    def Delete(self, Name):
        """
        Deletes a source configuration list

        :param Name: A string that represents the name of a source configuration list
        :type Name: str
        """
        self._dllwrap.DeleteConfigurationList2(self._vi, Name)

    def DeleteIndex(self, Name, Index):
        """
        Deletes only selected index configuration in a source configuration list.

        :param Name: A string that represents the name of a source configuration list
        :type Name: str
        :param Index: A specific configuration point in the configuration list. 1-based
        :type Index: int|float
        """
        self._dllwrap.DeleteConfigListIndexedData(self._vi, Name, int(Index))

    def GetSize(self, Name):
        """
        Returns the size (number of configuration points) of a source configuration list

        :param Name: A string that represents the name of a source configuration list
        :type Name: str
        """
        return self._dllwrap.GetConfigurationListSize2(self._vi, Name)

    def Store(self, Name):
        """
        Appends active settings to the named configuration list at the size + 1 location (the end of the list).

        :param Name: A string that represents the name of a source configuration list
        :type Name: str
        """
        self._dllwrap.AppendToConfigurationList2(self._vi, Name)

    def StoreIndex(self, Name, Index):
        """
        Stores the active settings into the named configuration list

        :param Name: A string that represents the name of a source configuration list
        :type Name: str
        :param Index: A specific configuration point in the configuration list. 1-based
        :type Index: int|float
        """
        self._dllwrap.StoreToConfigurationList2(self._vi, Name, int(Index))

    def RecallIndex(self, Name, Index):
        """
        Recalls a specific configuration point in a specific source configuration list.

        :param Name: A string that represents the name of a source configuration list
        :type Name: str
        :param Index: A specific configuration point in the configuration list. 1-based
        :type Index: int|float
        """
        self._dllwrap.RecallConfigurationListPoint(self._vi, Name, int(Index))
