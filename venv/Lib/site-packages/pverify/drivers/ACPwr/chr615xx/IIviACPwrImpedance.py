# ===========================================================================
# Copyright (C) 2012-2013 Infineon Technologies AG
# All rights reserved.
# ===========================================================================
#
# ===========================================================================
# This document contains proprietary information of Infineon Technologies AG.
# Passing on and copying of this document, and communication of its contents
# is not permitted without Infineon's prior written authorisation.
# ===========================================================================
#
# -------------------------------------------------------------------------------
# Revision       : $Rev$
# Date           : $Date$
# Last change by : $Author$
# -------------------------------------------------------------------------------
"""
Module docstring
"""

from __future__ import annotations

from . import IIviACPwrBase


class IIviACPwrImpedance(IIviACPwrBase.IIviACPwrBase):
    """IVI ACPwr class-compliant Impedance interface.

    NOTE:
        Attributes/Methods marked with '#' do not exist for this instrument.
        Attributes/Methods marked with '*' are specific for this instrument.
        !Please consider when trying to program instrument independent.


    Attributes:
        Enabled [bool]
            When set to True, this property allows the output impedance
            resistive and output impedance inductive property values to affect the power source output.

        Inductive [float]
            The inductive output impedance. This value affects the power
            source output when the output impedance Enabled property is set to True.

        Resistive [float]
            The resistive output impedance. This value affects the power source
            output when the output impedance Enabled property is set to True.

    Methods:
        Configure (Enabled, ResistiveValue, InductiveValue):
            Configures the output impedance Enabled, Resistive and Inductive properties.

        QueryCapabilities (ResistiveMin, ResistiveMax, InductiveMin, InductivMax):
            Returns the minimum and maximum resistive and inductive impedance
            values supported by the power source for the present output configuration.


    """

    def __init__(self, interface):
        IIviACPwrBase.IIviACPwrBase.__init__(self, interface)

    # Read-write dependent properties
    @property
    def Inductive(self):
        """
        The inductive output impedance. This value affects the power source
        output when the output impedance Enabled property is set to True.

        :rtype: float
        """
        answ = self.interface.vi_query(":OUTP:IMP:IND?", "%s\n", "%f")
        self.GetError()
        return answ

    @Inductive.setter
    def Inductive(self, value):
        """
        The inductive output impedance. This value affects the power source
        output when the output impedance Enabled property is set to True.

        :type value: float
        """
        self.interface.vi_write(f":OUTP:IMP:IND {value:.1f}")
        self.GetError()

    @property
    def Enabled(self):
        """
        When set to True, this property allows the output impedance resistive
        and output impedance inductive property values to affect the power
        source output.

        :rtype: bool
        """
        answ = self.interface.vi_query(":OUTP:IMP:STAT?", "%s\n", "%s")
        self.GetError()
        return answ == "ON"

    @Enabled.setter
    def Enabled(self, value):
        """
        When set to True, this property allows the output impedance resistive
        and output impedance inductive property values to affect the power
        source output.

        :type value: bool
        """
        if bool(value):
            self.interface.vi_write(":OUTP:IMP:STAT ON")
        else:
            self.interface.vi_write(":OUTP:IMP:STAT OFF")
        self.GetError()

    @property
    def Resistive(self):
        """
        The resistive output impedance. This value affects the power source
        output when the output impedance Enabled property is set to True.

        :rtype: float
        """
        answ = self.interface.vi_query(":OUTP:IMP:RES?", "%s\n", "%f")
        self.GetError()
        return answ

    @Resistive.setter
    def Resistive(self, value):
        """
        The resistive output impedance. This value affects the power source
        output when the output impedance Enabled property is set to True.

        :type value: float
        """
        self.interface.vi_write(f":OUTP:IMP:RES {value:.2f}")
        self.GetError()

    # Methods
    def Configure(self, Enabled, ResistiveValue, InductiveValue):
        """
        Configures the output impedance Enabled, Resistive and Inductive
        properties.

        :param Enabled: Sets the output impedance Enabled property.
        :type Enabled: bool
        :param ResistiveValue: Sets the output impedance Resistive property. Range: 0-1 Ohm
        :type ResistiveValue: float
        :param InductiveValue: Sets the output impedance Inductive property. Range: 0-1 mH
        :type InductiveValue: float
        """
        self.Resistive = ResistiveValue
        self.Inductive = InductiveValue
        self.Enabled = Enabled
        return

    def QueryCapabilities(self):
        """
        Returns the minimum and maximum resistive and inductive impedance
        values supported by the power source for the present output
        configuration.

        :rtype: returns a list from Resistive and Inductive Min/Max values:
                (ResistiveMin, ResistiveMax, InductiveMin, InductiveMax)
        """
        ResistiveMin = 0
        ResistiveMax = 1
        InductiveMin = 0
        InductiveMax = 0.001
        return ResistiveMin, ResistiveMax, InductiveMin, InductiveMax
