# ===========================================================================
# Copyright (C) 2012-2013 Infineon Technologies AG
# All rights reserved.
# ===========================================================================
#
# ===========================================================================
# This document contains proprietary information of Infineon Technologies AG.
# Passing on and copying of this document, and communication of its contents
# is not permitted without Infineon's prior written authorisation.
# ===========================================================================
#
# -------------------------------------------------------------------------------
# Revision       : $Rev$
# Date           : $Date$
# Last change by : $Author$
# -------------------------------------------------------------------------------
"""
Module docstring
"""

from __future__ import annotations

from . import IIviACPwrBase


class IIviACPwrVoltageProtection(IIviACPwrBase.IIviACPwrBase):
    """IVI ACPwr class-compliant Voltage Protection interface.

    NOTE:
        Attributes/Methods marked with '#' do not exist for this instrument.
        Attributes/Methods marked with '*' are specific for this instrument.
        !Please consider when trying to program instrument independent.


    Attributes:
        #OverEnabled [bool]
            When set to True, voltage protection trips when the output
            voltage is above the Over Voltage limit.

        OverLimit [float]
            Specifies the output over voltage protection limit value.

        #Tripped [bool]
            Indicates if voltage protection has tripped.

        #UnderEnabled [bool]
            When set to True, voltage protection trips when the output
            voltage is below the Under Voltage Limit.

        #UnderLimit [float]
            Specifies the output under voltage protection limit value.

    Methods:
        Configure (UnderEnabled, OverEnabled, UnderLimit, OverLimit):
            Configures the Under Voltage Enabled, Over Voltage Enabled,
            Under Voltage Limit and Over Voltage Limit properties.

        Reset
            Resets the voltage protection state of the power source after
            oltage protection has tripped.

    """

    def __init__(self, interface):
        IIviACPwrBase.IIviACPwrBase.__init__(self, interface)

    # Read only dependent properties
    @property
    def Tripped(self):
        """
        Indicates if voltage protection has tripped.
        """
        raise NotImplementedError

    # Read-write dependent properties
    @property
    def OverEnabled(self):
        """
        When set to True, voltage protection trips when the output voltage is
        above the Over Voltage limit.
        """
        return True

    @OverEnabled.setter
    def OverEnabled(self, value):
        """
        When set to True, voltage protection trips when the output voltage is
        above the Over Voltage limit.
        """
        raise NotImplementedError

    @property
    def OverLimit(self):
        """
        Specifies the output over voltage protection limit value.

        :rtype: float
        """
        answ = self.interface.vi_query(":VOLT:LIM:AC?", "%s\n", "%f")
        self.GetError()
        return answ

    @OverLimit.setter
    def OverLimit(self, value):
        """
        Specifies the output over voltage protection limit value.

        :type value: float
        """
        self.interface.vi_write(f":VOLT:LIM:AC {value:f}")
        self.GetError()

    @property
    def UnderEnabled(self):
        """
        When set to True, voltage protection trips when the output voltage is
        below the Under Voltage Limit.
        """
        return True

    @UnderEnabled.setter
    def UnderEnabled(self, value):
        """
        When set to True, voltage protection trips when the output voltage is
        below the Under Voltage Limit.
        """
        raise NotImplementedError

    @property
    def UnderLimit(self):
        """
        Specifies the output under voltage protection limit value.
        """
        return 0

    @UnderLimit.setter
    def UnderLimit(self, value):
        """
        Specifies the output under voltage protection limit value.
        """
        raise NotImplementedError

    # Methods
    def Configure(self, UnderEnabled, OverEnabled, UnderLimit, OverLimit):
        """
        Configures the Under Voltage Enabled, Over Voltage Enabled, Under
        Voltage Limit and Over Voltage Limit properties.

        :param UnderEnabled:
            Sets the Under Voltage Enabled property.
        :type UnderEnabled: bool

        :param OverEnabled:
            Sets the Over Voltage Enabled property.
        :type OverEnabled: bool

        :param UnderLimit:
            Sets the Under Voltage Limit property.
        :type UnderLimit: float

        :param OverLimit:
            Sets the Over Voltage Limit property.
        :type OverLimit: float
        """
        # self.UnderEnabled = UnderEnabled
        # self.OverEnabled = OverEnabled
        # self.UnderLimit = UnderLimit
        self.OverLimit = OverLimit

    def Reset(self):
        """
        Resets the voltage protection state of the power source after voltage
        protection has tripped.
        """
        self.interface.vi_write(":OUTP:STAT OFF")
        self.interface.vi_write(":OUTP:PROT:CLE")
        self.GetError()
