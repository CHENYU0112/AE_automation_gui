# ===========================================================================
# Copyright (C) 2012-2013 Infineon Technologies AG
# All rights reserved.
# ===========================================================================
#
# ===========================================================================
# This document contains proprietary information of Infineon Technologies AG.
# Passing on and copying of this document, and communication of its contents
# is not permitted without Infineon's prior written authorisation.
# ===========================================================================
#
# -------------------------------------------------------------------------------
# Revision       : $Rev$
# Date           : $Date$
# Last change by : $Author$
# -------------------------------------------------------------------------------
"""
Module docstring
"""

from __future__ import annotations

from pverify.drivers.BaseInstrument import InstrumentError

from . import IIviACPwrEnums


class IIviACPwrBase:
    """Common methods/properties for all interfaces"""

    def __init__(self, interface):
        self.interface = interface
        self.Enums = IIviACPwrEnums

    def GetError(self):
        """Return True if one or more errors occurred, False otherwise.
        Additionally occurred error are logged."""
        errorList = []
        error = 1
        while error:
            ret = self.interface.vi_query(":SYST:ERR?").strip().split(",")
            error = 1 if int(ret[0]) else 0
            if error:
                errMsg = "ErrCode:%d, ErrMsg:'%s'" % (int(ret[0]), str(ret[1]).strip())
                errorList.append(errMsg)
                self.interface._Log.error(errMsg)
        if errorList:
            raise InstrumentError(str(errorList))
