# ===========================================================================
# Copyright (C) 2012-2013 Infineon Technologies AG
# All rights reserved.
# ===========================================================================
#
# ===========================================================================
# This document contains proprietary information of Infineon Technologies AG.
# Passing on and copying of this document, and communication of its contents
# is not permitted without Infineon's prior written authorisation.
# ===========================================================================
#
# -------------------------------------------------------------------------------
# Revision       : $Rev$
# Date           : $Date$
# Last change by : $Author$
# -------------------------------------------------------------------------------
"""
Module docstring
"""

from __future__ import annotations

from . import IIviACPwrBase


class IIviACPwrExternalSync(IIviACPwrBase.IIviACPwrBase):
    """IVI ACPwr class-compliant external Sync interface.

    NOTE:
        Attributes/Methods marked with '#' do not exist for this instrument.
        Attributes/Methods marked with '*' are specific for this instrument.
        !Please consider when trying to program instrument independent.

    Attributes:
        Enabled [bool]
            Specifies whether to enable or disable synchronization to an external synchronization signal.

        Locked [bool]
            Indicates if the power source is locked to the external synchronization signal.

        PhaseOffset [float]
            Specifies the phase angle offset of the power sources output
            relative to the external synchronization signal.

    Methods:
        Configure (Enabled, PhaseOffset):
            Configures the external synchronization Enabled and Phase Offset properties.
    """

    def __init__(self, interface):
        IIviACPwrBase.IIviACPwrBase.__init__(self, interface)

    # Read only dependent properties
    @property
    def Locked(self):
        """
        Indicates if the power source is locked to the external
        synchronization signal.
        """
        raise NotImplementedError

    # Read-write dependent properties
    @property
    def Enabled(self):
        """
        Specifies whether to enable or disable synchronization to an external
        synchronization signal.
        """
        raise NotImplementedError

    @Enabled.setter
    def Enabled(self, value):
        """
        Specifies whether to enable or disable synchronization to an external
        synchronization signal.
        """
        raise NotImplementedError

    @property
    def PhaseOffset(self):
        """
        Specifies the phase angle offset of the power sources output relative
        to the external synchronization signal.
        """
        raise NotImplementedError

    @PhaseOffset.setter
    def PhaseOffset(self, value):
        """
        Specifies the phase angle offset of the power sources output relative
        to the external synchronization signal.
        """
        raise NotImplementedError

    # Methods
    def Configure(self, Enabled, PhaseOffset):
        """
        Configures the external synchronization Enabled and Phase Offset
        properties.

        Parameter "Enabled"
            Sets the external synchronization Enabled property.

        Parameter "PhaseOffset"
            Sets the external synchronization PhaseOffset property.

        """
        raise NotImplementedError
