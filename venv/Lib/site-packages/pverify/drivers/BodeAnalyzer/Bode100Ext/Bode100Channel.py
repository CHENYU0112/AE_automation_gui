from __future__ import annotations

from . import Bode100Enums


class Bode100Channel:
    def __init__(self, BodeDoc, MeasurementObj, Index):
        self.Enums = Bode100Enums
        self._BodeDoc = BodeDoc
        self.__index = Index
        self._MeasurementObj = MeasurementObj

    @property
    def Probe(self):
        return int(self._MeasurementObj.DeviceSettings.Channels[self.__index].Probe)

    @Probe.setter
    def Probe(self, value):
        """
        Get or sets the transmission ratio of the probe.

            - 1  : 1   to 1
            - 10 : 10  to 1
            - 100: 100 to 1

        :type value: Bode100Enums.ExternalProbe
        """
        self._MeasurementObj.DeviceSettings.Channels[self.__index].Probe = int(value)

    @property
    def Termination50Ohm(self):
        return bool(self._MeasurementObj.DeviceSettings.Channels[self.__index].Termination50Ohm)

    @Termination50Ohm.setter
    def Termination50Ohm(self, value):
        """
        Gets or sets the termination of the channel.

        If the value is true, the channel has a 50Ohm termination otherwise it
        operates in the high impedance mode (1 MOhm input impedance).

        :type value: bool
        """
        self._MeasurementObj.DeviceSettings.Channels[self.__index].Termination50Ohm = int(bool(value))
