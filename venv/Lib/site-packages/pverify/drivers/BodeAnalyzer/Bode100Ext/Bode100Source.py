from __future__ import annotations

from . import Bode100Enums


class Bode100Sources(list):
    def __init__(self, BodeDoc, MeasurementObj):
        super().__init__()
        self.Enums = Bode100Enums
        self._BodeDoc = BodeDoc
        self._MeasurementObj = MeasurementObj

        self.append(Bode100Source(self._BodeDoc, self._MeasurementObj, 0))

    @property
    def Level(self):
        return float(self._MeasurementObj.DeviceSettings.Sources.Level)

    @Level.setter
    def Level(self, value):
        """
        Gets or sets the output level of both sources.

        The Level property changes the output level of all sources in the list.
        It is not possible to have different levels for each source.

        The value has the unit dBm.

        The levels should be in the range of

            - Minimum: -27 dBm
            - Maximum: 13 dBm

        """
        self._MeasurementObj.DeviceSettings.Sources.Level = float(value)


class Bode100Source:
    def __init__(self, BodeDoc, MeasurementObj, Index):
        self.Enums = Bode100Enums
        self._BodeDoc = BodeDoc
        self.__index = Index
        self._MeasurementObj = MeasurementObj
