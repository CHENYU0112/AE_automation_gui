# C:\Program Files\OMICRON\BodeAnalyzerSuite\Documentation\Bode_Analyzer_Automation_Reference.chm

# Required to communicate with COM objects
from __future__ import annotations

import win32com.client

from . import Bode100Enums, Bode100Measurements

# Constants:
MAX_DBM = 13
MIN_DBM = -27


class Bode100:
    def __init__(self):
        self.drivername = "Bode100"
        self.serialnumber = ""
        self.devicetype = ""
        self.__initialized = False
        self.IDN = "Omicron Bode100"
        self.Enums = Bode100Enums

        # By using win32com.client the bode app for further use is created
        self._BodeApp = win32com.client.Dispatch("OMICRON.BodeAnalyzer")
        self._BodeDoc = self._BodeApp.Document

        self.Measurements = Bode100Measurements.Bode100Measurements(self._BodeDoc)
        """:type : list[Bode100Measurement.Bode100Measurement] | Bode100Measurements.Bode100Measurements"""

    def Initialize(self, Resourcename="", IdQuery=0, Reset=0, Optionstring=""):
        """
        Connects to the Bode100 or Bode200 device.
        """
        # Looking for a device and selecting an available one
        # If a device is found (and initialized) the serial number is written into the command-line interface
        self._BodeDoc.Devices.ScanForDevices()
        if self._BodeDoc.Devices.Count > 0:
            print("Initializing the Device.\nThis may take about 30 seconds!\n")
            self._BodeDoc.Devices[0].SelectAndInit()
            self.serialnumber = self._BodeDoc.SelectedDevice.SerialNumber
            self.devicetype = ["Bode100", "Unknown"][self._BodeDoc.SelectedDevice.DeviceType]

        else:  # If no device is found, display an error
            msg = "Could not connect/initialize Bode100"
            raise Exception(msg)

        self.__initialized = True

    def Close(self):
        """Resets the device and closes the connection"""
        self.__initialized = False
        self.Reset()
        self._BodeApp.Quit()

    def Reset(self):
        """Resets the device (Output off and clear measurements)"""
        self._BodeDoc.SelectedDevice.SwitchSource1On(False)
        self._BodeDoc.Measurements.Clear()
