from __future__ import annotations

from .kedmm7510 import *


class IIviDmmTemperature:
    def __init__(self, root):
        self.root = root
        """:type : pverify.drivers.Dmm.kedmm7510.IIviDmm.IIviDmm"""

        from .IIviDmmRTD import IIviDmmRTD

        self.RTD = IIviDmmRTD(self.root)

        from .IIviDmmThermocouple import IIviDmmThermocouple

        self.Thermocouple = IIviDmmThermocouple(self.root)

        from .IIviDmmThermistor import IIviDmmThermistor

        self.Thermistor = IIviDmmThermistor(self.root)

    @property
    def TransducerType(self):
        return self.root.dllwrap.GetAttributeViInt32(None, IVI_CLASS_PUBLIC_ATTR_BASE + 201)

    @TransducerType.setter
    def TransducerType(self, value):
        """
        The type of device used to measure the temperature. This property affects
        instrument behavior only when Function is set to a temperature measurement.
        """
        self.root.dllwrap.SetAttributeViInt32(None, IVI_CLASS_PUBLIC_ATTR_BASE + 201, value)
