#######################################################
#                                                     #
#                                                     #
#                  Testsetup DEFAULT                  #
#                                                     #
#                                                     #
#######################################################
from __future__ import annotations

from pverify.drivers.Scope.lcscope import IIviScope, lcscope
from pverify.drivers.SimplifiedLabInstruments import *


class Instruments:
    """Common container for all required and connected instruments.
    If any of these instruments are not available an error will be raised.
    Please assign 'None' to instruments that are not connected/switched on."""

    def __init__(self):
        self.Scope = Scope_1()
        self.DCPowerSupply = None
        self.DCPowerSupply2 = None
        self.ProgLoad = None
        self.PowerAnalyzer = None
        self.Multimeter_1 = None
        self.FunctionGenerator = None
        self.TemperatureChamber = None


class Scope_1:
    def __init__(self):
        self.visa_address = "GPIB0::1::INSTR"
        self.driver = SimpleScope(IIviScope())  # Simplified driver used
        self.args = (self.visa_address, 1, 1, "simulate=true")
        # self.args overwrites the default arguments IIviScope.Initialize(ResourceName, IdQuery, Reset,
        # OptionString="") is called with.
        # The defaults are IIviScope.Initialize(<visa_address>, 1, 1, "")


class Scope_2:
    def __init__(self):
        self.visa_address = "GPIB0::2::INSTR"
        self.driver = lcscope()  # Low level driver used
        self.args = (self.visa_address, 1, 1, "simulate=true")
        # self.args overwrites the default arguments IIviScope.Initialize(ResourceName, IdQuery, Reset,
        # OptionString="") is called with.
        # The defaults are IIviScope.Initialize(<visa_address>, 1, 1, "")
