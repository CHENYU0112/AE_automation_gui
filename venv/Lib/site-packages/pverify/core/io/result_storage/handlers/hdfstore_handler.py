from __future__ import annotations

from typing import TYPE_CHECKING

from pverify.core.io.converters.dlh5_to_hdfstore import dlh5_to_hdfstore
from pverify.core.io.result_storage.result_handler import ConversionHandler

if TYPE_CHECKING:
    from pathlib import Path


class hdfstore_handler(ConversionHandler):
    """
    Creates a Pandas HDFStore result file
    """

    def __init__(self, **kwargs):
        super().__init__(enabled_for=["dlh5_handler"])

    def convert(self, file: Path):
        dst_data = self.config.get("dst_data")
        dst_wf = self.config.get("dst_wf")
        complevel = int(self.config.get("complevel"))
        complib = self.config.get("complib")

        if dst_data is None:
            dst_data = self.resultdir / "HDFStore_data.h5"
        if dst_wf is None:
            dst_wf = self.resultdir / "HDFStore_wf.h5"

        dlh5_to_hdfstore(
            filepath_in=file, filepath_out=dst_data, filepath_out_wf=dst_wf, complevel=complevel, complib=complib
        )
