from __future__ import annotations

from pverify.core.hooks.hook_decorator import HookDecorator


class LabDoE:
    class PreInstrConnect(HookDecorator):
        """
        Functions decorated with this hook will be executed before instruments are connected
        """

        def __init__(self, **kwargs):
            super().__init__(hook_name="DoE.Lab.PreInstrConnect", **kwargs)

    class PostInstrConnect(HookDecorator):
        """
        Functions decorated with this hook will be executed after instruments were connected successfully
        """

        def __init__(self, **kwargs):
            super().__init__(hook_name="DoE.Lab.PostInstrConnect", **kwargs)

    class PreInstrDisconnect(HookDecorator):
        """
        Functions decorated with this hook will be executed before instruments are disconnected
        """

        def __init__(self, **kwargs):
            super().__init__(hook_name="DoE.Lab.PreInstrDisconnect", **kwargs)

    class PostInstrDisconnect(HookDecorator):
        """
        Functions decorated with this hook will be executed after instruments were disconnected successfully
        """

        def __init__(self, **kwargs):
            super().__init__(hook_name="DoE.Lab.PostInstrDisconnect", **kwargs)
