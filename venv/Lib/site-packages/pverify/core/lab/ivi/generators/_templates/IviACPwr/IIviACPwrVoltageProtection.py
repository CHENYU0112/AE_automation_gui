from __future__ import annotations


class IIviACPwrVoltageProtection:
    def __init__(self):
        pass

    @property
    def OverEnabled(self):
        raise NotImplementedError

    @OverEnabled.setter
    def OverEnabled(self, value):
        """
        When set to True, voltage protection trips when the output voltage is above the
        Over Voltage limit.
        """
        raise NotImplementedError

    @property
    def OverLimit(self):
        raise NotImplementedError

    @OverLimit.setter
    def OverLimit(self, value):
        """
        Specifies the output over voltage protection limit value.
        """
        raise NotImplementedError

    @property
    def UnderEnabled(self):
        raise NotImplementedError

    @UnderEnabled.setter
    def UnderEnabled(self, value):
        """
        When set to True, voltage protection trips when the output voltage is below the
        Under Voltage Limit.
        """
        raise NotImplementedError

    @property
    def UnderLimit(self):
        raise NotImplementedError

    @UnderLimit.setter
    def UnderLimit(self, value):
        """
        Specifies the output under voltage protection limit value.
        """
        raise NotImplementedError

    @property
    def Tripped(self):
        raise NotImplementedError

    def Configure(self, UnderEnabled, OverEnabled, UnderLimit, OverLimit):
        """
        Configures the Under Voltage Enabled, Over Voltage Enabled, Under Voltage Limit
        and Over Voltage Limit properties.

        :param UnderEnabled: Sets the Under Voltage Enabled property.
        :type UnderEnabled: bool
        :param OverEnabled: Sets the Over Voltage Enabled property.
        :type OverEnabled: bool
        :param UnderLimit: Sets the Under Voltage Limit property.
        :type UnderLimit: float
        :param OverLimit: Sets the Over Voltage Limit property.
        :type OverLimit: float
        """
        raise NotImplementedError

    def Reset(self):
        """
        Resets the voltage protection state of the power source after voltage protection
        has tripped.
        """
        raise NotImplementedError
