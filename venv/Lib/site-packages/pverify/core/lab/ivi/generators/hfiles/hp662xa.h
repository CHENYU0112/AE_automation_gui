/****************************************************************************
 *                       HP 662XA DC Power Supplies
 *---------------------------------------------------------------------------
 *  (c) 2000-2013, National Instruments, Corporation.  All Rights Reserved.
 *---------------------------------------------------------------------------
 *
 * Title:    hp662xa.h
 * Purpose:  HP 662XA DC Power Supplies
 *           instrument driver declarations.
 *
 ****************************************************************************/

#ifndef __HP662XA_HEADER
#define __HP662XA_HEADER

#include <ivi.h>
#include <ividcpwr.h>

#if defined(__cplusplus) || defined(__cplusplus__)
extern "C" {
#endif

/****************************************************************************
 *----------------- Instrument Driver Revision Information -----------------*
 ****************************************************************************/
#define HP662XA_MAJOR_VERSION                3     /* Instrument driver major version   */
#define HP662XA_MINOR_VERSION                0     /* Instrument driver minor version   */

#define HP662XA_CLASS_SPEC_MAJOR_VERSION     2     /* Class specification major version */
#define HP662XA_CLASS_SPEC_MINOR_VERSION     0     /* Class specification minor version */

#define HP662XA_SUPPORTED_INSTRUMENT_MODELS  "6621A,6622A,6623A,6624A,6625A,6626A,6627A,6628A,6629A"

#define HP662XA_DRIVER_VENDOR                "National Instruments"

#ifdef _IVI_mswin64_
#define HP662XA_DRIVER_DESCRIPTION           "662xA series of DC Power supplies [Compiled for 64-bit]"
#else
#define HP662XA_DRIVER_DESCRIPTION           "662xA series of DC Power supplies"
#endif

#define HP662XA_IO_SESSION_TYPE              "VISA"
/****************************************************************************
 *------------------------------ Useful Macros -----------------------------*
 ****************************************************************************/

    /*- Defined values for rangeType parameter of function -----------------*/
    /*- ConfigureOutputRange -----------------------------------------------*/
#define HP662XA_VAL_RANGE_CURRENT               IVIDCPWR_VAL_RANGE_CURRENT
#define HP662XA_VAL_RANGE_VOLTAGE               IVIDCPWR_VAL_RANGE_VOLTAGE

    /*- Defined values for outputState parameter of function ---------------*/
    /*- QueryOutputState ---------------------------------------------------*/
#define HP662XA_VAL_OUTPUT_CONSTANT_VOLTAGE     IVIDCPWR_VAL_OUTPUT_CONSTANT_VOLTAGE
#define HP662XA_VAL_OUTPUT_CONSTANT_CURRENT     IVIDCPWR_VAL_OUTPUT_CONSTANT_CURRENT
#define HP662XA_VAL_OUTPUT_OVER_VOLTAGE         IVIDCPWR_VAL_OUTPUT_OVER_VOLTAGE
#define HP662XA_VAL_OUTPUT_OVER_CURRENT         IVIDCPWR_VAL_OUTPUT_OVER_CURRENT
#define HP662XA_VAL_OUTPUT_UNREGULATED          IVIDCPWR_VAL_OUTPUT_UNREGULATED
#define HP662XA_VAL_OUTPUT_OVER_TEMP           (IVIDCPWR_VAL_OUTPUT_STATE_SPECIFIC_EXT_BASE + 1L)
#define HP662XA_VAL_OUTPUT_CURRENT_LIMIT       (IVIDCPWR_VAL_OUTPUT_STATE_SPECIFIC_EXT_BASE + 2L)
#define HP662XA_VAL_COUPLED_PARAMETER          (IVIDCPWR_VAL_OUTPUT_STATE_SPECIFIC_EXT_BASE + 3L)

    /*- Defined values for measurementType parameter of function -----------*/
    /*- Measure ------------------------------------------------------------*/
#define HP662XA_VAL_MEASURE_CURRENT             IVIDCPWR_VAL_MEASURE_CURRENT
#define HP662XA_VAL_MEASURE_VOLTAGE             IVIDCPWR_VAL_MEASURE_VOLTAGE

/****************************************************************************
 *---------------------------- Attribute Defines ---------------------------*
 ****************************************************************************/

    /*- IVI Inherent Instrument Attributes ---------------------------------*/

        /* User Options */
#define HP662XA_ATTR_RANGE_CHECK                   IVI_ATTR_RANGE_CHECK                    /* ViBoolean */
#define HP662XA_ATTR_QUERY_INSTRUMENT_STATUS       IVI_ATTR_QUERY_INSTRUMENT_STATUS        /* ViBoolean */
#define HP662XA_ATTR_CACHE                         IVI_ATTR_CACHE                          /* ViBoolean */
#define HP662XA_ATTR_SIMULATE                      IVI_ATTR_SIMULATE                       /* ViBoolean */
#define HP662XA_ATTR_RECORD_COERCIONS              IVI_ATTR_RECORD_COERCIONS               /* ViBoolean */

#define HP662XA_ATTR_DRIVER_SETUP                  IVI_ATTR_DRIVER_SETUP                   /* ViString */
#define HP662XA_ATTR_INTERCHANGE_CHECK             IVI_ATTR_INTERCHANGE_CHECK              /* ViBoolean */

        /* Instrument Capabilities */
#define HP662XA_ATTR_CHANNEL_COUNT                 IVI_ATTR_CHANNEL_COUNT                  /* ViInt32,  read-only  */
#define HP662XA_ATTR_GROUP_CAPABILITIES            IVI_ATTR_GROUP_CAPABILITIES             /* ViString, read-only */

        /* Driver Information  */
#define HP662XA_ATTR_SPECIFIC_DRIVER_PREFIX        IVI_ATTR_SPECIFIC_DRIVER_PREFIX         /* ViString, read-only  */
#define HP662XA_ATTR_SUPPORTED_INSTRUMENT_MODELS   IVI_ATTR_SUPPORTED_INSTRUMENT_MODELS    /* ViString, read-only  */
#define HP662XA_ATTR_INSTRUMENT_MANUFACTURER       IVI_ATTR_INSTRUMENT_MANUFACTURER        /* ViString, read-only  */
#define HP662XA_ATTR_INSTRUMENT_MODEL              IVI_ATTR_INSTRUMENT_MODEL               /* ViString, read-only  */
#define HP662XA_ATTR_INSTRUMENT_FIRMWARE_REVISION  IVI_ATTR_INSTRUMENT_FIRMWARE_REVISION   /* ViString, read-only  */
#define HP662XA_ATTR_SPECIFIC_DRIVER_REVISION      IVI_ATTR_SPECIFIC_DRIVER_REVISION       /* ViString, read-only  */
#define HP662XA_ATTR_SPECIFIC_DRIVER_VENDOR        IVI_ATTR_SPECIFIC_DRIVER_VENDOR         /* ViString, read-only  */
#define HP662XA_ATTR_SPECIFIC_DRIVER_DESCRIPTION   IVI_ATTR_SPECIFIC_DRIVER_DESCRIPTION    /* ViString, read-only  */
#define HP662XA_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION /* ViInt32, read-only */
#define HP662XA_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION /* ViInt32, read-only */

        /* Advanced Session Information */
#define HP662XA_ATTR_LOGICAL_NAME                  IVI_ATTR_LOGICAL_NAME                   /* ViString, read-only  */
#define HP662XA_ATTR_IO_RESOURCE_DESCRIPTOR        IVI_ATTR_IO_RESOURCE_DESCRIPTOR            /* ViString, read-only  */

    /*- Instrument-Specific Attributes -------------------------------------*/

    /*- Basic Instrument Operations ----------------------------------------*/
#define HP662XA_ATTR_VOLTAGE_LEVEL             IVIDCPWR_ATTR_VOLTAGE_LEVEL           /* ViReal64,  multi-channel, volts */
#define HP662XA_ATTR_OVP_ENABLED               IVIDCPWR_ATTR_OVP_ENABLED             /* ViBoolean, multi-channel        */
#define HP662XA_ATTR_OVP_LIMIT                 IVIDCPWR_ATTR_OVP_LIMIT               /* ViReal64,  multi-channel, volts */
#define HP662XA_ATTR_CURRENT_LIMIT_BEHAVIOR    IVIDCPWR_ATTR_CURRENT_LIMIT_BEHAVIOR  /* ViInt32,   multi-channel        */
#define HP662XA_ATTR_CURRENT_LIMIT             IVIDCPWR_ATTR_CURRENT_LIMIT           /* ViReal64,  multi-channel, amps  */
#define HP662XA_ATTR_OUTPUT_ENABLED            IVIDCPWR_ATTR_OUTPUT_ENABLED          /* ViBoolean, multi-channel        */

    /*- Trigger Attributes -------------------------------------------------*/

#define HP662XA_ATTR_ID_QUERY_RESPONSE      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1L)     /* ViString (Read Only)           */
#define HP662XA_ATTR_STATUS                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2L)     /* ViInt32  (Read Only)           */
#define HP662XA_ATTR_CONNECT_AT_POWER_ON    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3L)     /* ViBoolean (Write Only)         */
#define HP662XA_ATTR_FAULT_DELAY            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 4L)     /* ViReal64, multi-channel        */
#define HP662XA_ATTR_FAULT_MASK             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 5L)     /* ViInt32, multi-channel         */
#define HP662XA_ATTR_SRQ_AT_POWER_ON        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 6L)     /* ViInt32                        */
#define HP662XA_ATTR_SRQ_MASK               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 7L)     /* ViBoolean                      */

/****************************************************************************
 *------------------------ Attribute Value Defines -------------------------*
 ****************************************************************************/
    /*- Defined values for attribute HP662XA_ATTR_CURRENT_LIMIT_BEHAVIOR ---*/
#define HP662XA_VAL_CURRENT_REGULATE           IVIDCPWR_VAL_CURRENT_REGULATE
#define HP662XA_VAL_CURRENT_TRIP               IVIDCPWR_VAL_CURRENT_TRIP

/****************************************************************************
 *---------------- Instrument Driver Function Declarations -----------------*
 ****************************************************************************/

    /*- Init and Close Functions -------------------------------------------*/
ViStatus _VI_FUNC  hp662xa_init (ViRsrc resourceName, ViBoolean IDQuery,
                                  ViBoolean resetDevice, ViSession *vi);
ViStatus _VI_FUNC  hp662xa_InitWithOptions (ViRsrc resourceName, ViBoolean IDQuery,
                                             ViBoolean resetDevice, ViConstString optionString,
                                             ViSession *newVi);
ViStatus _VI_FUNC  hp662xa_close (ViSession vi);

    /*- Coercion Info Functions --------------------------------------------*/
ViStatus _VI_FUNC  hp662xa_GetNextCoercionRecord (ViSession vi,
                                                   ViInt32 bufferSize,
                                                   ViChar record[]);

    /*- Locking Functions --------------------------------------------------*/
ViStatus _VI_FUNC  hp662xa_LockSession (ViSession vi, ViBoolean *callerHasLock);
ViStatus _VI_FUNC  hp662xa_UnlockSession (ViSession vi, ViBoolean *callerHasLock);


    /*- Basic Instrument Operation -----------------------------------------*/
ViStatus _VI_FUNC hp662xa_ConfigureOutputEnabled (ViSession vi,
                                                  ViConstString channelName,
                                                  ViBoolean enabled);

ViStatus _VI_FUNC hp662xa_ConfigureOutputRange (ViSession vi,
                                                ViConstString channelName,
                                                ViInt32 rangeType,
                                                ViReal64 range);

ViStatus _VI_FUNC hp662xa_ConfigureCurrentLimit (ViSession vi,
                                                 ViConstString channelName,
                                                 ViInt32 behavior,
                                                 ViReal64 limit);
ViStatus _VI_FUNC hp662xa_ConfigureOVP (ViSession vi,
                                        ViConstString channelName,
                                        ViBoolean enabled,
                                        ViReal64 limit);

ViStatus _VI_FUNC hp662xa_ConfigureVoltageLevel (ViSession vi,
                                                 ViConstString channelName,
                                                 ViReal64 level);

ViStatus _VI_FUNC hp662xa_QueryOutputState (ViSession vi,
                                            ViConstString channelName,
                                            ViInt32 outputState,
                                            ViBoolean *inState);
ViStatus _VI_FUNC hp662xa_QueryMaxCurrentLimit (ViSession vi,
                                                 ViConstString channelName,
                                                 ViReal64 voltageLevel,
                                                 ViReal64 *maxCurrentLimit);
ViStatus _VI_FUNC hp662xa_QueryMaxVoltageLevel (ViSession vi,
                                                 ViConstString channelName,
                                                 ViReal64 currentLimit,
                                                 ViReal64 *maxVoltageLevel);

ViStatus _VI_FUNC hp662xa_ResetOutputProtection (ViSession vi,
                                                 ViConstString channelName);

ViStatus _VI_FUNC hp662xa_QueryFaultState (ViSession vi,
                                           ViConstString channelName,
                                           ViInt32 outputState, ViBoolean *inState,
                                           ViInt32 *faultRegister);

ViStatus _VI_FUNC hp662xa_QueryAccumulatedState (ViSession vi,
                                                 ViConstString channelName,
                                                 ViInt32 outputState,
                                                 ViBoolean *inState,
                                                 ViInt32 *accRegister);

    /*- Measuring ----------------------------------------------------------*/
ViStatus _VI_FUNC hp662xa_Measure (ViSession vi,
                                   ViConstString channelName,
                                   ViInt32 measurementType,
                                   ViReal64 *measurement);

    /*- Error Functions ----------------------------------------------------*/
ViStatus _VI_FUNC  hp662xa_error_query (ViSession vi, ViInt32 *errorCode,
                                         ViChar errorMessage[]);
ViStatus _VI_FUNC  hp662xa_error_message (ViSession vi, ViStatus errorCode,
                                           ViChar errorMessage[256]);
ViStatus _VI_FUNC hp662xa_GetError (ViSession vi,
                                     ViStatus *errorCode,
                                     ViInt32 bufferSize,
                                     ViChar description[]);
ViStatus _VI_FUNC  hp662xa_ClearError (ViSession vi);


        /*- Channel Info Functions ---------------------------------------------*/
ViStatus _VI_FUNC hp662xa_GetChannelName (ViSession vi, ViInt32 index,
                                           ViInt32 bufferSize,
                                           ViChar name[]);

    /*- Interchangeability Checking Functions ------------------------------*/
ViStatus _VI_FUNC hp662xa_GetNextInterchangeWarning (ViSession vi,
                                                      ViInt32 bufferSize,
                                                      ViChar warnString[]);
ViStatus _VI_FUNC hp662xa_ResetInterchangeCheck (ViSession vi);
ViStatus _VI_FUNC hp662xa_ClearInterchangeWarnings (ViSession vi);

    /*- Utility Functions --------------------------------------------------*/
ViStatus _VI_FUNC  hp662xa_reset (ViSession vi);
ViStatus _VI_FUNC  hp662xa_ResetWithDefaults (ViSession vi);
ViStatus _VI_FUNC  hp662xa_Disable (ViSession vi);
ViStatus _VI_FUNC  hp662xa_InvalidateAllAttributes (ViSession vi);
ViStatus _VI_FUNC  hp662xa_self_test (ViSession vi, ViInt16 *selfTestResult,
                                       ViChar selfTestMessage[]);
ViStatus _VI_FUNC  hp662xa_revision_query (ViSession vi,
                                            ViChar instrumentDriverRevision[],
                                            ViChar firmwareRevision[]);
ViStatus _VI_FUNC  hp662xa_WriteInstrData (ViSession vi, ViConstString writeBuffer);
ViStatus _VI_FUNC  hp662xa_ReadInstrData  (ViSession vi, ViInt32 numBytes,
                                            ViChar rdBuf[], ViInt32 *bytesRead);

    /*- Set, Get, and Check Attribute Functions ----------------------------*/
ViStatus _VI_FUNC  hp662xa_GetAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 *value);
ViStatus _VI_FUNC  hp662xa_GetAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 *value);
ViStatus _VI_FUNC  hp662xa_GetAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 bufSize, ViChar value[]);
ViStatus _VI_FUNC  hp662xa_GetAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession *value);
ViStatus _VI_FUNC  hp662xa_GetAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean *value);

ViStatus _VI_FUNC  hp662xa_SetAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value);
ViStatus _VI_FUNC  hp662xa_SetAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value);
ViStatus _VI_FUNC  hp662xa_SetAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value);
ViStatus _VI_FUNC  hp662xa_SetAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value);
ViStatus _VI_FUNC  hp662xa_SetAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value);

ViStatus _VI_FUNC  hp662xa_CheckAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value);
ViStatus _VI_FUNC  hp662xa_CheckAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value);
ViStatus _VI_FUNC  hp662xa_CheckAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value);
ViStatus _VI_FUNC  hp662xa_CheckAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value);
ViStatus _VI_FUNC  hp662xa_CheckAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value);

    /*********************************************************
        Functions reserved for class driver use only.
        End-users should not call these functions.
     *********************************************************/
ViStatus _VI_FUNC  hp662xa_IviInit (ViRsrc resourceName, ViBoolean IDQuery,
                                     ViBoolean reset, ViSession vi);
ViStatus _VI_FUNC  hp662xa_IviClose (ViSession vi);

/****************************************************************************
 *------------------------ Error And Completion Codes ----------------------*
 ****************************************************************************/
#define HP662XA_WARN_CURRENT_DECREASED             (IVI_SPECIFIC_WARN_BASE + 1)
#define HP662XA_WARN_VOLTAGE_DECREASED             (IVI_SPECIFIC_WARN_BASE + 2)

/****************************************************************************
 *--------- Obsolete Inherent Instrument Attributes and functions ----------*
 ****************************************************************************/
    /*- These attributes and functions have been deprecated and may not
        be supported in future versions of this driver. -*/

         /* Driver Information  */
#define HP662XA_ATTR_SPECIFIC_DRIVER_MAJOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_MAJOR_VERSION  /* ViInt32,  read-only  */
#define HP662XA_ATTR_SPECIFIC_DRIVER_MINOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_MINOR_VERSION  /* ViInt32,  read-only  */

        /* Error Info */
#define HP662XA_ATTR_PRIMARY_ERROR                 IVI_ATTR_PRIMARY_ERROR                  /* ViInt32   */
#define HP662XA_ATTR_SECONDARY_ERROR               IVI_ATTR_SECONDARY_ERROR                /* ViInt32   */
#define HP662XA_ATTR_ERROR_ELABORATION             IVI_ATTR_ERROR_ELABORATION              /* ViString  */

        /* Advanced Session Information */
#define HP662XA_ATTR_IO_SESSION_TYPE               IVI_ATTR_IO_SESSION_TYPE                /* ViString, read-only  */
#define HP662XA_ATTR_IO_SESSION                    IVI_ATTR_IO_SESSION                     /* ViSession, read-only */

        /*- Deprecated Attribute Identifiers for Renamed Attributes -*/
#define HP662XA_ATTR_NUM_CHANNELS                  HP662XA_ATTR_CHANNEL_COUNT             /* ViInt32,  read-only  */
#define HP662XA_ATTR_QUERY_INSTR_STATUS            HP662XA_ATTR_QUERY_INSTRUMENT_STATUS   /* ViBoolean */
#define HP662XA_ATTR_RESOURCE_DESCRIPTOR           HP662XA_ATTR_IO_RESOURCE_DESCRIPTOR    /* ViString, read-only  */


        /*- Deprecated Error Information functions -*/
ViStatus _VI_FUNC  hp662xa_GetErrorInfo (ViSession vi, ViStatus *primaryError,
                                          ViStatus *secondaryError,
                                          ViChar errorElaboration[256]);
ViStatus _VI_FUNC  hp662xa_ClearErrorInfo (ViSession vi);


/****************************************************************************
 *---------------------------- End Include File ----------------------------*
 ****************************************************************************/
#if defined(__cplusplus) || defined(__cplusplus__)
}
#endif
#endif /* __HP662XA_HEADER */
