/******************************************************************************
 *
 * Copyright Keysight Technologies 2003-2021
 *
 *****************************************************************************/

#ifndef __AGE36XX_HEADER
#define __AGE36XX_HEADER

#include <ivivisatype.h>


/****************************************************************************
 *---------------------------- Attribute Defines ---------------------------*
 ****************************************************************************/
#define IVI_ATTR_BASE                 1000000

#define IVI_INHERENT_ATTR_BASE        (IVI_ATTR_BASE +  50000)   /* base for inherent capability attributes */

#define IVI_CLASS_ATTR_BASE           (IVI_ATTR_BASE + 250000)   /* base for IVI-defined class attributes */

#define IVI_LXISYNC_ATTR_BASE         (IVI_ATTR_BASE + 950000)   /* base for IviLxiSync attributes */

#define IVI_SPECIFIC_ATTR_BASE        (IVI_ATTR_BASE + 150000)   /* base for attributes of specific drivers */


/*===== IVI Inherent Instrument Attributes ==============================*/

/*- Driver Identification */

#define AGE36XX_ATTR_SPECIFIC_DRIVER_DESCRIPTION              (IVI_INHERENT_ATTR_BASE + 514L)  /* ViString, read-only */
#define AGE36XX_ATTR_SPECIFIC_DRIVER_PREFIX                   (IVI_INHERENT_ATTR_BASE + 302L)  /* ViString, read-only */
#define AGE36XX_ATTR_SPECIFIC_DRIVER_VENDOR                   (IVI_INHERENT_ATTR_BASE + 513L)  /* ViString, read-only */
#define AGE36XX_ATTR_SPECIFIC_DRIVER_REVISION                 (IVI_INHERENT_ATTR_BASE + 551L)  /* ViString, read-only */
#define AGE36XX_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION (IVI_INHERENT_ATTR_BASE + 515L)  /* ViInt32, read-only */
#define AGE36XX_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION (IVI_INHERENT_ATTR_BASE + 516L)  /* ViInt32, read-only */

/*- User Options */

#define AGE36XX_ATTR_RANGE_CHECK                            (IVI_INHERENT_ATTR_BASE + 2L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_QUERY_INSTRUMENT_STATUS                (IVI_INHERENT_ATTR_BASE + 3L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_CACHE                                  (IVI_INHERENT_ATTR_BASE + 4L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_SIMULATE                               (IVI_INHERENT_ATTR_BASE + 5L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_RECORD_COERCIONS                       (IVI_INHERENT_ATTR_BASE + 6L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_INTERCHANGE_CHECK                      (IVI_INHERENT_ATTR_BASE + 21L)  /* ViBoolean, read-write */

/*- Advanced Session Information */

#define AGE36XX_ATTR_LOGICAL_NAME                           (IVI_INHERENT_ATTR_BASE + 305L)  /* ViString, read-only */
#define AGE36XX_ATTR_IO_RESOURCE_DESCRIPTOR                 (IVI_INHERENT_ATTR_BASE + 304L)  /* ViString, read-only */
#define AGE36XX_ATTR_DRIVER_SETUP                           (IVI_INHERENT_ATTR_BASE + 7L)  /* ViString, read-only */

/*- Driver Capabilities */

#define AGE36XX_ATTR_GROUP_CAPABILITIES                     (IVI_INHERENT_ATTR_BASE + 401L)  /* ViString, read-only */
#define AGE36XX_ATTR_SUPPORTED_INSTRUMENT_MODELS            (IVI_INHERENT_ATTR_BASE + 327L)  /* ViString, read-only */

/*- Instrument Identification */

#define AGE36XX_ATTR_INSTRUMENT_FIRMWARE_REVISION           (IVI_INHERENT_ATTR_BASE + 510L)  /* ViString, read-only */
#define AGE36XX_ATTR_INSTRUMENT_MANUFACTURER                (IVI_INHERENT_ATTR_BASE + 511L)  /* ViString, read-only */
#define AGE36XX_ATTR_INSTRUMENT_MODEL                       (IVI_INHERENT_ATTR_BASE + 512L)  /* ViString, read-only */


/*===== Instrument-Specific Attributes =====================================*/

/*- Output */

#define AGE36XX_ATTR_CURRENT_LIMIT                          (IVI_CLASS_ATTR_BASE + 5L)  /* ViReal64, read-write */
#define AGE36XX_ATTR_CURRENT_LIMIT_BEHAVIOR                 (IVI_CLASS_ATTR_BASE + 4L)  /* ViInt32, read-write */
#define AGE36XX_ATTR_OUTPUT_ENABLED                         (IVI_CLASS_ATTR_BASE + 6L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_OVP_ENABLED                            (IVI_CLASS_ATTR_BASE + 2L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_OVP_LIMIT                              (IVI_CLASS_ATTR_BASE + 3L)  /* ViReal64, read-write */
#define AGE36XX_ATTR_VOLTAGE_LEVEL                          (IVI_CLASS_ATTR_BASE + 1L)  /* ViReal64, read-write */
#define AGE36XX_ATTR_CHANNEL_COUNT                          (IVI_INHERENT_ATTR_BASE + 203L)  /* ViInt32, read-only */
#define AGE36XX_ATTR_OUTPUT_VOLTAGE_RANGE                   (IVI_SPECIFIC_ATTR_BASE + 15L)  /* ViInt32, read-write */
#define AGE36XX_ATTR_SENSE                                  (IVI_SPECIFIC_ATTR_BASE + 110L)  /* ViInt32, read-write */
#define AGE36XX_ATTR_SLEW_RISING_MAX                        (IVI_SPECIFIC_ATTR_BASE + 130L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_SLEW_FALLING_MAX                       (IVI_SPECIFIC_ATTR_BASE + 131L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_ENABLED                                (IVI_SPECIFIC_ATTR_BASE + 135L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_CURRENT_MAXIMUM                        (IVI_SPECIFIC_ATTR_BASE + 136L)  /* ViReal64, read-only */
#define AGE36XX_ATTR_VOLTAGE_MAXIMUM                        (IVI_SPECIFIC_ATTR_BASE + 137L)  /* ViReal64, read-only */
#define AGE36XX_ATTR_VOLTAGE_MINIMUM                        (IVI_SPECIFIC_ATTR_BASE + 138L)  /* ViReal64, read-only */
#define AGE36XX_ATTR_CURRENT_MINIMUM                        (IVI_SPECIFIC_ATTR_BASE + 139L)  /* ViReal64, read-only */

/*- Protection */

#define AGE36XX_ATTR_OUTPUT_PROTECTION_OCP_ENABLED          (IVI_SPECIFIC_ATTR_BASE + 16L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_OUTPUT_PROTECTION_OCP_LIMIT            (IVI_SPECIFIC_ATTR_BASE + 17L)  /* ViReal64, read-write */
#define AGE36XX_ATTR_OUTPUT_PROTECTION_OCP_TRIPPED          (IVI_SPECIFIC_ATTR_BASE + 18L)  /* ViBoolean, read-only */
#define AGE36XX_ATTR_OUTPUT_PROTECTION_OVP_ENABLED          (IVI_SPECIFIC_ATTR_BASE + 19L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_OUTPUT_PROTECTION_OVP_LIMIT            (IVI_SPECIFIC_ATTR_BASE + 20L)  /* ViReal64, read-write */
#define AGE36XX_ATTR_OUTPUT_PROTECTION_OVP_TRIPPED          (IVI_SPECIFIC_ATTR_BASE + 21L)  /* ViBoolean, read-only */
#define AGE36XX_ATTR_DELAY                                  (IVI_SPECIFIC_ATTR_BASE + 111L)  /* ViInt32, write-only */
#define AGE36XX_ATTR_PROTECTION_OVER_CURRENT_START_EVENT    (IVI_SPECIFIC_ATTR_BASE + 126L)  /* ViInt32, read-write */

/*- Trigger */

#define AGE36XX_ATTR_TRIGGERED_CURRENT_LIMIT                (IVI_CLASS_ATTR_BASE + 102L)  /* ViReal64, read-write */
#define AGE36XX_ATTR_TRIGGERED_VOLTAGE_LEVEL                (IVI_CLASS_ATTR_BASE + 103L)  /* ViReal64, read-write */
#define AGE36XX_ATTR_TRIGGER_SOURCE                         (IVI_CLASS_ATTR_BASE + 101L)  /* ViInt32, read-write */
#define AGE36XX_ATTR_TRIGGER_CURRENT_LIMIT                  (IVI_SPECIFIC_ATTR_BASE + 28L)  /* ViReal64, read-write */
#define AGE36XX_ATTR_TRIGGER_DELAY                          (IVI_SPECIFIC_ATTR_BASE + 29L)  /* ViReal64, read-write */
#define AGE36XX_ATTR_TRIGGER_VOLTAGE_LEVEL                  (IVI_SPECIFIC_ATTR_BASE + 31L)  /* ViReal64, read-write */

/*- Outputs */

#define AGE36XX_ATTR_OUTPUTS_CHANNEL                        (IVI_SPECIFIC_ATTR_BASE + 8L)  /* ViInt32, read-write */
#define AGE36XX_ATTR_OUTPUTS_ENABLED                        (IVI_SPECIFIC_ATTR_BASE + 9L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_OUTPUTS_RELAY_ENABLED                  (IVI_SPECIFIC_ATTR_BASE + 10L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_OUTPUTS_TRACKING_ENABLED               (IVI_SPECIFIC_ATTR_BASE + 11L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_OUTPUT_COUNT                           (IVI_SPECIFIC_ATTR_BASE + 105L)  /* ViInt32, read-only */
#define AGE36XX_ATTR_OUTPUTS_COUPLE_CHANNELS                (IVI_SPECIFIC_ATTR_BASE + 123L)  /* ViString, read-write */
#define AGE36XX_ATTR_OUTPUTS_INHIBIT_MODE                   (IVI_SPECIFIC_ATTR_BASE + 125L)  /* ViInt32, read-write */

/*- Display */

#define AGE36XX_ATTR_DISPLAY_ENABLED                        (IVI_SPECIFIC_ATTR_BASE + 5L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_DISPLAY_MODE                           (IVI_SPECIFIC_ATTR_BASE + 6L)  /* ViInt32, read-write */
#define AGE36XX_ATTR_DISPLAY_TEXT                           (IVI_SPECIFIC_ATTR_BASE + 7L)  /* ViString, read-write */
#define AGE36XX_ATTR_DISPLAY_METER_VIEW                     (IVI_SPECIFIC_ATTR_BASE + 127L)  /* ViInt32, read-write */

/*- Status */

#define AGE36XX_ATTR_STATUS_SERIAL_POLL                     (IVI_SPECIFIC_ATTR_BASE + 22L)  /* ViInt32, read-only */

/*- System */

#define AGE36XX_ATTR_SYSTEM_MODEL                           (IVI_SPECIFIC_ATTR_BASE + 24L)  /* ViInt32, read-write */
#define AGE36XX_ATTR_SYSTEM_TIMEOUT_MILLISECONDS            (IVI_SPECIFIC_ATTR_BASE + 25L)  /* ViInt32, read-write */
#define AGE36XX_ATTR_SYSTEM_TRACE_ENABLED                   (IVI_SPECIFIC_ATTR_BASE + 26L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_SYSTEM_BEEP_ENABLED                    (IVI_SPECIFIC_ATTR_BASE + 117L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_SYSTEM_DATE                            (IVI_SPECIFIC_ATTR_BASE + 118L)  /* ViString, read-write */
#define AGE36XX_ATTR_SYSTEM_LXI_ENABLED                     (IVI_SPECIFIC_ATTR_BASE + 121L)  /* ViBoolean, read-write */
#define AGE36XX_ATTR_SYSTEM_OPERATION_MODE                  (IVI_SPECIFIC_ATTR_BASE + 124L)  /* ViInt32, read-write */
#define AGE36XX_ATTR_POWERON_STATE                          (IVI_SPECIFIC_ATTR_BASE + 108L)  /* ViInt32, read-write */
#define AGE36XX_ATTR_SYSTEM_IO_TIMEOUT                      (IVI_SPECIFIC_ATTR_BASE + 107L)  /* ViInt32, read-write */
#define AGE36XX_ATTR_SYSTEM_SERIAL_NUMBER                   (IVI_SPECIFIC_ATTR_BASE + 112L)  /* ViString, read-only */
#define AGE36XX_ATTR_SYSTEM_TIME                            (IVI_SPECIFIC_ATTR_BASE + 119L)  /* ViString, read-write */
#define AGE36XX_ATTR_SYSTEM_VERSION                         (IVI_SPECIFIC_ATTR_BASE + 120L)  /* ViReal64, read-only */

/*- Calibrations */

#define AGE36XX_ATTR_CALIBRATIONS_ENABLED                   (IVI_SPECIFIC_ATTR_BASE + 1L)  /* ViBoolean, read-only */
#define AGE36XX_ATTR_CALIBRATIONS_PASSWORD                  (IVI_SPECIFIC_ATTR_BASE + 2L)  /* ViString, write-only */
#define AGE36XX_ATTR_CALIBRATIONS_STRING                    (IVI_SPECIFIC_ATTR_BASE + 3L)  /* ViString, read-write */
#define AGE36XX_ATTR_CALIBRATIONS_TIMES                     (IVI_SPECIFIC_ATTR_BASE + 4L)  /* ViInt32, read-only */
#define AGE36XX_ATTR_CALIBRATION_COUNT                      (IVI_SPECIFIC_ATTR_BASE + 104L)  /* ViInt32, read-only */
#define AGE36XX_ATTR_CALIBRATIONS_IS_AUTO_SAVE_ENABLED      (IVI_SPECIFIC_ATTR_BASE + 109L)  /* ViBoolean, read-only */
#define AGE36XX_ATTR_CALIBRATIONS_DATE                      (IVI_SPECIFIC_ATTR_BASE + 128L)  /* ViString, read-write */
#define AGE36XX_ATTR_CAL_PASSWORD                           (IVI_SPECIFIC_ATTR_BASE + 129L)  /* ViInt32, write-only */
#define AGE36XX_ATTR_GET_COUNT                              (IVI_SPECIFIC_ATTR_BASE + 134L)  /* ViInt32, read-only */

/*- Triggers */

#define AGE36XX_ATTR_TRIGGERS_COUPLING                      (IVI_SPECIFIC_ATTR_BASE + 27L)  /* ViInt32, read-write */
#define AGE36XX_ATTR_TRIGGER_COUNT                          (IVI_SPECIFIC_ATTR_BASE + 106L)  /* ViInt32, read-only */

/*- DigitalPort */

#define AGE36XX_ATTR_DIGITAL_PORT_OUTPUT_BUS_TRIGGER_ENABLED (IVI_SPECIFIC_ATTR_BASE + 116L)  /* ViBoolean, read-write */

/*- DLog */

#define AGE36XX_ATTR_DLOG_SAMPLE_PERIOD                     (IVI_SPECIFIC_ATTR_BASE + 113L)  /* ViReal64, read-write */
#define AGE36XX_ATTR_DLOG_SAMPLING_TIME                     (IVI_SPECIFIC_ATTR_BASE + 114L)  /* ViReal64, read-write */
#define AGE36XX_ATTR_DLOG_TRIGGER_SOURCE                    (IVI_SPECIFIC_ATTR_BASE + 115L)  /* ViInt32, read-write */


/****************************************************************************
 *------------------------ Attribute Value Defines -------------------------*
 ****************************************************************************/

/*- Defined values for
	attribute AGE36XX_ATTR_CURRENT_LIMIT_BEHAVIOR
	parameter Behavior in function AgE36xx_ConfigureCurrentLimit */

#define AGE36XX_VAL_CURRENT_REGULATE                        0
#define AGE36XX_VAL_CURRENT_TRIP                            1

/*- Defined values for
	parameter RangeType in function AgE36xx_ConfigureOutputRange */

#define AGE36XX_VAL_RANGE_CURRENT                           0
#define AGE36XX_VAL_RANGE_VOLTAGE                           1

/*- Defined values for
	parameter MeasurementType in function AgE36xx_Measure */

#define AGE36XX_VAL_MEASURE_CURRENT                         0
#define AGE36XX_VAL_MEASURE_VOLTAGE                         1

/*- Defined values for
	parameter OutputState in function AgE36xx_QueryOutputState */

#define AGE36XX_VAL_OUTPUT_CONSTANT_VOLTAGE                 0
#define AGE36XX_VAL_OUTPUT_CONSTANT_CURRENT                 1
#define AGE36XX_VAL_OUTPUT_OVER_VOLTAGE                     2
#define AGE36XX_VAL_OUTPUT_OVER_CURRENT                     3
#define AGE36XX_VAL_OUTPUT_UNREGULATED                      4

/*- Defined values for
	attribute AGE36XX_ATTR_TRIGGER_SOURCE
	parameter Source in function AgE36xx_ConfigureTriggerSource */

#define AGE36XX_VAL_TRIG_IMMEDIATE                          0
#define AGE36XX_VAL_SOFTWARE_TRIG                           2

/*- Defined values for
	parameter Level in function AgE36xx_CalibrationCurrentLevel
	parameter Level in function AgE36xx_CalibrationVoltageLevel */

#define AGE36XX_VAL_AGILENT_E36XX_CALIBRATION_LEVEL_MIN     0
#define AGE36XX_VAL_AGILENT_E36XX_CALIBRATION_LEVEL_MID     1
#define AGE36XX_VAL_AGILENT_E36XX_CALIBRATION_LEVEL_MAX     2

/*- Defined values for
	attribute AGE36XX_ATTR_DISPLAY_MODE */

#define AGE36XX_VAL_AGILENT_E36XX_DISPLAY_MODE_VOLT_CURRENT    0
#define AGE36XX_VAL_AGILENT_E36XX_DISPLAY_MODE_VOLT_VOLT       1
#define AGE36XX_VAL_AGILENT_E36XX_DISPLAY_MODE_CURRENT_CURRENT 2

/*- Defined values for
	attribute AGE36XX_ATTR_OUTPUTS_CHANNEL */

#define AGE36XX_VAL_AGILENT_E36XX_OUTPUT1                   1
#define AGE36XX_VAL_AGILENT_E36XX_OUTPUT2                   2
#define AGE36XX_VAL_AGILENT_E36XX_OUTPUT3                   3

/*- Defined values for
	parameter OutputState in function AgE36xx_OutputQueryState */

#define AGE36XX_VAL_AGILENT_E36XX_OUTPUT_CONSTANT_VOLTAGE   0
#define AGE36XX_VAL_AGILENT_E36XX_OUTPUT_CONSTANT_CURRENT   1
#define AGE36XX_VAL_AGILENT_E36XX_OUTPUT_OVER_VOLTAGE       2
#define AGE36XX_VAL_AGILENT_E36XX_OUTPUT_OVER_CURRENT       3
#define AGE36XX_VAL_AGILENT_E36XX_OUTPUT_UNREGULATED        4
#define AGE36XX_VAL_AGILENT_E36XX_OUTPUT_STATE_OUTPUT_OFF   5

/*- Defined values for
	parameter Direction in function AgE36xx_OutputRunStep */

#define AGE36XX_VAL_AGILENT_E36XX_VOLTAGE_STEP_DIRECTION_UP   0
#define AGE36XX_VAL_AGILENT_E36XX_VOLTAGE_STEP_DIRECTION_DOWN 1
#define AGE36XX_VAL_AGILENT_E36XX_CURRENT_STEP_DIRECTION_UP   2
#define AGE36XX_VAL_AGILENT_E36XX_CURRENT_STEP_DIRECTION_DOWN 3

/*- Defined values for
	parameter StepType in function AgE36xx_OutputGetStep
	parameter StepType in function AgE36xx_OutputSetStep */

#define AGE36XX_VAL_AGILENT_E36XX_VOLTAGE_STEP              0
#define AGE36XX_VAL_AGILENT_E36XX_DEFAULT_VOLTAGE_STEP      1
#define AGE36XX_VAL_AGILENT_E36XX_CURRENT_STEP              2
#define AGE36XX_VAL_AGILENT_E36XX_DEFAULT_CURRENT_STEP      3

/*- Defined values for
	attribute AGE36XX_ATTR_OUTPUT_VOLTAGE_RANGE */

#define AGE36XX_VAL_AGILENT_E36XX_VOLTAGE_RANGE_LOW         0
#define AGE36XX_VAL_AGILENT_E36XX_VOLTAGE_RANGE_HIGH        1
#define AGE36XX_VAL_VOLTAGE_RANGEP8V                        2
#define AGE36XX_VAL_VOLTAGE_RANGEP20V                       3
#define AGE36XX_VAL_VOLTAGE_RANGEP25V                       4
#define AGE36XX_VAL_VOLTAGE_RANGEP50V                       5

/*- Defined values for
	parameter Register in function AgE36xx_StatusQueryRegister
	parameter Register in function AgE36xx_StatusConfigureRegister
	parameter Register in function AgE36xx_StatusGetRegister
	parameter Register in function AgE36xx_StatusSetRegister */

#define AGE36XX_VAL_AGILENT_E36XX_STATUS_REGISTER_STATUS_BYTE    0
#define AGE36XX_VAL_AGILENT_E36XX_STATUS_REGISTER_STANDARD_EVENT 1
#define AGE36XX_VAL_AGILENT_E36XX_STATUS_REGISTER_QUESTIONABLE   2
#define AGE36XX_VAL_AGILENT_E36XX_STATUS_REGISTER_INSTRUMENT     3
#define AGE36XX_VAL_AGILENT_E36XX_STATUS_REGISTER_INSTRUMENT1    4
#define AGE36XX_VAL_AGILENT_E36XX_STATUS_REGISTER_INSTRUMENT2    5
#define AGE36XX_VAL_AGILENT_E36XX_STATUS_REGISTER_INSTRUMENT3    6
#define AGE36XX_VAL_STATUS_REGISTER_OPERATION                    7

/*- Defined values for
	parameter SubRegister in function AgE36xx_StatusQueryRegister
	parameter SubRegister in function AgE36xx_StatusConfigureRegister
	parameter SubRegister in function AgE36xx_StatusGetRegister
	parameter SubRegister in function AgE36xx_StatusSetRegister */

#define AGE36XX_VAL_AGILENT_E36XX_STATUS_SUB_REGISTER_EVENT   0
#define AGE36XX_VAL_AGILENT_E36XX_STATUS_SUB_REGISTER_ENABLE  1
#define AGE36XX_VAL_AGILENT_E36XX_STATUS_SUB_REGISTER_SUMMARY 2
#define AGE36XX_VAL_STATUS_SUB_REGISTER_CONDITION             3

/*- Defined values for
	attribute AGE36XX_ATTR_SYSTEM_MODEL */

#define AGE36XX_VAL_AGILENT_E36XX_NOT_ASSIGNED              0
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3631                 1
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3632                 2
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3633                 3
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3634                 4
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3640                 5
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3641                 6
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3642                 7
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3643                 8
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3644                 9
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3645                 10
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3646                 11
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3647                 12
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3648                 13
#define AGE36XX_VAL_AGILENT_E36XX_MODEL3649                 14
#define AGE36XX_VAL_AGILENT_E36XX_MODEL_NONE_SUPPORT        99
#define AGE36XX_VAL_MODELE36102A                            15
#define AGE36XX_VAL_MODELE36103A                            16
#define AGE36XX_VAL_MODELE36104A                            17
#define AGE36XX_VAL_MODELE36105A                            18
#define AGE36XX_VAL_MODELE36106A                            19
#define AGE36XX_VAL_MODEL36311                              20
#define AGE36XX_VAL_MODEL36312                              21
#define AGE36XX_VAL_MODEL36313                              22
#define AGE36XX_VAL_MODELE36102B                            23
#define AGE36XX_VAL_MODELE36103B                            24
#define AGE36XX_VAL_MODELE36104B                            25
#define AGE36XX_VAL_MODELE36105B                            26
#define AGE36XX_VAL_MODELE36106B                            27
#define AGE36XX_VAL_MODELE36231A                            28
#define AGE36XX_VAL_MODELE36232A                            29
#define AGE36XX_VAL_MODELE36233A                            30
#define AGE36XX_VAL_MODELE36234A                            31
#define AGE36XX_VAL_MODELEDU36311A                          32

/*- Defined values for
	attribute AGE36XX_ATTR_TRIGGERS_COUPLING */

#define AGE36XX_VAL_AGILENT_E36XX_COUPLING_ON               0
#define AGE36XX_VAL_AGILENT_E36XX_COUPLING_OFF              1
#define AGE36XX_VAL_AGILENT_E36XX_COUPLING_ALL              2
#define AGE36XX_VAL_AGILENT_E36XX_COUPLING_NONE             3
#define AGE36XX_VAL_AGILENT_E36XX_COUPLING_P6P25            4
#define AGE36XX_VAL_AGILENT_E36XX_COUPLING_P6N25            5
#define AGE36XX_VAL_AGILENT_E36XX_COUPLING_P25N25           6

/*- Defined values for
	attribute AGE36XX_ATTR_POWERON_STATE */

#define AGE36XX_VAL_SYSTEM_POWER_ON_STATERST                0
#define AGE36XX_VAL_SYSTEM_POWER_ON_STATERCL0               1
#define AGE36XX_VAL_SYSTEM_POWER_ON_STATERCL1               2
#define AGE36XX_VAL_SYSTEM_POWER_ON_STATERCL2               3
#define AGE36XX_VAL_SYSTEM_POWER_ON_STATERCL3               4
#define AGE36XX_VAL_SYSTEM_POWER_ON_STATERCL4               5
#define AGE36XX_VAL_SYSTEM_POWER_ON_STATERCL5               6
#define AGE36XX_VAL_SYSTEM_POWER_ON_STATERCL6               7
#define AGE36XX_VAL_SYSTEM_POWER_ON_STATERCL7               8
#define AGE36XX_VAL_SYSTEM_POWER_ON_STATERCL8               9
#define AGE36XX_VAL_SYSTEM_POWER_ON_STATERCL9               10

/*- Defined values for
	attribute AGE36XX_ATTR_SENSE */

#define AGE36XX_VAL_OUTPUT_SENSING_INTERNAL                 0
#define AGE36XX_VAL_OUTPUT_SENSING_EXTERNAL                 1

/*- Defined values for
	parameter Behavior in function AgE36xx_OutputConfigureCurrentLimit */

#define AGE36XX_VAL_CURRENT_LIMIT_REGULATE                  0
#define AGE36XX_VAL_CURRENT_LIMIT_TRIP                      1

/*- Defined values for
	parameter RangeType in function AgE36xx_OutputConfigureRange */

#define AGE36XX_VAL_RANGE_CURRENT2                          0
#define AGE36XX_VAL_RANGE_VOLTAGE2                          1

/*- Defined values for
	parameter MeasurementType in function AgE36xx_Measure2 */

#define AGE36XX_VAL_MEASUREMENT_CURRENT                     0
#define AGE36XX_VAL_MEASUREMENT_VOLTAGE                     1

/*- Defined values for
	attribute AGE36XX_ATTR_DELAY */

#define AGE36XX_VAL_OUTPUT_DELAY_MINIMUM                    0
#define AGE36XX_VAL_OUTPUT_DELAY_MAXIMUM                    1

/*- Defined values for
	parameter Function in function AgE36xx_DLogConfigureFunction
	parameter Function in function AgE36xx_DLogQueryFunction */

#define AGE36XX_VAL_DLOG_CONFIGURE_FUNCTION_CURRENT         0
#define AGE36XX_VAL_DLOG_CONFIGURE_FUNCTION_MIN_MAX         1
#define AGE36XX_VAL_DLOG_CONFIGURE_FUNCTION_VOLTAGE         2

/*- Defined values for
	attribute AGE36XX_ATTR_DLOG_TRIGGER_SOURCE */

#define AGE36XX_VAL_DLOG_TRIGGER_SOURCE_BUS                 0
#define AGE36XX_VAL_DLOG_TRIGGER_SOURCE_EXTERNAL            1
#define AGE36XX_VAL_DLOG_TRIGGER_SOURCE_IMMEDIATE           2

/*- Defined values for
	parameter Function in function AgE36xx_DigitalPortConfigurePin
	parameter Function in function AgE36xx_DigitalPortQueryPin */

#define AGE36XX_VAL_DIGITAL_PIN_FUNCTION_DIGITALIO          0
#define AGE36XX_VAL_DIGITAL_PIN_FUNCTION_DIGITAL_INPUT      1
#define AGE36XX_VAL_DIGITAL_PIN_FUNCTION_TRIGGER_OUTPUT     2
#define AGE36XX_VAL_DIGITAL_PIN_FUNCTION_TRIGGER_INPUT      3
#define AGE36XX_VAL_DIGITAL_PIN_FUNCTION_FAULT              4
#define AGE36XX_VAL_DIGITAL_PIN_FUNCTION_INHIBIT_INPUT      5
#define AGE36XX_VAL_DIGITAL_PIN_FUNCTION_ON_COUPLE          6
#define AGE36XX_VAL_DIGITAL_PIN_FUNCTION_OFF_COUPLE         7
#define AGE36XX_VAL_DIGITAL_PIN_FUNCTION_RELAY              8

/*- Defined values for
	parameter Pin in function AgE36xx_DigitalPortConfigurePin
	parameter Pin in function AgE36xx_DigitalPortQueryPin */

#define AGE36XX_VAL_DIGITAL_PIN1                            0
#define AGE36XX_VAL_DIGITAL_PIN2                            1
#define AGE36XX_VAL_DIGITAL_PIN3                            2

/*- Defined values for
	parameter Polarity in function AgE36xx_DigitalPortConfigurePin
	parameter Polarity in function AgE36xx_DigitalPortQueryPin */

#define AGE36XX_VAL_DIGITAL_PIN_POLARITY_NEGATIVE           0
#define AGE36XX_VAL_DIGITAL_PIN_POLARITY_POSITIVE           1

/*- Defined values for
	parameter Function in function AgE36xx_TransientConfigureMode
	parameter Function in function AgE36xx_TransientQueryMode */

#define AGE36XX_VAL_TRANSIENT_FUNCTION_CURRENT              0
#define AGE36XX_VAL_TRANSIENT_FUNCTION_VOLTAGE              1

/*- Defined values for
	parameter Mode in function AgE36xx_TransientConfigureMode
	parameter Val in function AgE36xx_TransientQueryMode */

#define AGE36XX_VAL_TRANSIENT_MODE_FIXED                    0
#define AGE36XX_VAL_TRANSIENT_MODE_STEP                     1
#define AGE36XX_VAL_TRANSIENT_MODE_LIST                     2

/*- Defined values for
	parameter Type in function AgE36xx_TransientListDefineDataPoints
	parameter Type in function AgE36xx_TransientListQueryDataPoints */

#define AGE36XX_VAL_LIST_POINT_TYPE_CURRENT                 0
#define AGE36XX_VAL_LIST_POINT_TYPE_DWELL                   1
#define AGE36XX_VAL_LIST_POINT_TYPE_VOLTAGE                 2

/*- Defined values for
	parameter ListType in function AgE36xx_TransientListQueryListLength */

#define AGE36XX_VAL_LIST_POINTS_QUERY_TYPE_CURRENT_ARRAY               0
#define AGE36XX_VAL_LIST_POINTS_QUERY_TYPE_VOLTAGE_ARRAY               1
#define AGE36XX_VAL_LIST_POINTS_QUERY_TYPE_DWELL_ARRAY                 2
#define AGE36XX_VAL_LIST_POINTS_QUERY_TYPE_START_OF_STEP_TRIGGER_ARRAY 3
#define AGE36XX_VAL_LIST_POINTS_QUERY_TYPE_END_OF_STEP_TRIGGER_ARRAY   4

/*- Defined values for
	parameter Mode in function AgE36xx_TransientListDefineTriggerMode
	parameter Val in function AgE36xx_TransientListQueryTriggerMode */

#define AGE36XX_VAL_LIST_TRIGGER_MODE_RUN                   0
#define AGE36XX_VAL_LIST_TRIGGER_MODE_STEP                  1

/*- Defined values for
	parameter TermiationBehavior in function AgE36xx_TransientListDefineTerminationBehavior
	parameter Val in function AgE36xx_TransientListQueryTerminationBehavior */

#define AGE36XX_VAL_WAVEFORM_TERMINATION_BEHAVIOR_START_VALUE 0
#define AGE36XX_VAL_WAVEFORM_TERMINATION_BEHAVIOR_END_VALUE   1

/*- Defined values for
	parameter Type in function AgE36xx_TransientListDefineTriggerOutput
	parameter Type in function AgE36xx_TransientListQueryTriggerOutput */

#define AGE36XX_VAL_TRIGGER_POINT_TYPE_START_OF_STEP        0
#define AGE36XX_VAL_TRIGGER_POINT_TYPE_END_OF_STEP          1

/*- Defined values for
	attribute AGE36XX_ATTR_SYSTEM_OPERATION_MODE */

#define AGE36XX_VAL_SYSTEM_OPERATION_MODE_PARALLEL          0
#define AGE36XX_VAL_SYSTEM_OPERATION_MODE_SERIES            1
#define AGE36XX_VAL_SYSTEM_OPERATION_MODE_OFF               2

/*- Defined values for
	attribute AGE36XX_ATTR_OUTPUTS_INHIBIT_MODE */

#define AGE36XX_VAL_OUTPUT_INHIBIT_MODE_OFF                 0
#define AGE36XX_VAL_OUTPUT_INHIBIT_MODE_LATCHING            1
#define AGE36XX_VAL_OUTPUT_INHIBIT_MODE_LIVE                2

/*- Defined values for
	attribute AGE36XX_ATTR_PROTECTION_OVER_CURRENT_START_EVENT */

#define AGE36XX_VAL_PROTECTION_START_EVENT_SETTINGS_CHANGE    0
#define AGE36XX_VAL_PROTECTION_START_EVENT_CURRENT_TRANSITION 1

/*- Defined values for
	attribute AGE36XX_ATTR_DISPLAY_METER_VIEW */

#define AGE36XX_VAL_DISPLAY_METER_VIEW_METER1               0
#define AGE36XX_VAL_DISPLAY_METER_VIEW_METER3               2
#define AGE36XX_VAL_DISPLAY_METER_VIEW_METER2               1

/*- Defined values for
	parameter Level in function AgE36xx_LowCurrentLevel */

#define AGE36XX_VAL_CALIBRATION_LOW_CURRENT_LEVEL_MAXIMUM   0
#define AGE36XX_VAL_CALIBRATION_LOW_CURRENT_LEVEL_MINIMUM   1

/*- Defined values for
	parameter Channel in function AgE36xx_QueryApplyVoltageCurrent */

#define AGE36XX_VAL_OUTPUT_CHANNELCH1                       0
#define AGE36XX_VAL_OUTPUT_CHANNELCH2                       1

/*- Defined values for
	parameter Mode in function AgE36xx_PreferredMode
	parameter Val in function AgE36xx_QueryPreferredMode */

#define AGE36XX_VAL_OUTPUT_PREFERRED_MODE_VOLTAGE           0
#define AGE36XX_VAL_OUTPUT_PREFERRED_MODE_CURRENT           1

/*- Defined values for
	parameter Range in function AgE36xx_SlewFallingRange
	parameter Range in function AgE36xx_SlewRisingRange */

#define AGE36XX_VAL_SLEW_RANGE_MIN                          0
#define AGE36XX_VAL_SLEW_RANGE_MAX                          1
#define AGE36XX_VAL_SLEW_RANGE_INFINITY                     2

/*- Defined values for
	parameter Range in function AgE36xx_VolatgeLevelRange
	parameter Range in function AgE36xx_CurrentLimitRange */

#define AGE36XX_VAL_VOLTAGE_LEVEL_MINIMUM                   0
#define AGE36XX_VAL_VOLTAGE_LEVEL_MAXIMUM                   1
#define AGE36XX_VAL_VOLTAGE_LEVEL_UP                        2
#define AGE36XX_VAL_VOLTAGE_LEVEL_DOWN                      3
#define AGE36XX_VAL_VOLTAGE_LEVEL_DEFAULT                   4

/*- Defined values for
	parameter Range in function AgE36xx_VoltageLevelRange */

#define AGE36XX_VAL_MIN_MAX_MAXIMUM                         0
#define AGE36XX_VAL_MIN_MAX_MINIMUM                         1


/****************************************************************************
 *---------------- Instrument Driver Function Declarations -----------------*
 ****************************************************************************/

/*- AgilentE36xx */

ViStatus _VI_FUNC AgE36xx_init(ViRsrc ResourceName, ViBoolean IdQuery, ViBoolean Reset, ViSession* Vi);
ViStatus _VI_FUNC AgE36xx_close(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_InitWithOptions(ViRsrc ResourceName, ViBoolean IdQuery, ViBoolean Reset, ViConstString OptionsString, ViSession* Vi);
ViStatus _VI_FUNC AgE36xx_GetChannelName(ViSession Vi, ViInt32 Index, ViInt32 NameBufferSize, ViChar Name[]);

/*- Utility */

ViStatus _VI_FUNC AgE36xx_revision_query(ViSession Vi, ViChar DriverRev[], ViChar InstrRev[]);
ViStatus _VI_FUNC AgE36xx_error_message(ViSession Vi, ViStatus ErrorCode, ViChar ErrorMessage[]);
ViStatus _VI_FUNC AgE36xx_GetError(ViSession Vi, ViStatus* ErrorCode, ViInt32 ErrorDescriptionBufferSize, ViChar ErrorDescription[]);
ViStatus _VI_FUNC AgE36xx_ClearError(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_GetNextCoercionRecord(ViSession Vi, ViInt32 CoercionRecordBufferSize, ViChar CoercionRecord[]);
ViStatus _VI_FUNC AgE36xx_InvalidateAllAttributes(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_Disable(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_error_query(ViSession Vi, ViInt32* ErrorCode, ViChar ErrorMessage[]);
ViStatus _VI_FUNC AgE36xx_LockSession(ViSession Vi, ViBoolean* CallerHasLock);
ViStatus _VI_FUNC AgE36xx_reset(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_ResetWithDefaults(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_self_test(ViSession Vi, ViInt16* TestResult, ViChar TestMessage[]);
ViStatus _VI_FUNC AgE36xx_UnlockSession(ViSession Vi, ViBoolean* CallerHasLock);

/*- Attribute Accessors */

ViStatus _VI_FUNC AgE36xx_GetAttributeViInt32(ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt32* AttributeValue);
ViStatus _VI_FUNC AgE36xx_GetAttributeViReal64(ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViReal64* AttributeValue);
ViStatus _VI_FUNC AgE36xx_GetAttributeViBoolean(ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViBoolean* AttributeValue);
ViStatus _VI_FUNC AgE36xx_GetAttributeViSession(ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViSession* AttributeValue);
ViStatus _VI_FUNC AgE36xx_GetAttributeViString(ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt32 AttributeValueBufferSize, ViChar AttributeValue[]);
ViStatus _VI_FUNC AgE36xx_SetAttributeViInt32(ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt32 AttributeValue);
ViStatus _VI_FUNC AgE36xx_SetAttributeViReal64(ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViReal64 AttributeValue);
ViStatus _VI_FUNC AgE36xx_SetAttributeViBoolean(ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViBoolean AttributeValue);
ViStatus _VI_FUNC AgE36xx_SetAttributeViSession(ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViSession AttributeValue);
ViStatus _VI_FUNC AgE36xx_SetAttributeViString(ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViConstString AttributeValue);

/*- Configuration */

ViStatus _VI_FUNC AgE36xx_ConfigureOutputEnabled(ViSession Vi, ViConstString ChannelName, ViBoolean Enabled);
ViStatus _VI_FUNC AgE36xx_ConfigureVoltageLevel(ViSession Vi, ViConstString ChannelName, ViReal64 Level);
ViStatus _VI_FUNC AgE36xx_ConfigureCurrentLimit(ViSession Vi, ViConstString ChannelName, ViInt32 Behavior, ViReal64 Limit);
ViStatus _VI_FUNC AgE36xx_ConfigureOVP(ViSession Vi, ViConstString ChannelName, ViBoolean Enabled, ViReal64 Limit);
ViStatus _VI_FUNC AgE36xx_ConfigureOutputRange(ViSession Vi, ViConstString ChannelName, ViInt32 RangeType, ViReal64 Range);
ViStatus _VI_FUNC AgE36xx_QueryMaxCurrentLimit(ViSession Vi, ViConstString ChannelName, ViReal64 VoltageLevel, ViReal64* MaxCurrentLimit);
ViStatus _VI_FUNC AgE36xx_QueryMaxVoltageLevel(ViSession Vi, ViConstString ChannelName, ViReal64 CurrentLimit, ViReal64* MaxVoltageLevel);

/*- Triggering */

ViStatus _VI_FUNC AgE36xx_ConfigureTriggeredCurrentLimit(ViSession Vi, ViConstString ChannelName, ViReal64 Limit);
ViStatus _VI_FUNC AgE36xx_ConfigureTriggeredVoltageLevel(ViSession Vi, ViConstString ChannelName, ViReal64 Level);
ViStatus _VI_FUNC AgE36xx_ConfigureTriggerSource(ViSession Vi, ViConstString ChannelName, ViInt32 Source);

/*- Action */

ViStatus _VI_FUNC AgE36xx_Measure(ViSession Vi, ViConstString ChannelName, ViInt32 MeasurementType, ViReal64* Measurement);
ViStatus _VI_FUNC AgE36xx_QueryOutputState(ViSession Vi, ViConstString ChannelName, ViInt32 OutputState, ViBoolean* InState);
ViStatus _VI_FUNC AgE36xx_ResetOutputProtection(ViSession Vi, ViConstString ChannelName);
ViStatus _VI_FUNC AgE36xx_Abort(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_Initiate(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_SendSoftwareTrigger(ViSession Vi);

/*- Output */

ViStatus _VI_FUNC AgE36xx_OutputApplyVoltageCurrent(ViSession Vi, ViConstString RepCapIdentifier, ViReal64 VoltageLevel, ViReal64 CurrentLimit);
ViStatus _VI_FUNC AgE36xx_OutputQueryState(ViSession Vi, ViConstString RepCapIdentifier, ViInt32 OutputState, ViBoolean* RetVal);
ViStatus _VI_FUNC AgE36xx_OutputRunStep(ViSession Vi, ViConstString RepCapIdentifier, ViInt32 Direction);
ViStatus _VI_FUNC AgE36xx_OutputGetStep(ViSession Vi, ViConstString RepCapIdentifier, ViInt32 StepType, ViReal64* RetVal);
ViStatus _VI_FUNC AgE36xx_OutputSetStep(ViSession Vi, ViConstString RepCapIdentifier, ViInt32 StepType, ViReal64 Val);
ViStatus _VI_FUNC AgE36xx_OutputConfigureCurrentLimit(ViSession Vi, ViConstString Output, ViInt32 Behavior, ViReal64 Limit);
ViStatus _VI_FUNC AgE36xx_OutputConfigureRange(ViSession Vi, ViConstString Output, ViInt32 RangeType, ViReal64 Range);
ViStatus _VI_FUNC AgE36xx_Measure2(ViSession Vi, ViConstString Output, ViInt32 MeasurementType, ViReal64* Val);
ViStatus _VI_FUNC AgE36xx_OutputQueryCurrentLimitMax(ViSession Vi, ViConstString Output, ViReal64 VoltageLevel, ViReal64* Val);
ViStatus _VI_FUNC AgE36xx_OutputQueryVoltageLevelMax(ViSession Vi, ViConstString Output, ViReal64 CurrentLimit, ViReal64* Val);
ViStatus _VI_FUNC AgE36xx_QueryApplyVoltageCurrent(ViSession Vi, ViConstString Output, ViInt32 Channel, ViInt32 ValBufferSize, ViChar Val[]);
ViStatus _VI_FUNC AgE36xx_SlewFalling(ViSession Vi, ViConstString Output, ViReal64 Slew);
ViStatus _VI_FUNC AgE36xx_QuerySlewFalling(ViSession Vi, ViConstString Output, ViInt32 ValBufferSize, ViReal64 Val[], ViInt32* ValActualSize);
ViStatus _VI_FUNC AgE36xx_SlewFallingRange(ViSession Vi, ViConstString Output, ViInt32 Range);
ViStatus _VI_FUNC AgE36xx_SlewRising(ViSession Vi, ViConstString Output, ViReal64 Slew);
ViStatus _VI_FUNC AgE36xx_SlewRisingRange(ViSession Vi, ViConstString Output, ViInt32 Range);
ViStatus _VI_FUNC AgE36xx_QuerySlewRising(ViSession Vi, ViConstString Output, ViInt32 ValBufferSize, ViReal64 Val[], ViInt32* ValActualSize);
ViStatus _VI_FUNC AgE36xx_VolatgeLevelRange(ViSession Vi, ViConstString Output, ViInt32 Range);
ViStatus _VI_FUNC AgE36xx_CurrentLimitRange(ViSession Vi, ViConstString Output, ViInt32 Range);

/*- Protection */

ViStatus _VI_FUNC AgE36xx_OutputProtectionResetOVP(ViSession Vi, ViConstString RepCapIdentifier);
ViStatus _VI_FUNC AgE36xx_OutputProtectionResetOutputProtection(ViSession Vi, ViConstString RepCapIdentifier);
ViStatus _VI_FUNC AgE36xx_OutputProtectionResetOCP(ViSession Vi, ViConstString RepCapIdentifier);
ViStatus _VI_FUNC AgE36xx_OutputProtectionQueryOVPLimitMax(ViSession Vi, ViConstString RepCapIdentifier, ViReal64* RetVal);
ViStatus _VI_FUNC AgE36xx_OutputProtectionQueryOCPLimitMax(ViSession Vi, ViConstString RepCapIdentifier, ViReal64* RetVal);
ViStatus _VI_FUNC AgE36xx_OutputProtectionConfigureOVP(ViSession Vi, ViConstString RepCapIdentifier, ViBoolean Enabled, ViReal64 Limit);
ViStatus _VI_FUNC AgE36xx_OutputProtectionConfigureOCP(ViSession Vi, ViConstString RepCapIdentifier, ViBoolean Enabled, ViReal64 Limit);
ViStatus _VI_FUNC AgE36xx_Clear(ViSession Vi, ViConstString Output);
ViStatus _VI_FUNC AgE36xx_ConfigueDelay(ViSession Vi, ViConstString Output, ViReal64 Time);
ViStatus _VI_FUNC AgE36xx_GetDelay(ViSession Vi, ViConstString Output, ViReal64* Val);

/*- Trigger */

ViStatus _VI_FUNC AgE36xx_VoltageLevelRange(ViSession Vi, ViConstString Trigger, ViInt32 Range);

/*- Outputs */

ViStatus _VI_FUNC AgE36xx_GetOutputName(ViSession Vi, ViInt32 Index, ViInt32 NameBufferSize, ViChar Name[]);
ViStatus _VI_FUNC AgE36xx_OutputsCoupleAllChannels(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_OutputsConfigureOffSequence(ViSession Vi, ViReal64 Delay, ViInt32 ChanListBufferSize, ViConstString ChanList);
ViStatus _VI_FUNC AgE36xx_OutputsQueryOffSequence(ViSession Vi, ViInt32 ChanListBufferSize, ViConstString ChanList, ViInt32 ValBufferSize, ViReal64 Val[], ViInt32* ValActualSize);
ViStatus _VI_FUNC AgE36xx_OutputsConfigureOnSequence(ViSession Vi, ViReal64 Delay, ViInt32 ChanListBufferSize, ViConstString ChanList);
ViStatus _VI_FUNC AgE36xx_OutputsQueryOnSequence(ViSession Vi, ViInt32 ChanListBufferSize, ViConstString ChanList, ViInt32 ValBufferSize, ViReal64 Val[], ViInt32* ValActualSize);
ViStatus _VI_FUNC AgE36xx_PreferredMode(ViSession Vi, ViInt32 Mode, ViConstString ChanList);
ViStatus _VI_FUNC AgE36xx_QueryPreferredMode(ViSession Vi, ViConstString ChanList, ViInt32* Val);

/*- Display */

ViStatus _VI_FUNC AgE36xx_DisplayClear(ViSession Vi);

/*- Status */

ViStatus _VI_FUNC AgE36xx_StatusQueryRegister(ViSession Vi, ViInt32 Register, ViInt32 SubRegister, ViInt32* RetVal);
ViStatus _VI_FUNC AgE36xx_StatusConfigureRegister(ViSession Vi, ViInt32 Register, ViInt32 SubRegister, ViInt32 Data);
ViStatus _VI_FUNC AgE36xx_StatusClear(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_StatusGetRegister(ViSession Vi, ViInt32 Register, ViInt32 SubRegister, ViInt32* RetVal);
ViStatus _VI_FUNC AgE36xx_StatusSetRegister(ViSession Vi, ViInt32 Register, ViInt32 SubRegister, ViInt32 Val);
ViStatus _VI_FUNC AgE36xx_Preset(ViSession Vi);

/*- System */

ViStatus _VI_FUNC AgE36xx_SystemWaitForOperationComplete(ViSession Vi, ViInt32 MaxTimeMilliseconds);
ViStatus _VI_FUNC AgE36xx_SystemSaveState(ViSession Vi, ViConstString Identifier);
ViStatus _VI_FUNC AgE36xx_SystemRecallState(ViSession Vi, ViConstString Identifier);
ViStatus _VI_FUNC AgE36xx_SystemEnableLocalControls(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_SystemDisableLocalControls(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_SystemBeep(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_SystemGetMemoryName(ViSession Vi, ViInt32 Index, ViInt32 RetValBufferSize, ViChar RetVal[]);
ViStatus _VI_FUNC AgE36xx_SystemSetMemoryName(ViSession Vi, ViInt32 Index, ViConstString Val);
ViStatus _VI_FUNC AgE36xx_SystemRead(ViSession Vi, ViInt32 Size, ViChar Value[], ViInt32* ActualSize);
ViStatus _VI_FUNC AgE36xx_SystemWrite(ViSession Vi, ViConstString CommandString);
ViStatus _VI_FUNC AgE36xx_SystemExportInstrumentState(ViSession Vi, ViInt32 ValBufferSize, ViByte Val[], ViInt32* ValActualSize);
ViStatus _VI_FUNC AgE36xx_SystemImportInstrumentState(ViSession Vi, ViInt32 StateBufferSize, ViByte State[]);
ViStatus _VI_FUNC AgE36xx_SystemReadString(ViSession Vi, ViInt32 ValBufferSize, ViChar Val[]);
ViStatus _VI_FUNC AgE36xx_SystemWriteString(ViSession Vi, ViConstString Data);
ViStatus _VI_FUNC AgE36xx_viRead(ViSession Vi, ViInt64 BufferSize, ViByte Buffer[], ViInt64* ReturnCount);
ViStatus _VI_FUNC AgE36xx_viWrite(ViSession Vi, ViInt64 Count, ViByte Buffer[], ViInt64* ReturnCount);

/*- Calibration */

ViStatus _VI_FUNC AgE36xx_CalibrationCurrentData(ViSession Vi, ViConstString RepCapIdentifier, ViReal64 Current);
ViStatus _VI_FUNC AgE36xx_CalibrationCurrentLevel(ViSession Vi, ViConstString RepCapIdentifier, ViInt32 Level);
ViStatus _VI_FUNC AgE36xx_CalibrationCurrentProtection(ViSession Vi, ViConstString RepCapIdentifier);
ViStatus _VI_FUNC AgE36xx_CalibrationVoltageData(ViSession Vi, ViConstString RepCapIdentifier, ViReal64 Voltage);
ViStatus _VI_FUNC AgE36xx_CalibrationVoltageLevel(ViSession Vi, ViConstString RepCapIdentifier, ViInt32 Level);
ViStatus _VI_FUNC AgE36xx_CalibrationVoltageProtection(ViSession Vi, ViConstString RepCapIdentifier);
ViStatus _VI_FUNC AgE36xx_CALIBRATOIN_LOW_CURRENT_DATA(ViSession Vi, ViConstString Calibration, ViReal64 Current);
ViStatus _VI_FUNC AgE36xx_LowCurrentLevel(ViSession Vi, ViConstString Calibration, ViInt32 Level);

/*- Calibrations */

ViStatus _VI_FUNC AgE36xx_CalibrationsDACError(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_CalibrationsSetState(ViSession Vi, ViBoolean Enabled, ViConstString Password);
ViStatus _VI_FUNC AgE36xx_GetCalibrationName(ViSession Vi, ViInt32 Index, ViInt32 NameBufferSize, ViChar Name[]);
ViStatus _VI_FUNC AgE36xx_AutoSaveEnabled(ViSession Vi, ViBoolean State);
ViStatus _VI_FUNC AgE36xx_Save(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_CalSetState(ViSession Vi, ViBoolean Enabled, ViInt32 Password);

/*- Triggers */

ViStatus _VI_FUNC AgE36xx_GetTriggerName(ViSession Vi, ViInt32 Index, ViInt32 NameBufferSize, ViChar Name[]);
ViStatus _VI_FUNC AgE36xx_InitiateContinous(ViSession Vi, ViBoolean State);
ViStatus _VI_FUNC AgE36xx_QueryInitiateContinous(ViSession Vi, ViConstString ChanList, ViBoolean* Val);

/*- DigitalPort */

ViStatus _VI_FUNC AgE36xx_DigitalPortConfigurePin(ViSession Vi, ViInt32 Pin, ViInt32 Function, ViInt32 Polarity);
ViStatus _VI_FUNC AgE36xx_DigitalPortQueryPin(ViSession Vi, ViInt32 Pin, ViInt32* Function, ViInt32* Polarity);
ViStatus _VI_FUNC AgE36xx_DigitalPortReadInputData(ViSession Vi, ViInt32* Val);
ViStatus _VI_FUNC AgE36xx_DigitalPortWriteOutputData(ViSession Vi, ViInt32 Data);
ViStatus _VI_FUNC AgE36xx_DigitalPortReadOutputData(ViSession Vi, ViInt32* Val);

/*- DLog */

ViStatus _VI_FUNC AgE36xx_DLogAbort(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_DLogExportFile(ViSession Vi, ViInt32 FilenameBufferSize, ViConstString Filename);
ViStatus _VI_FUNC AgE36xx_DLogConfigureFunction(ViSession Vi, ViInt32 Function, ViBoolean Enabled, ViInt32 ChanListBufferSize, ViConstString ChanList);
ViStatus _VI_FUNC AgE36xx_DLogQueryFunction(ViSession Vi, ViInt32 Function, ViInt32 ChanListBufferSize, ViConstString ChanList, ViInt32 ValBufferSize, ViBoolean Val[], ViInt32* ValActualSize);
ViStatus _VI_FUNC AgE36xx_DLogTrigger(ViSession Vi);
ViStatus _VI_FUNC AgE36xx_DLogInitiate(ViSession Vi, ViInt32 FilenameBufferSize, ViConstString Filename);
ViStatus _VI_FUNC AgE36xx_DLogFetch(ViSession Vi, ViInt32 NoOfPoints, ViInt32 ChanListBufferSize, ViConstString ChanList, ViInt32 ValBufferSize, ViReal32 Val[], ViInt32* ValActualSize);

/*- Transient */

ViStatus _VI_FUNC AgE36xx_TransientConfigureMode(ViSession Vi, ViInt32 Function, ViInt32 Mode, ViInt32 ChanListBufferSize, ViConstString ChanList);
ViStatus _VI_FUNC AgE36xx_TransientQueryMode(ViSession Vi, ViInt32 Function, ViInt32 ChanListBufferSize, ViConstString ChanList, ViInt32 ValBufferSize, ViInt32 Val[], ViInt32* ValActualSize);

/*- List */

ViStatus _VI_FUNC AgE36xx_TransientListDefineRepeatCount(ViSession Vi, ViBoolean ContinuousEnabled, ViInt32 Count, ViInt32 ChanListBufferSize, ViConstString ChanList);
ViStatus _VI_FUNC AgE36xx_TransientListQueryRepeatCount(ViSession Vi, ViInt32 ChanListBufferSize, ViConstString ChanList, ViInt32 ValBufferSize, ViReal64 Val[], ViInt32* ValActualSize);
ViStatus _VI_FUNC AgE36xx_TransientListDefineDataPoints(ViSession Vi, ViInt32 Type, ViInt32 PointsBufferSize, ViReal64 Points[], ViInt32 ChanListBufferSize, ViConstString ChanList);
ViStatus _VI_FUNC AgE36xx_TransientListQueryDataPoints(ViSession Vi, ViInt32 Type, ViInt32 ChanListBufferSize, ViConstString ChanList, ViInt32 ValBufferSize, ViReal64 Val[], ViInt32* ValActualSize);
ViStatus _VI_FUNC AgE36xx_TransientListQueryListLength(ViSession Vi, ViInt32 ListType, ViInt32 ChanListBufferSize, ViConstString ChanList, ViInt32 ValBufferSize, ViInt32 Val[], ViInt32* ValActualSize);
ViStatus _VI_FUNC AgE36xx_TransientListDefineTriggerMode(ViSession Vi, ViInt32 Mode, ViInt32 ChanListBufferSize, ViConstString ChanList);
ViStatus _VI_FUNC AgE36xx_TransientListQueryTriggerMode(ViSession Vi, ViInt32 ChanListBufferSize, ViConstString ChanList, ViInt32 ValBufferSize, ViInt32 Val[], ViInt32* ValActualSize);
ViStatus _VI_FUNC AgE36xx_TransientListDefineTerminationBehavior(ViSession Vi, ViInt32 TermiationBehavior, ViInt32 ChanListBufferSize, ViConstString ChanList);
ViStatus _VI_FUNC AgE36xx_TransientListQueryTerminationBehavior(ViSession Vi, ViInt32 ChanListBufferSize, ViConstString ChanList, ViInt32 ValBufferSize, ViInt32 Val[], ViInt32* ValActualSize);
ViStatus _VI_FUNC AgE36xx_TransientListDefineTriggerOutput(ViSession Vi, ViInt32 Type, ViInt32 PointsBufferSize, ViBoolean Points[], ViInt32 ChanListBufferSize, ViConstString ChanList);
ViStatus _VI_FUNC AgE36xx_TransientListQueryTriggerOutput(ViSession Vi, ViInt32 Type, ViInt32 ChanListBufferSize, ViConstString ChanList, ViInt32 ValBufferSize, ViBoolean Val[], ViInt32* ValActualSize);


/****************************************************************************
 *----------------- Instrument Error And Completion Codes ------------------*
 ****************************************************************************/
#ifndef _IVIC_ERROR_BASE_DEFINES_
#define _IVIC_ERROR_BASE_DEFINES_

#define IVIC_WARN_BASE                           (0x3FFA0000L)
#define IVIC_CROSS_CLASS_WARN_BASE               (IVIC_WARN_BASE + 0x1000)
#define IVIC_CLASS_WARN_BASE                     (IVIC_WARN_BASE + 0x2000)
#define IVIC_SPECIFIC_WARN_BASE                  (IVIC_WARN_BASE + 0x4000)

#define IVIC_ERROR_BASE                          (0xBFFA0000L)
#define IVIC_CROSS_CLASS_ERROR_BASE              (IVIC_ERROR_BASE + 0x1000)
#define IVIC_CLASS_ERROR_BASE                    (IVIC_ERROR_BASE + 0x2000)
#define IVIC_SPECIFIC_ERROR_BASE                 (IVIC_ERROR_BASE + 0x4000)
#define IVIC_LXISYNC_ERROR_BASE                  (IVIC_ERROR_BASE + 0x2000)

#endif


#define AGE36XX_ERROR_CANNOT_RECOVER                        (IVIC_ERROR_BASE + 0x0000)
#define AGE36XX_ERROR_INSTRUMENT_STATUS                     (IVIC_ERROR_BASE + 0x0001)
#define AGE36XX_ERROR_CANNOT_OPEN_FILE                      (IVIC_ERROR_BASE + 0x0002)
#define AGE36XX_ERROR_READING_FILE                          (IVIC_ERROR_BASE + 0x0003)
#define AGE36XX_ERROR_WRITING_FILE                          (IVIC_ERROR_BASE + 0x0004)
#define AGE36XX_ERROR_INVALID_PATHNAME                      (IVIC_ERROR_BASE + 0x000B)
#define AGE36XX_ERROR_INVALID_VALUE                         (IVIC_ERROR_BASE + 0x0010)
#define AGE36XX_ERROR_FUNCTION_NOT_SUPPORTED                (IVIC_ERROR_BASE + 0x0011)
#define AGE36XX_ERROR_ATTRIBUTE_NOT_SUPPORTED               (IVIC_ERROR_BASE + 0x0012)
#define AGE36XX_ERROR_VALUE_NOT_SUPPORTED                   (IVIC_ERROR_BASE + 0x0013)
#define AGE36XX_ERROR_NOT_INITIALIZED                       (IVIC_ERROR_BASE + 0x001D)
#define AGE36XX_ERROR_UNKNOWN_CHANNEL_NAME                  (IVIC_ERROR_BASE + 0x0020)
#define AGE36XX_ERROR_TOO_MANY_OPEN_FILES                   (IVIC_ERROR_BASE + 0x0023)
#define AGE36XX_ERROR_CHANNEL_NAME_REQUIRED                 (IVIC_ERROR_BASE + 0x0044)
#define AGE36XX_ERROR_MISSING_OPTION_NAME                   (IVIC_ERROR_BASE + 0x0049)
#define AGE36XX_ERROR_MISSING_OPTION_VALUE                  (IVIC_ERROR_BASE + 0x004A)
#define AGE36XX_ERROR_BAD_OPTION_NAME                       (IVIC_ERROR_BASE + 0x004B)
#define AGE36XX_ERROR_BAD_OPTION_VALUE                      (IVIC_ERROR_BASE + 0x004C)
#define AGE36XX_ERROR_OUT_OF_MEMORY                         (IVIC_ERROR_BASE + 0x0056)
#define AGE36XX_ERROR_OPERATION_PENDING                     (IVIC_ERROR_BASE + 0x0057)
#define AGE36XX_ERROR_NULL_POINTER                          (IVIC_ERROR_BASE + 0x0058)
#define AGE36XX_ERROR_UNEXPECTED_RESPONSE                   (IVIC_ERROR_BASE + 0x0059)
#define AGE36XX_ERROR_FILE_NOT_FOUND                        (IVIC_ERROR_BASE + 0x005B)
#define AGE36XX_ERROR_INVALID_FILE_FORMAT                   (IVIC_ERROR_BASE + 0x005C)
#define AGE36XX_ERROR_STATUS_NOT_AVAILABLE                  (IVIC_ERROR_BASE + 0x005D)
#define AGE36XX_ERROR_ID_QUERY_FAILED                       (IVIC_ERROR_BASE + 0x005E)
#define AGE36XX_ERROR_RESET_FAILED                          (IVIC_ERROR_BASE + 0x005F)
#define AGE36XX_ERROR_RESOURCE_UNKNOWN                      (IVIC_ERROR_BASE + 0x0060)
#define AGE36XX_ERROR_ALREADY_INITIALIZED                   (IVIC_ERROR_BASE + 0x0061)
#define AGE36XX_ERROR_CANNOT_CHANGE_SIMULATION_STATE        (IVIC_ERROR_BASE + 0x0062)
#define AGE36XX_ERROR_INVALID_NUMBER_OF_LEVELS_IN_SELECTOR  (IVIC_ERROR_BASE + 0x0063)
#define AGE36XX_ERROR_INVALID_RANGE_IN_SELECTOR             (IVIC_ERROR_BASE + 0x0064)
#define AGE36XX_ERROR_UNKOWN_NAME_IN_SELECTOR               (IVIC_ERROR_BASE + 0x0065)
#define AGE36XX_ERROR_BADLY_FORMED_SELECTOR                 (IVIC_ERROR_BASE + 0x0066)
#define AGE36XX_ERROR_UNKNOWN_PHYSICAL_IDENTIFIER           (IVIC_ERROR_BASE + 0x0067)
#define AGE36XX_ERROR_INVALID_ATTRIBUTE                     (IVIC_ERROR_BASE + 0x000C)
#define AGE36XX_ERROR_TYPES_DO_NOT_MATCH                    (IVIC_ERROR_BASE + 0x0015)
#define AGE36XX_ERROR_IVI_ATTR_NOT_WRITABLE                 (IVIC_ERROR_BASE + 0x000D)
#define AGE36XX_ERROR_IVI_ATTR_NOT_READABLE                 (IVIC_ERROR_BASE + 0x000E)
#define AGE36XX_ERROR_INVALID_SESSION_HANDLE                (IVIC_ERROR_BASE + 0x1190)



#define AGE36XX_SUCCESS                                     0
#define AGE36XX_WARN_NSUP_ID_QUERY                          (IVIC_WARN_BASE + 0x0065)
#define AGE36XX_WARN_NSUP_RESET                             (IVIC_WARN_BASE + 0x0066)
#define AGE36XX_WARN_NSUP_SELF_TEST                         (IVIC_WARN_BASE + 0x0067)
#define AGE36XX_WARN_NSUP_ERROR_QUERY                       (IVIC_WARN_BASE + 0x0068)
#define AGE36XX_WARN_NSUP_REV_QUERY                         (IVIC_WARN_BASE + 0x0069)



#define AGE36XX_ERROR_TRIGGER_NOT_SOFTWARE                  (IVIC_CROSS_CLASS_ERROR_BASE + 0x0001)
#define AGE36XX_ERROR_PERSONALITY_NOT_ACTIVE                (IVIC_SPECIFIC_ERROR_BASE + 0x0211)
#define AGE36XX_ERROR_PERSONALITY_NOT_INSTALLED             (IVIC_SPECIFIC_ERROR_BASE + 0x0212)
#define AGE36XX_ERROR_PERSONALITY_NOT_LICENSED              (IVIC_SPECIFIC_ERROR_BASE + 0x0213)
#define AGE36XX_ERROR_IO_GENERAL                            (IVIC_SPECIFIC_ERROR_BASE + 0x0214)
#define AGE36XX_ERROR_IO_TIMEOUT                            (IVIC_SPECIFIC_ERROR_BASE + 0x0215)
#define AGE36XX_ERROR_MODEL_NOT_SUPPORTED                   (IVIC_SPECIFIC_ERROR_BASE + 0x0216)
#define AGE36XX_ERROR_WRAPPED_DRIVER_ERROR                  (IVIC_SPECIFIC_ERROR_BASE + 0x0218)
#define AGE36XX_ERROR_MAX_TIME_EXCEEDED                     (IVIC_SPECIFIC_ERROR_BASE + 0x0217)
#define AGE36XX_ERROR_INVALID_LIST                          (IVIC_SPECIFIC_ERROR_BASE + 0x0219)
