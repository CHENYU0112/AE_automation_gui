#include <cvidef.h>

/*= TP04310 Include File ====================================================*/

#ifndef __TP04310_HEADER
#define __TP04310_HEADER

#include <vpptype.h>

#if defined(__cplusplus) || defined(__cplusplus__)
extern "C" {
#endif

/*****************************************************************************/
/*= Instrument Driver Specific Error/Warning Codes ==========================*/
/*****************************************************************************/
#define VI_ERROR_INSTR_FILE_OPEN                (_VI_ERROR+0x3FFC0800L)
#define VI_ERROR_INSTR_FILE_WRITE               (_VI_ERROR+0x3FFC0801L)
#define VI_ERROR_INSTR_INTERPRETING_RESPONSE    (_VI_ERROR+0x3FFC0803L)
#define VI_ERROR_INSTR_PARAMETER9               (_VI_ERROR+0x3FFC0809L)
#define VI_ERROR_INSTR_PARAMETER10              (_VI_ERROR+0x3FFC080AL)
#define VI_ERROR_INSTR_PARAMETER11              (_VI_ERROR+0x3FFC080BL)
#define VI_ERROR_INSTR_PARAMETER12              (_VI_ERROR+0x3FFC080CL)
#define VI_ERROR_INSTR_PARAMETER13              (_VI_ERROR+0x3FFC080DL)
#define VI_ERROR_INSTR_PARAMETER14              (_VI_ERROR+0x3FFC080EL)
#define VI_ERROR_INSTR_PARAMETER15              (_VI_ERROR+0x3FFC080FL)

/*****************************************************************************/
/*= Define Instrument Specific Error/Warning Codes Here =====================*/
/*****************************************************************************/
#define VI_WARNING_INSTR_OFFSET                           (0x3FFC0900L)
#define VI_ERROR_INSTR_OFFSET                   (_VI_ERROR+0x3FFC0900L)

#define TP04310_ERROR_INVALID_CONFIGURATION     (VI_ERROR_INSTR_OFFSET + 0xF0L)

#define TP04310_EROR_OVERHEAT          			(VI_ERROR_INSTR_OFFSET + 0xF1L)
#define TP04310_EROR_AIR_OPEN_LOOP              (VI_ERROR_INSTR_OFFSET + 0xF2L)
#define TP04310_EROR_RESERVED_BIT2              (VI_ERROR_INSTR_OFFSET + 0xF3L)
#define TP04310_EROR_LOW_FLOW                   (VI_ERROR_INSTR_OFFSET + 0xF4L)
#define TP04310_EROR_LOW_PRESSURE               (VI_ERROR_INSTR_OFFSET + 0xF5L)
#define TP04310_EROR_AIR_SENSOR_OPEN            (VI_ERROR_INSTR_OFFSET + 0xF6L)
#define TP04310_EROR_RESERVED_BIT6              (VI_ERROR_INSTR_OFFSET + 0xF7L)
#define TP04310_EROR_INTERNAL_ERROR             (VI_ERROR_INSTR_OFFSET + 0xF8L)
#define TP04310_EROR_RESERVED_BIT8              (VI_ERROR_INSTR_OFFSET + 0xF9L)
#define TP04310_EROR_FLOW_SENSOR_FAILURE        (VI_ERROR_INSTR_OFFSET + 0xFAL)
#define TP04310_EROR_AC_ABSENT                  (VI_ERROR_INSTR_OFFSET + 0xFBL)
#define TP04310_EROR_NVRAM_FAULT                (VI_ERROR_INSTR_OFFSET + 0xFCL)
#define TP04310_EROR_BVRAM_FAULT                (VI_ERROR_INSTR_OFFSET + 0xFDL)
#define TP04310_EROR_RESERVED_BIT13             (VI_ERROR_INSTR_OFFSET + 0xFEL)
#define TP04310_EROR_NO_DSNS_SELECTED	        (VI_ERROR_INSTR_OFFSET + 0xFFL)
#define TP04310_EROR_RESERVED_BIT15             (VI_ERROR_INSTR_OFFSET + 0x100L)

#define VI_ERROR_INSTR_QUERY_ERROR              (VI_ERROR_INSTR_OFFSET + 0x200L)
#define VI_ERROR_INSTR_COMMAND_ERROR            (VI_ERROR_INSTR_OFFSET + 0x201L)

/*****************************************************************************/
/*= GLOBAL USER-CALLABLE FUNCTION DECLARATIONS (Exportable Functions) =======*/
/*****************************************************************************/
ViStatus _VI_FUNC TP04310_init (ViRsrc resourceName,
								ViBoolean IDQuery,
                    			ViBoolean resetDevice,
								ViInt32 baudRate,
								ViInt16 parity,
            					ViInt32 timeoutmSec,
								ViPSession instrSession);

ViStatus _VI_FUNC TP04310_write_config_parameter (ViSession instrumentHandle,
                                                  ViInt16 configParamID,
                                                  ViInt16 configParamValue);

ViStatus _VI_FUNC TP04310_read_config_parameter (ViSession instrumentHandle,
                                                 ViInt16 configParamID,
                                                 ViInt16 _VI_FAR *configParamValue);

ViStatus _VI_FUNC TP04310_write_setpoint_info (ViSession instrumentHandle,
                                               ViInt16  setpNumber,
                                               ViReal64 setpTemperature,
                                               ViReal64 setpWindow,
                                               ViInt16  setpSoakTime,
                                               ViReal64  setpRampRate);

ViStatus _VI_FUNC TP04310_read_setpoint_info (ViSession instrumentHandle,
                                              ViInt16  _VI_FAR *setpNumber,
                                              ViReal64 _VI_FAR *setpTemperature,
                                              ViReal64 _VI_FAR *setpWindow,
                                              ViInt16  _VI_FAR *setpSoakTime,
                                              ViReal64 _VI_FAR *setpointRampRate);

ViStatus _VI_FUNC TP04310_write_setpoint_number (ViSession instrumentHandle,
                                                 ViInt16 setpNumber);

ViStatus _VI_FUNC TP04310_read_setpoint_number (ViSession instrumentHandle,
                                                ViInt16 _VI_FAR *setpNumber);


ViStatus _VI_FUNC TP04310_write_setpoint_temperature (ViSession instrumentHandle,
                                                      ViReal64 setpTemperature);

ViStatus _VI_FUNC TP04310_read_setpoint_temperature (ViSession instrumentHandle,
                                                     ViReal64 _VI_FAR *setpTemperature);

ViStatus _VI_FUNC TP04310_write_setpoint_window (ViSession instrumentHandle,
                                                 ViReal64 setpWindow);

ViStatus _VI_FUNC TP04310_read_setpoint_window (ViSession instrumentHandle,
                                                ViReal64 _VI_FAR *setpointWindow);

ViStatus _VI_FUNC TP04310_write_setpoint_soak (ViSession instrumentHandle,
                                               ViInt16 setpSoak);

ViStatus _VI_FUNC TP04310_read_setpoint_soak (ViSession instrumentHandle,
                                              ViInt16 _VI_FAR *setpSoak);

ViStatus _VI_FUNC TP04310_write_setpoint_ramp (ViSession instrumentHandle,
                                               ViReal64 setpRamp);

ViStatus _VI_FUNC TP04310_read_setpoint_ramp (ViSession instrumentHandle,
                                              ViReal64 _VI_FAR *setpRamp);

ViStatus _VI_FUNC TP04310_load_setup_file (ViSession instrumentHandle,
                                           ViInt16 setupFile);

ViStatus _VI_FUNC TP04310_save_setup (ViSession instrumentHandle,
                                      ViInt16 setupFile);

ViStatus _VI_FUNC TP04310_read_SRE (ViSession instrumentHandle,
                                    ViInt16 _VI_FAR *SRE_register);

ViStatus _VI_FUNC TP04310_write_SRE (ViSession instrumentHandle,
                                     ViInt16 SRE_register);

ViStatus _VI_FUNC TP04310_read_TESE (ViSession instrumentHandle,
                                     ViInt16 _VI_FAR *TESE_register);

ViStatus _VI_FUNC TP04310_write_TESE (ViSession instrumentHandle,
                                      ViInt16 TESE_register);

ViStatus _VI_FUNC TP04310_read_ESE (ViSession instrumentHandle,
                                    ViInt16 _VI_FAR *ESE_register);

ViStatus _VI_FUNC TP04310_write_ESE (ViSession instrumentHandle,
                                     ViInt16 ESE_register);

ViStatus _VI_FUNC TP04310_cycle (ViSession instrumentHandle,
                                        ViInt16 startStopCycling);

ViStatus _VI_FUNC TP04310_cycle_query (ViSession instrumentHandle,
                                       ViInt16 _VI_FAR *cyclingStatus);

ViStatus _VI_FUNC TP04310_next_setpoint (ViSession instrumentHandle);

ViStatus _VI_FUNC TP04310_read_STB (ViSession instrumentHandle,
                                    ViInt16 _VI_FAR *status_byte);

ViStatus _VI_FUNC TP04310_read_ESR (ViSession instrumentHandle,
                                    ViInt16 _VI_FAR *ESR_register);

ViStatus _VI_FUNC TP04310_read_TESR (ViSession instrumentHandle,
                                     ViInt16 _VI_FAR *TESR_register);

ViStatus _VI_FUNC TP04310_read_TECR (ViSession instrumentHandle,
                                     ViInt16 _VI_FAR *TECR_register);

ViStatus _VI_FUNC TP04310_read_AUXC (ViSession instrumentHandle,
                                     ViInt16 _VI_FAR *auxc_register);

ViStatus _VI_FUNC TP04310_read_air_flow_scfm (ViSession instrumentHandle,
                                              ViReal64 _VI_FAR *currentAirFlow_scfm);

ViStatus _VI_FUNC TP04310_read_air_flow_lites_per_sec (ViSession instrumentHandle,
                                                       ViReal64 _VI_FAR *currentAirFlow_l_s);

ViStatus _VI_FUNC TP04310_read_dynamic_setpoint (ViSession instrumentHandle,
                                                 ViReal64 _VI_FAR *dynamicSetpoint);

ViStatus _VI_FUNC TP04310_read_control_temperature (ViSession instrumentHandle,
                                                    ViReal64 _VI_FAR *controlTemperature);

ViStatus _VI_FUNC TP04310_read_air_temperature (ViSession instrumentHandle,
                                                ViReal64 _VI_FAR *airTemperature);

ViStatus _VI_FUNC TP04310_read_DUT_temperature (ViSession instrumentHandle,
                                                ViReal64 _VI_FAR *DUTTemperature);

ViStatus _VI_FUNC TP04310_writeInstrData (ViSession instrumentHandle, ViString writeBuffer);

ViStatus _VI_FUNC TP04310_readInstrData (ViSession instrumentHandle,
                    ViInt32 numberBytesToRead, ViChar _VI_FAR readBuffer[], ViPInt32 numBytesRead);

ViStatus _VI_FUNC TP04310_reset (ViSession instrumentHandle);

ViStatus _VI_FUNC TP04310_reset_op_screen (ViSession instrumentHandle);

ViStatus _VI_FUNC TP04310_device_clear (ViSession instrumentHandle);

ViStatus _VI_FUNC TP04310_device_error_clear (ViSession instrumentHandle);

ViStatus _VI_FUNC TP04310_selfTest (ViSession instrSession, ViPInt16 selfTestResult,
                    ViChar _VI_FAR selfTestMessage[]);

ViStatus _VI_FUNC TP04310_errorQuery (ViSession instrSession, ViPInt32 errorCode,
                    ViChar _VI_FAR errorMessage[]);

ViStatus _VI_FUNC TP04310_errorMessage (ViSession instrSession, ViStatus statusCode,
                    ViChar _VI_FAR message[]);

ViStatus _VI_FUNC TP04310_revisionQuery (ViSession instrSession,
                    ViChar _VI_FAR driverRev[], ViChar _VI_FAR instrRev[]);

ViStatus _VI_FUNC TP04310_reconfigInterface (ViSession instrumentHandle, ViInt32 baudRate,
                                   ViInt16 parity, ViInt32 timeoutmSec);

ViStatus _VI_FUNC TP04310_write_device_command (ViSession instrumentHandle,
                                                ViInt16 instrCmd,
                                                ViInt16 cmdArg);

ViStatus _VI_FUNC TP04310_read_device_state (ViSession instrumentHandle,
                                              ViInt16 instrCmd,
                                              ViInt16 _VI_FAR *cmdArg);

ViStatus _VI_FUNC TP04310_close (ViSession instrSession);


/******************************************************************************/
/*========= Instrument Specific Configuration Parameter IDs ==================*/
/******************************************************************************/

#define TP04310_CONFIG_NONE						      0x0000
#define TP04310_CONFIG_CYCLE_COUNT                    0x0001
#define TP04310_CONFIG_SHUTDOWN_TIMER                 0x0002
#define TP04310_CONFIG_TEST_TIME                      0x0003
#define TP04310_CONFIG_DUT_SENSOR_TYPE                0x0004
#define TP04310_CONFIG_DUT_THERMAL_CONSTANT           0x0005
#define TP04310_CONFIG_DUT_MODE                       0x0006
#define TP04310_CONFIG_AIR_LOW_TEMP_LIMIT             0x0007
#define TP04310_CONFIG_AIR_HIGH_TEMP_LIMIT            0x0008
#define TP04310_CONFIG_AIR_TO_DUT_MAX_DIFFERENCE      0x0009

/******************************************************************************/
/*=======  Instrument Specific Command Parameter IDs Here ====================*/
/******************************************************************************/
#define TP04310_CMD_AIR           0x00
#define TP04310_CMD_HEAD		  0x01
#define TP04310_CMD_COMPRESSOR    0x02

#if defined(__cplusplus) || defined(__cplusplus__)
}
#endif

/*****************************************************************************/
/*=== END INCLUDE FILE ======================================================*/
/*****************************************************************************/

#endif
