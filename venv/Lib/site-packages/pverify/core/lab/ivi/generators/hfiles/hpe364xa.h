/**********************************************************************************
 *                       HP DC Power Supplies Models E364XA
 *---------------------------------------------------------------------------------
 *  Copyright 2000-2015, National Instruments, Corporation.  All Rights Reserved.
 *---------------------------------------------------------------------------------
 *
 * Title:    hpe364xa.h
 * Purpose:  HP DC Power Supplies Models E364XA
 *           instrument driver declarations.
 *
 *  Modification History:
 *  2015-03-19 [ZYC] - Revision 3.2
 *						Updated driver to comply with IVI-2014 generation.
 *  2010-05-25 [CZ] - Revision 3.1
 *                      Porting driver to 64-bits
 **********************************************************************************/

#ifndef __HPE364XA_HEADER
#define __HPE364XA_HEADER

#include <ivi.h>
#include <ividcpwr.h>

#if defined(__cplusplus) || defined(__cplusplus__)
extern "C" {
#endif

/****************************************************************************
 *----------------- Instrument Driver Revision Information -----------------*
 ****************************************************************************/
#define HPE364XA_MAJOR_VERSION                3     /* Instrument driver major version   */
#define HPE364XA_MINOR_VERSION                2     /* Instrument driver minor version   */

#define HPE364XA_CLASS_SPEC_MAJOR_VERSION     3     /* Class specification major version */
#define HPE364XA_CLASS_SPEC_MINOR_VERSION     0     /* Class specification minor version */

#define HPE364XA_SUPPORTED_INSTRUMENT_MODELS  "E3640A,E3641A,E3642A,E3643A,E3644A,E3645A,E3646A,E3647A,E3648A,E3649A"
#define HPE364XA_DRIVER_VENDOR                "National Instruments"

#ifdef _IVI_mswin64_
#define HPE364XA_DRIVER_DESCRIPTION           "KeySight/Agilent DC Power Supplies [Compiled for 64-bit.]"
#else
#define HPE364XA_DRIVER_DESCRIPTION           "KeySight/Agilent DC Power Supplies"
#endif



/****************************************************************************
 *------------------------------ Useful Macros -----------------------------*
 ****************************************************************************/

    /*- Defined values for rangeType parameter of function -----------------*/
    /*- ConfigureOutputRange -----------------------------------------------*/
#define HPE364XA_VAL_RANGE_CURRENT               IVIDCPWR_VAL_RANGE_CURRENT
#define HPE364XA_VAL_RANGE_VOLTAGE               IVIDCPWR_VAL_RANGE_VOLTAGE

    /*- Defined values for outputState parameter of function ---------------*/
    /*- QueryOutputState ---------------------------------------------------*/
#define HPE364XA_VAL_OUTPUT_CONSTANT_VOLTAGE     IVIDCPWR_VAL_OUTPUT_CONSTANT_VOLTAGE
#define HPE364XA_VAL_OUTPUT_CONSTANT_CURRENT     IVIDCPWR_VAL_OUTPUT_CONSTANT_CURRENT
#define HPE364XA_VAL_OUTPUT_OVER_VOLTAGE         IVIDCPWR_VAL_OUTPUT_OVER_VOLTAGE
#define HPE364XA_VAL_OUTPUT_UNREGULATED          IVIDCPWR_VAL_OUTPUT_UNREGULATED
#define HPE364XA_VAL_OUTPUT_OVER_TEMPERATURE    (IVIDCPWR_VAL_OUTPUT_STATE_SPECIFIC_EXT_BASE + 1L)

    /*- Defined values for measurementType parameter of function -----------*/
    /*- Measure ------------------------------------------------------------*/
#define HPE364XA_VAL_MEASURE_CURRENT             IVIDCPWR_VAL_MEASURE_CURRENT
#define HPE364XA_VAL_MEASURE_VOLTAGE             IVIDCPWR_VAL_MEASURE_VOLTAGE

/****************************************************************************
 *---------------------------- Attribute Defines ---------------------------*
 ****************************************************************************/

    /*- IVI Inherent Instrument Attributes ---------------------------------*/

        /* User Options */
#define HPE364XA_ATTR_RANGE_CHECK                   IVI_ATTR_RANGE_CHECK                    /* ViBoolean */
#define HPE364XA_ATTR_QUERY_INSTRUMENT_STATUS       IVI_ATTR_QUERY_INSTRUMENT_STATUS        /* ViBoolean */
#define HPE364XA_ATTR_CACHE                         IVI_ATTR_CACHE                          /* ViBoolean */
#define HPE364XA_ATTR_SIMULATE                      IVI_ATTR_SIMULATE                       /* ViBoolean */
#define HPE364XA_ATTR_RECORD_COERCIONS              IVI_ATTR_RECORD_COERCIONS               /* ViBoolean */

#define HPE364XA_ATTR_DRIVER_SETUP                  IVI_ATTR_DRIVER_SETUP                   /* ViString */
#define HPE364XA_ATTR_INTERCHANGE_CHECK             IVI_ATTR_INTERCHANGE_CHECK              /* ViBoolean */

        /* Instrument Capabilities */
#define HPE364XA_ATTR_CHANNEL_COUNT                 IVI_ATTR_CHANNEL_COUNT                  /* ViInt32,  read-only  */

        /* Driver Information  */
#define HPE364XA_ATTR_SPECIFIC_DRIVER_PREFIX        IVI_ATTR_SPECIFIC_DRIVER_PREFIX         /* ViString, read-only  */
#define HPE364XA_ATTR_SUPPORTED_INSTRUMENT_MODELS   IVI_ATTR_SUPPORTED_INSTRUMENT_MODELS    /* ViString, read-only  */
#define HPE364XA_ATTR_GROUP_CAPABILITIES            IVI_ATTR_GROUP_CAPABILITIES             /* ViString, read-only  */
#define HPE364XA_ATTR_INSTRUMENT_MANUFACTURER       IVI_ATTR_INSTRUMENT_MANUFACTURER        /* ViString, read-only  */
#define HPE364XA_ATTR_INSTRUMENT_MODEL              IVI_ATTR_INSTRUMENT_MODEL               /* ViString, read-only  */
#define HPE364XA_ATTR_INSTRUMENT_FIRMWARE_REVISION  IVI_ATTR_INSTRUMENT_FIRMWARE_REVISION   /* ViString, read-only  */
#define HPE364XA_ATTR_SPECIFIC_DRIVER_REVISION      IVI_ATTR_SPECIFIC_DRIVER_REVISION       /* ViString, read-only  */
#define HPE364XA_ATTR_SPECIFIC_DRIVER_VENDOR        IVI_ATTR_SPECIFIC_DRIVER_VENDOR         /* ViString, read-only  */
#define HPE364XA_ATTR_SPECIFIC_DRIVER_DESCRIPTION   IVI_ATTR_SPECIFIC_DRIVER_DESCRIPTION    /* ViString, read-only  */
#define HPE364XA_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION /* ViInt32, read-only */
#define HPE364XA_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION /* ViInt32, read-only */

        /* Advanced Session Information */
#define HPE364XA_ATTR_LOGICAL_NAME                  IVI_ATTR_LOGICAL_NAME                   /* ViString, read-only  */
#define HPE364XA_ATTR_IO_RESOURCE_DESCRIPTOR        IVI_ATTR_IO_RESOURCE_DESCRIPTOR         /* ViString, read-only  */


    /*- Instrument-Specific Attributes -------------------------------------*/

    /*- Basic Instrument Operations ----------------------------------------*/
#define HPE364XA_ATTR_VOLTAGE_LEVEL             IVIDCPWR_ATTR_VOLTAGE_LEVEL           /* ViReal64,  multi-channel, volts */
#define HPE364XA_ATTR_OVP_ENABLED               IVIDCPWR_ATTR_OVP_ENABLED             /* ViBoolean, multi-channel        */
#define HPE364XA_ATTR_OVP_LIMIT                 IVIDCPWR_ATTR_OVP_LIMIT               /* ViReal64,  multi-channel, volts */
#define HPE364XA_ATTR_CURRENT_LIMIT_BEHAVIOR    IVIDCPWR_ATTR_CURRENT_LIMIT_BEHAVIOR  /* ViInt32,   multi-channel        */
#define HPE364XA_ATTR_CURRENT_LIMIT             IVIDCPWR_ATTR_CURRENT_LIMIT           /* ViReal64,  multi-channel, amps  */
#define HPE364XA_ATTR_OUTPUT_ENABLED            IVIDCPWR_ATTR_OUTPUT_ENABLED          /* ViBoolean, multi-channel        */

    /*- Trigger Attributes -------------------------------------------------*/
#define HPE364XA_ATTR_TRIGGER_SOURCE            IVIDCPWR_ATTR_TRIGGER_SOURCE          /* ViInt32,   multi-channel        */
#define HPE364XA_ATTR_TRIGGERED_CURRENT_LIMIT   IVIDCPWR_ATTR_TRIGGERED_CURRENT_LIMIT /* ViReal64,  multi-channel, amps  */
#define HPE364XA_ATTR_TRIGGERED_VOLTAGE_LEVEL   IVIDCPWR_ATTR_TRIGGERED_VOLTAGE_LEVEL /* ViReal64,  multi-channel, volts */
#define HPE364XA_ATTR_TRIGGER_DELAY             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2L)  /* ViReal64, multi-channel, seconds */

    /*- Miscellaneous Attributes -------------------------------------------------*/
#define HPE364XA_ATTR_ID_QUERY_RESPONSE         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1L)  /* ViString (Read Only) */
#define HPE364XA_ATTR_OUTPUT_RELAY_ENABLED      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3L)  /* ViBoolean */

/****************************************************************************
 *------------------------ Attribute Value Defines -------------------------*
 ****************************************************************************/
    /*- Defined values for attribute HPE364XA_ATTR_CURRENT_LIMIT_BEHAVIOR ---*/
#define HPE364XA_VAL_CURRENT_REGULATE           IVIDCPWR_VAL_CURRENT_REGULATE

    /*- Defined values for attribute HPE364XA_ATTR_TRIGGER_SOURCE -----------*/
#define HPE364XA_VAL_TRIG_IMMEDIATE             IVIDCPWR_VAL_TRIG_IMMEDIATE
#define HPE364XA_VAL_SOFTWARE_TRIG              IVIDCPWR_VAL_SOFTWARE_TRIG

#define HPE364XA_VAL_LOW_RANGE                                      0
#define HPE364XA_VAL_HIGH_RANGE                                     1


    /* Instrument specific attribute value definitions */

/****************************************************************************
 *---------------- Instrument Driver Function Declarations -----------------*
 ****************************************************************************/

    /*- Init and Close Functions -------------------------------------------*/
ViStatus _VI_FUNC  hpe364xa_init(
    ViRsrc      resourceName,
    ViBoolean   IDQuery,
    ViBoolean   resetDevice,
    ViSession*  vi
);
ViStatus _VI_FUNC  hpe364xa_InitWithOptions(
    ViRsrc          resourceName,
    ViBoolean       IDQuery,
    ViBoolean       resetDevice,
    ViConstString   optionString,
    ViSession*      newVi
);
ViStatus _VI_FUNC  hpe364xa_close(
    ViSession   vi
);

    /*- Coercion Info Functions --------------------------------------------*/
ViStatus _VI_FUNC  hpe364xa_GetNextCoercionRecord(
    ViSession   vi,
    ViInt32     bufferSize,
    ViChar      record[]
);

    /*- Locking Functions --------------------------------------------------*/
ViStatus _VI_FUNC  hpe364xa_LockSession(
    ViSession   vi,
    ViBoolean*  callerHasLock
);
ViStatus _VI_FUNC  hpe364xa_UnlockSession(
    ViSession   vi,
    ViBoolean*  callerHasLock
);

    /*- Basic Instrument Operation -----------------------------------------*/
ViStatus _VI_FUNC  hpe364xa_ConfigureOutputEnabled(
    ViSession vi,
    ViConstString channelName,
    ViBoolean enabled
);
ViStatus _VI_FUNC  hpe364xa_ConfigureOutputRange(
    ViSession       vi,
    ViConstString   channelName,
    ViInt32         rangeType,
    ViReal64        range
);
ViStatus _VI_FUNC  hpe364xa_ConfigureCurrentLimit(
    ViSession       vi,
    ViConstString   channelName,
    ViInt32         behavior,
    ViReal64        limit
);
ViStatus _VI_FUNC  hpe364xa_ConfigureOVP(
    ViSession       vi,
    ViConstString   channelName,
    ViBoolean       enabled,
    ViReal64        limit
);
ViStatus _VI_FUNC  hpe364xa_ConfigureVoltageLevel(
    ViSession       vi,
    ViConstString   channelName,
    ViReal64        level
);
ViStatus _VI_FUNC  hpe364xa_QueryOutputState(
    ViSession       vi,
    ViConstString   channelName,
    ViInt32         outputState,
    ViBoolean*      inState
);
ViStatus _VI_FUNC  hpe364xa_QueryMaxCurrentLimit(
    ViSession       vi,
    ViConstString   channelName,
    ViReal64        voltageLevel,
    ViReal64*       maxCurrentLimit
);
ViStatus _VI_FUNC  hpe364xa_QueryMaxVoltageLevel(
    ViSession       vi,
    ViConstString   channelName,
    ViReal64        currentLimit,
    ViReal64*       maxVoltageLevel
);
ViStatus _VI_FUNC  hpe364xa_ResetOutputProtection(
    ViSession       vi,
    ViConstString   channelName
);

    /*- Triggering ---------------------------------------------------------*/
ViStatus _VI_FUNC  hpe364xa_ConfigureTriggerSource(
    ViSession       vi,
    ViConstString   channelName,
    ViInt32         source
);
ViStatus _VI_FUNC  hpe364xa_ConfigureTriggeredVoltageLevel(
    ViSession       vi,
    ViConstString   channelName,
    ViReal64        level
);
ViStatus _VI_FUNC  hpe364xa_ConfigureTriggeredCurrentLimit(
    ViSession       vi,
    ViConstString   channelName,
    ViReal64        limit
);
ViStatus _VI_FUNC  hpe364xa_ConfigureTriggerDelay(
    ViSession       vi,
    ViConstString   channelName,
    ViReal64        triggeredDelay
);
ViStatus _VI_FUNC  hpe364xa_Abort(
    ViSession   vi
);
ViStatus _VI_FUNC  hpe364xa_Initiate(
    ViSession   vi
);

    /*- Software Triggering ------------------------------------------------*/
ViStatus _VI_FUNC  hpe364xa_SendSoftwareTrigger(
    ViSession   vi
);

    /*- Measuring ----------------------------------------------------------*/
ViStatus _VI_FUNC  hpe364xa_Measure(
    ViSession       vi,
    ViConstString   channelName,
    ViInt32         measurementType,
    ViReal64*       measurement
);

    /*- Error Functions ----------------------------------------------------*/
ViStatus _VI_FUNC  hpe364xa_error_query(
    ViSession   vi,
    ViInt32*    errorCode,
    ViChar      errorMessage[]
);
ViStatus _VI_FUNC  hpe364xa_error_message(
    ViSession   vi,
    ViStatus    errorCode,
    ViChar      errorMessage[256]
);
ViStatus _VI_FUNC  hpe364xa_GetError(
    ViSession   vi,
    ViStatus*   errorCode,
    ViInt32     bufferSize,
    ViChar      description[]
);
ViStatus _VI_FUNC  hpe364xa_ClearError(
    ViSession   vi
);

    /*- Channel Info Functions ---------------------------------------------*/
ViStatus _VI_FUNC hpe364xa_GetChannelName(
    ViSession   vi,
    ViInt32     index,
    ViInt32     bufferSize,
    ViChar      name[]
);

    /*- Interchangeability Checking Functions ------------------------------*/
ViStatus _VI_FUNC hpe364xa_GetNextInterchangeWarning(
    ViSession   vi,
    ViInt32     bufferSize,
    ViChar      warnString[]
);
ViStatus _VI_FUNC hpe364xa_ResetInterchangeCheck(
    ViSession   vi
);
ViStatus _VI_FUNC hpe364xa_ClearInterchangeWarnings(
    ViSession   vi
);

    /*- Utility Functions --------------------------------------------------*/
ViStatus _VI_FUNC  hpe364xa_reset(
    ViSession   vi
);
ViStatus _VI_FUNC  hpe364xa_ResetWithDefaults(
    ViSession   vi
);
ViStatus _VI_FUNC  hpe364xa_Disable(
    ViSession   vi
);
ViStatus _VI_FUNC  hpe364xa_InvalidateAllAttributes(
    ViSession   vi
);
ViStatus _VI_FUNC  hpe364xa_self_test(
    ViSession   vi,
    ViInt16*    selfTestResult,
    ViChar      selfTestMessage[]
);
ViStatus _VI_FUNC  hpe364xa_revision_query(
    ViSession   vi,
    ViChar      instrumentDriverRevision[],
    ViChar      firmwareRevision[]
);

ViStatus _VI_FUNC  hpe364xa_viWrite (
	ViSession vi,
	ViByte buffer[],
	ViInt64 count,
	ViInt64 *returnCount
);
ViStatus _VI_FUNC  hpe364xa_viRead (
	ViSession vi,
	ViInt64 bufferSize,
	ViByte buffer[],
	ViInt64 *returnCount
);
/* Obsolete Direct IO Functions. */
ViStatus _VI_FUNC  hpe364xa_WriteInstrData(
    ViSession       vi,
    ViConstString   writeBuffer
);
ViStatus _VI_FUNC  hpe364xa_ReadInstrData(
    ViSession       vi,
    ViInt32         numBytes,
    ViChar          rdBuf[],
    ViInt32*        bytesRead
);


    /*- Set, Get, and Check Attribute Functions ----------------------------*/
ViStatus _VI_FUNC  hpe364xa_GetAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 *value);
ViStatus _VI_FUNC  hpe364xa_GetAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 *value);
ViStatus _VI_FUNC  hpe364xa_GetAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 bufSize, ViChar value[]);
ViStatus _VI_FUNC  hpe364xa_GetAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession *value);
ViStatus _VI_FUNC  hpe364xa_GetAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean *value);

ViStatus _VI_FUNC  hpe364xa_SetAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value);
ViStatus _VI_FUNC  hpe364xa_SetAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value);
ViStatus _VI_FUNC  hpe364xa_SetAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value);
ViStatus _VI_FUNC  hpe364xa_SetAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value);
ViStatus _VI_FUNC  hpe364xa_SetAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value);

ViStatus _VI_FUNC  hpe364xa_CheckAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value);
ViStatus _VI_FUNC  hpe364xa_CheckAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value);
ViStatus _VI_FUNC  hpe364xa_CheckAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value);
ViStatus _VI_FUNC  hpe364xa_CheckAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value);
ViStatus _VI_FUNC  hpe364xa_CheckAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value);

    /*********************************************************
        Functions reserved for class driver use only.
        End-users should not call these functions.
     *********************************************************/
ViStatus _VI_FUNC  hpe364xa_IviInit (ViRsrc resourceName, ViBoolean IDQuery,
                                     ViBoolean reset, ViSession vi);
ViStatus _VI_FUNC  hpe364xa_IviClose (ViSession vi);

/****************************************************************************
 *------------------------ Error And Completion Codes ----------------------*
 ****************************************************************************/
#define HPE364XA_ERROR_TRIGGER_NOT_SOFTWARE         IVIDCPWR_ERROR_TRIGGER_NOT_SOFTWARE

/****************************************************************************
 *--------- Obsolete Inherent Instrument Attributes and functions ----------*
 ****************************************************************************/
    /*- These attributes and functions have been deprecated and may not
        be supported in future versions of this driver. -*/

         /* Driver Information  */
#define HPE364XA_ATTR_SPECIFIC_DRIVER_MAJOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_MAJOR_VERSION  /* ViInt32,  read-only  */
#define HPE364XA_ATTR_SPECIFIC_DRIVER_MINOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_MINOR_VERSION  /* ViInt32,  read-only  */

        /* Error Info */
#define HPE364XA_ATTR_PRIMARY_ERROR                 IVI_ATTR_PRIMARY_ERROR                  /* ViInt32   */
#define HPE364XA_ATTR_SECONDARY_ERROR               IVI_ATTR_SECONDARY_ERROR                /* ViInt32   */
#define HPE364XA_ATTR_ERROR_ELABORATION             IVI_ATTR_ERROR_ELABORATION              /* ViString  */

        /* Advanced Session Information */
#define HPE364XA_ATTR_IO_SESSION_TYPE               IVI_ATTR_IO_SESSION_TYPE                /* ViString, read-only  */
#define HPE364XA_ATTR_IO_SESSION                    IVI_ATTR_IO_SESSION                     /* ViSession, read-only */

        /*- Deprecated Attribute Identifiers for Renamed Attributes -*/
#define HPE364XA_ATTR_NUM_CHANNELS                  HPE364XA_ATTR_CHANNEL_COUNT             /* ViInt32,  read-only  */
#define HPE364XA_ATTR_QUERY_INSTR_STATUS            HPE364XA_ATTR_QUERY_INSTRUMENT_STATUS   /* ViBoolean */
#define HPE364XA_ATTR_RESOURCE_DESCRIPTOR           HPE364XA_ATTR_IO_RESOURCE_DESCRIPTOR    /* ViString, read-only  */


        /*- Deprecated Error Information functions -*/
ViStatus _VI_FUNC  hpe364xa_GetErrorInfo (ViSession vi, ViStatus *primaryError,
                                          ViStatus *secondaryError,
                                          ViChar errorElaboration[256]);
ViStatus _VI_FUNC  hpe364xa_ClearErrorInfo (ViSession vi);

/****************************************************************************
 *---------------------------- End Include File ----------------------------*
 ****************************************************************************/
#if defined(__cplusplus) || defined(__cplusplus__)
}
#endif
#endif /* __HPE364XA_HEADER */
