/******************************************************************************
 *
 * Copyright Keysight Technologies 2004-2015
 *
 *****************************************************************************/

#ifndef __AGN57XX_HEADER
#define __AGN57XX_HEADER

#include <ivivisatype.h>

#if defined(__cplusplus) || defined(__cplusplus__)
extern "C" {
#endif

/****************************************************************************
 *---------------------------- Attribute Defines ---------------------------*
 ****************************************************************************/
#ifndef IVI_ATTR_BASE
#define IVI_ATTR_BASE                 1000000
#endif

#ifndef IVI_INHERENT_ATTR_BASE
#define IVI_INHERENT_ATTR_BASE        (IVI_ATTR_BASE +  50000)   /* base for inherent capability attributes */
#endif

#ifndef IVI_CLASS_ATTR_BASE
#define IVI_CLASS_ATTR_BASE           (IVI_ATTR_BASE + 250000)   /* base for IVI-defined class attributes */
#endif

#ifndef IVI_LXISYNC_ATTR_BASE
#define IVI_LXISYNC_ATTR_BASE         (IVI_ATTR_BASE + 950000)   /* base for IviLxiSync attributes */
#endif

#ifndef IVI_SPECIFIC_ATTR_BASE
#define IVI_SPECIFIC_ATTR_BASE        (IVI_ATTR_BASE + 150000)   /* base for attributes of specific drivers */
#endif


/*===== IVI Inherent Instrument Attributes ==============================*/

/*- Driver Identification */

#define AGN57XX_ATTR_SPECIFIC_DRIVER_DESCRIPTION              (IVI_INHERENT_ATTR_BASE + 514L)  /* ViString, read-only */
#define AGN57XX_ATTR_SPECIFIC_DRIVER_PREFIX                   (IVI_INHERENT_ATTR_BASE + 302L)  /* ViString, read-only */
#define AGN57XX_ATTR_SPECIFIC_DRIVER_VENDOR                   (IVI_INHERENT_ATTR_BASE + 513L)  /* ViString, read-only */
#define AGN57XX_ATTR_SPECIFIC_DRIVER_REVISION                 (IVI_INHERENT_ATTR_BASE + 551L)  /* ViString, read-only */
#define AGN57XX_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION (IVI_INHERENT_ATTR_BASE + 515L)  /* ViInt32, read-only */
#define AGN57XX_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION (IVI_INHERENT_ATTR_BASE + 516L)  /* ViInt32, read-only */

/*- User Options */

#define AGN57XX_ATTR_RANGE_CHECK                            (IVI_INHERENT_ATTR_BASE + 2L)  /* ViBoolean, read-write */
#define AGN57XX_ATTR_QUERY_INSTRUMENT_STATUS                (IVI_INHERENT_ATTR_BASE + 3L)  /* ViBoolean, read-write */
#define AGN57XX_ATTR_CACHE                                  (IVI_INHERENT_ATTR_BASE + 4L)  /* ViBoolean, read-write */
#define AGN57XX_ATTR_SIMULATE                               (IVI_INHERENT_ATTR_BASE + 5L)  /* ViBoolean, read-write */
#define AGN57XX_ATTR_RECORD_COERCIONS                       (IVI_INHERENT_ATTR_BASE + 6L)  /* ViBoolean, read-write */
#define AGN57XX_ATTR_INTERCHANGE_CHECK                      (IVI_INHERENT_ATTR_BASE + 21L)  /* ViBoolean, read-write */

/*- Advanced Session Information */

#define AGN57XX_ATTR_LOGICAL_NAME                           (IVI_INHERENT_ATTR_BASE + 305L)  /* ViString, read-only */
#define AGN57XX_ATTR_IO_RESOURCE_DESCRIPTOR                 (IVI_INHERENT_ATTR_BASE + 304L)  /* ViString, read-only */
#define AGN57XX_ATTR_DRIVER_SETUP                           (IVI_INHERENT_ATTR_BASE + 7L)  /* ViString, read-only */

/*- Driver Capabilities */

#define AGN57XX_ATTR_GROUP_CAPABILITIES                     (IVI_INHERENT_ATTR_BASE + 401L)  /* ViString, read-only */
#define AGN57XX_ATTR_SUPPORTED_INSTRUMENT_MODELS            (IVI_INHERENT_ATTR_BASE + 327L)  /* ViString, read-only */

/*- Instrument Identification */

#define AGN57XX_ATTR_INSTRUMENT_FIRMWARE_REVISION           (IVI_INHERENT_ATTR_BASE + 510L)  /* ViString, read-only */
#define AGN57XX_ATTR_INSTRUMENT_MANUFACTURER                (IVI_INHERENT_ATTR_BASE + 511L)  /* ViString, read-only */
#define AGN57XX_ATTR_INSTRUMENT_MODEL                       (IVI_INHERENT_ATTR_BASE + 512L)  /* ViString, read-only */


/*===== Instrument-Specific Attributes =====================================*/

/*- Output */

#define AGN57XX_ATTR_CURRENT_LIMIT                          (IVI_CLASS_ATTR_BASE + 5L)  /* ViReal64, read-write */
#define AGN57XX_ATTR_CURRENT_LIMIT_BEHAVIOR                 (IVI_CLASS_ATTR_BASE + 4L)  /* ViInt32, read-write */
#define AGN57XX_ATTR_OUTPUT_ENABLED                         (IVI_CLASS_ATTR_BASE + 6L)  /* ViBoolean, read-write */
#define AGN57XX_ATTR_OVP_ENABLED                            (IVI_CLASS_ATTR_BASE + 2L)  /* ViBoolean, read-write */
#define AGN57XX_ATTR_OVP_LIMIT                              (IVI_CLASS_ATTR_BASE + 3L)  /* ViReal64, read-write */
#define AGN57XX_ATTR_VOLTAGE_LEVEL                          (IVI_CLASS_ATTR_BASE + 1L)  /* ViReal64, read-write */
#define AGN57XX_ATTR_CHANNEL_COUNT                          (IVI_INHERENT_ATTR_BASE + 203L)  /* ViInt32, read-only */
#define AGN57XX_ATTR_OUTPUT_CURRENT_LIMIT                   (IVI_SPECIFIC_ATTR_BASE + 1L)  /* ViReal64, read-write */
#define AGN57XX_ATTR_OUTPUT_ENABLED2                        (IVI_SPECIFIC_ATTR_BASE + 2L)  /* ViBoolean, read-write */
#define AGN57XX_ATTR_OUTPUT_MIN_VOLTAGE_LIMIT               (IVI_SPECIFIC_ATTR_BASE + 3L)  /* ViReal64, read-write */
#define AGN57XX_ATTR_OUTPUT_PON_STATE                       (IVI_SPECIFIC_ATTR_BASE + 4L)  /* ViInt32, read-write */
#define AGN57XX_ATTR_OUTPUT_VOLTAGE_LEVEL                   (IVI_SPECIFIC_ATTR_BASE + 5L)  /* ViReal64, read-write */

/*- Protection */

#define AGN57XX_ATTR_OUTPUT_PROTECTION_CURRENT_LIMIT_BEHAVIOR (IVI_SPECIFIC_ATTR_BASE + 6L)  /* ViInt32, read-write */
#define AGN57XX_ATTR_OUTPUT_PROTECTION_OVP_LIMIT              (IVI_SPECIFIC_ATTR_BASE + 7L)  /* ViReal64, read-write */

/*- System */

#define AGN57XX_ATTR_SYSTEM_IO_TIMEOUT                      (IVI_SPECIFIC_ATTR_BASE + 18L)  /* ViInt32, read-write */

/*- Trigger */

#define AGN57XX_ATTR_TRIGGERED_CURRENT_LIMIT                (IVI_CLASS_ATTR_BASE + 102L)  /* ViReal64, read-write */
#define AGN57XX_ATTR_TRIGGERED_VOLTAGE_LEVEL                (IVI_CLASS_ATTR_BASE + 103L)  /* ViReal64, read-write */
#define AGN57XX_ATTR_TRIGGER_SOURCE                         (IVI_CLASS_ATTR_BASE + 101L)  /* ViInt32, read-write */
#define AGN57XX_ATTR_TRIGGER_CURRENT_LIMIT                  (IVI_SPECIFIC_ATTR_BASE + 14L)  /* ViReal64, read-write */
#define AGN57XX_ATTR_TRIGGER_INITIATE_CONTINUOUS_ENABLED    (IVI_SPECIFIC_ATTR_BASE + 15L)  /* ViBoolean, read-write */
#define AGN57XX_ATTR_TRIGGER_VOLTAGE_LEVEL                  (IVI_SPECIFIC_ATTR_BASE + 17L)  /* ViReal64, read-write */

/*- Status */

#define AGN57XX_ATTR_STATUS_SERIAL_POLL                     (IVI_SPECIFIC_ATTR_BASE + 8L)  /* ViInt32, read-only */

/*- System */

#define AGN57XX_ATTR_SYSTEM_SCPI_VERSION                    (IVI_SPECIFIC_ATTR_BASE + 10L)  /* ViString, read-only */
#define AGN57XX_ATTR_SYSTEM_SERIAL_NUMBER                   (IVI_SPECIFIC_ATTR_BASE + 11L)  /* ViString, read-only */
#define AGN57XX_ATTR_SYSTEM_TIMEOUT_MILLISECONDS            (IVI_SPECIFIC_ATTR_BASE + 12L)  /* ViInt32, read-write */
#define AGN57XX_ATTR_SYSTEM_TRACE_ENABLED                   (IVI_SPECIFIC_ATTR_BASE + 13L)  /* ViBoolean, read-write */


/****************************************************************************
 *------------------------ Attribute Value Defines -------------------------*
 ****************************************************************************/

/*- Defined values for
	attribute AGN57XX_ATTR_CURRENT_LIMIT_BEHAVIOR
	parameter Behavior in function AgN57xx_ConfigureCurrentLimit */

#define AGN57XX_VAL_CURRENT_REGULATE                        0
#define AGN57XX_VAL_CURRENT_TRIP                            1

/*- Defined values for
	parameter RangeType in function AgN57xx_ConfigureOutputRange */

#define AGN57XX_VAL_RANGE_CURRENT                           0
#define AGN57XX_VAL_RANGE_VOLTAGE                           1

/*- Defined values for
	parameter MeasurementType in function AgN57xx_Measure */

#define AGN57XX_VAL_MEASURE_CURRENT                         0
#define AGN57XX_VAL_MEASURE_VOLTAGE                         1

/*- Defined values for
	parameter OutputState in function AgN57xx_QueryOutputState */

#define AGN57XX_VAL_OUTPUT_CONSTANT_VOLTAGE                 0
#define AGN57XX_VAL_OUTPUT_CONSTANT_CURRENT                 1
#define AGN57XX_VAL_OUTPUT_OVER_VOLTAGE                     2
#define AGN57XX_VAL_OUTPUT_OVER_CURRENT                     3
#define AGN57XX_VAL_OUTPUT_UNREGULATED                      4

/*- Defined values for
	attribute AGN57XX_ATTR_TRIGGER_SOURCE
	parameter Source in function AgN57xx_ConfigureTriggerSource */

#define AGN57XX_VAL_SOFTWARE_TRIG                           2

/*- Defined values for
	attribute AGN57XX_ATTR_OUTPUT_PROTECTION_CURRENT_LIMIT_BEHAVIOR
	parameter Behavior in function AgN57xx_OutputConfigureCurrentLimit */

#define AGN57XX_VAL_AGILENT_N57XX_CURRENT_LIMIT_REGULATE    0
#define AGN57XX_VAL_AGILENT_N57XX_CURRENT_LIMIT_TRIP        1

/*- Defined values for
	parameter MeasurementType in function AgN57xx_OutputMeasure */

#define AGN57XX_VAL_AGILENT_N57XX_MEASUREMENT_CURRENT       0
#define AGN57XX_VAL_AGILENT_N57XX_MEASUREMENT_VOLTAGE       1

/*- Defined values for
	attribute AGN57XX_ATTR_OUTPUT_PON_STATE */

#define AGN57XX_VAL_AGILENT_N57XX_PON_STATE_RESET           0
#define AGN57XX_VAL_AGILENT_N57XX_PON_STATE_AUTO            1

/*- Defined values for
	parameter OutputState in function AgN57xx_OutputQueryState */

#define AGN57XX_VAL_AGILENT_N57XX_OUTPUT_CONSTANT_VOLTAGE   0
#define AGN57XX_VAL_AGILENT_N57XX_OUTPUT_CONSTANT_CURRENT   1
#define AGN57XX_VAL_AGILENT_N57XX_OUTPUT_OVER_VOLTAGE       2
#define AGN57XX_VAL_AGILENT_N57XX_OUTPUT_OVER_CURRENT       3
#define AGN57XX_VAL_AGILENT_N57XX_OUTPUT_UNREGULATED        4
#define AGN57XX_VAL_AGILENT_N57XX_OUTPUT_POWER_FAIL         5

/*- Defined values for
	parameter Reason in function AgN57xx_StatusConfigureServiceRequest */

#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_STB_MAV                1
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_STB_ERROR_QUE          2
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_ESR_OPC                4
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_ESR_QUERY_ERROR        8
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_ESR_DEVICE_ERROR       16
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_ESR_EXECUTION_ERROR    32
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_ESR_COMMAND_ERROR      64
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_QUES_OV                128
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_QUES_OC                256
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_QUES_OT                512
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_QUES_INHIBIT           1024
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_QUES_UNR               2048
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_OPER_CV                4096
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_OPER_CC                8192
#define AGN57XX_VAL_AGILENT_N57XX_SRQ_REASON_OPER_WTG_TRANS_TRIGGER 16384

/*- Defined values for
	parameter Register in function AgN57xx_StatusGetRegister
	parameter Register in function AgN57xx_StatusSetRegister */

#define AGN57XX_VAL_AGILENT_N57XX_STATUS_REGISTER_STATUS_BYTE    0
#define AGN57XX_VAL_AGILENT_N57XX_STATUS_REGISTER_STANDARD_EVENT 1
#define AGN57XX_VAL_AGILENT_N57XX_STATUS_REGISTER_OPERATION      2
#define AGN57XX_VAL_AGILENT_N57XX_STATUS_REGISTER_QUESTIONABLE   3

/*- Defined values for
	parameter SubRegister in function AgN57xx_StatusGetRegister
	parameter SubRegister in function AgN57xx_StatusSetRegister */

#define AGN57XX_VAL_AGILENT_N57XX_STATUS_SUB_REGISTER_CONDITION           0
#define AGN57XX_VAL_AGILENT_N57XX_STATUS_SUB_REGISTER_NEGATIVE_TRANSITION 1
#define AGN57XX_VAL_AGILENT_N57XX_STATUS_SUB_REGISTER_POSITIVE_TRANSITION 2
#define AGN57XX_VAL_AGILENT_N57XX_STATUS_SUB_REGISTER_EVENT               3
#define AGN57XX_VAL_AGILENT_N57XX_STATUS_SUB_REGISTER_ENABLE              4


/****************************************************************************
 *---------------- Instrument Driver Function Declarations -----------------*
 ****************************************************************************/

/*- AgilentN57xx */

ViStatus _VI_FUNC AgN57xx_init ( ViRsrc ResourceName, ViBoolean IdQuery, ViBoolean Reset, ViSession* Vi );
ViStatus _VI_FUNC AgN57xx_close ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_InitWithOptions ( ViRsrc ResourceName, ViBoolean IdQuery, ViBoolean Reset, ViConstString OptionsString, ViSession* Vi );
ViStatus _VI_FUNC AgN57xx_GetChannelName ( ViSession Vi, ViInt32 Index, ViInt32 NameBufferSize, ViChar Name[] );

/*- Utility */

ViStatus _VI_FUNC AgN57xx_revision_query ( ViSession Vi, ViChar DriverRev[], ViChar InstrRev[] );
ViStatus _VI_FUNC AgN57xx_error_message ( ViSession Vi, ViStatus ErrorCode, ViChar ErrorMessage[] );
ViStatus _VI_FUNC AgN57xx_GetError ( ViSession Vi, ViStatus* ErrorCode, ViInt32 ErrorDescriptionBufferSize, ViChar ErrorDescription[] );
ViStatus _VI_FUNC AgN57xx_ClearError ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_ClearInterchangeWarnings ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_GetNextCoercionRecord ( ViSession Vi, ViInt32 CoercionRecordBufferSize, ViChar CoercionRecord[] );
ViStatus _VI_FUNC AgN57xx_GetNextInterchangeWarning ( ViSession Vi, ViInt32 InterchangeWarningBufferSize, ViChar InterchangeWarning[] );
ViStatus _VI_FUNC AgN57xx_InvalidateAllAttributes ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_ResetInterchangeCheck ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_Disable ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_error_query ( ViSession Vi, ViInt32* ErrorCode, ViChar ErrorMessage[] );
ViStatus _VI_FUNC AgN57xx_LockSession ( ViSession Vi, ViBoolean* CallerHasLock );
ViStatus _VI_FUNC AgN57xx_reset ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_ResetWithDefaults ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_self_test ( ViSession Vi, ViInt16* TestResult, ViChar TestMessage[] );
ViStatus _VI_FUNC AgN57xx_UnlockSession ( ViSession Vi, ViBoolean* CallerHasLock );

/*- Attribute Accessors */

ViStatus _VI_FUNC AgN57xx_GetAttributeViInt32 ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt32* AttributeValue );
ViStatus _VI_FUNC AgN57xx_GetAttributeViInt64 ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt64* AttributeValue );
ViStatus _VI_FUNC AgN57xx_GetAttributeViReal64 ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViReal64* AttributeValue );
ViStatus _VI_FUNC AgN57xx_GetAttributeViBoolean ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViBoolean* AttributeValue );
ViStatus _VI_FUNC AgN57xx_GetAttributeViSession ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViSession* AttributeValue );
ViStatus _VI_FUNC AgN57xx_GetAttributeViString ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt32 AttributeValueBufferSize, ViChar AttributeValue[] );
ViStatus _VI_FUNC AgN57xx_SetAttributeViInt32 ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt32 AttributeValue );
ViStatus _VI_FUNC AgN57xx_SetAttributeViInt64 ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt64 AttributeValue );
ViStatus _VI_FUNC AgN57xx_SetAttributeViReal64 ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViReal64 AttributeValue );
ViStatus _VI_FUNC AgN57xx_SetAttributeViBoolean ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViBoolean AttributeValue );
ViStatus _VI_FUNC AgN57xx_SetAttributeViSession ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViSession AttributeValue );
ViStatus _VI_FUNC AgN57xx_SetAttributeViString ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViConstString AttributeValue );

/*- Configuration */

ViStatus _VI_FUNC AgN57xx_ConfigureOutputEnabled ( ViSession Vi, ViConstString ChannelName, ViBoolean Enabled );
ViStatus _VI_FUNC AgN57xx_ConfigureVoltageLevel ( ViSession Vi, ViConstString ChannelName, ViReal64 Level );
ViStatus _VI_FUNC AgN57xx_ConfigureCurrentLimit ( ViSession Vi, ViConstString ChannelName, ViInt32 Behavior, ViReal64 Limit );
ViStatus _VI_FUNC AgN57xx_ConfigureOVP ( ViSession Vi, ViConstString ChannelName, ViBoolean Enabled, ViReal64 Limit );
ViStatus _VI_FUNC AgN57xx_ConfigureOutputRange ( ViSession Vi, ViConstString ChannelName, ViInt32 RangeType, ViReal64 Range );
ViStatus _VI_FUNC AgN57xx_QueryMaxCurrentLimit ( ViSession Vi, ViConstString ChannelName, ViReal64 VoltageLevel, ViReal64* MaxCurrentLimit );
ViStatus _VI_FUNC AgN57xx_QueryMaxVoltageLevel ( ViSession Vi, ViConstString ChannelName, ViReal64 CurrentLimit, ViReal64* MaxVoltageLevel );

/*- Triggering */

ViStatus _VI_FUNC AgN57xx_ConfigureTriggeredCurrentLimit ( ViSession Vi, ViConstString ChannelName, ViReal64 Limit );
ViStatus _VI_FUNC AgN57xx_ConfigureTriggeredVoltageLevel ( ViSession Vi, ViConstString ChannelName, ViReal64 Level );
ViStatus _VI_FUNC AgN57xx_ConfigureTriggerSource ( ViSession Vi, ViConstString ChannelName, ViInt32 Source );

/*- Action */

ViStatus _VI_FUNC AgN57xx_Measure ( ViSession Vi, ViConstString ChannelName, ViInt32 MeasurementType, ViReal64* Measurement );
ViStatus _VI_FUNC AgN57xx_QueryOutputState ( ViSession Vi, ViConstString ChannelName, ViInt32 OutputState, ViBoolean* InState );
ViStatus _VI_FUNC AgN57xx_ResetOutputProtection ( ViSession Vi, ViConstString ChannelName );
ViStatus _VI_FUNC AgN57xx_Abort ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_Initiate ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_SendSoftwareTrigger ( ViSession Vi );

/*- Output */

ViStatus _VI_FUNC AgN57xx_OutputQueryVoltageLevelMax ( ViSession Vi, ViReal64 CurrentLimit, ViReal64* RetVal );
ViStatus _VI_FUNC AgN57xx_OutputQueryState ( ViSession Vi, ViInt32 OutputState, ViBoolean* RetVal );
ViStatus _VI_FUNC AgN57xx_OutputQueryCurrentLimitMax ( ViSession Vi, ViReal64 VoltageLevel, ViReal64* RetVal );
ViStatus _VI_FUNC AgN57xx_OutputMeasure ( ViSession Vi, ViInt32 MeasurementType, ViReal64* RetVal );
ViStatus _VI_FUNC AgN57xx_OutputConfigureCurrentLimit ( ViSession Vi, ViInt32 Behavior, ViReal64 Limit );

/*- Protection */

ViStatus _VI_FUNC AgN57xx_OutputProtectionResetOutputProtection ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_OutputProtectionQueryOVPLimitMax ( ViSession Vi, ViReal64* RetVal );

/*- System */

ViStatus _VI_FUNC AgN57xx_SystemReadString ( ViSession Vi, ViInt32 ValBufferSize, ViChar Val[] );
ViStatus _VI_FUNC AgN57xx_viRead ( ViSession Vi, ViInt64 BufferSize, ViChar Buffer[], ViInt64* ReturnCount );
ViStatus _VI_FUNC AgN57xx_viWrite ( ViSession Vi, ViInt64 Count, ViChar Buffer[], ViInt64* ReturnCount );
ViStatus _VI_FUNC AgN57xx_SystemWriteString ( ViSession Vi, ViConstString Data );

/*- Trigger */

ViStatus _VI_FUNC AgN57xx_TriggerSendSoftwareTrigger ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_TriggerInitiate ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_TriggerAbort ( ViSession Vi );

/*- Status */

ViStatus _VI_FUNC AgN57xx_StatusPreset ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_StatusConfigureServiceRequest ( ViSession Vi, ViInt32 Reason );
ViStatus _VI_FUNC AgN57xx_StatusClear ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_StatusGetRegister ( ViSession Vi, ViInt32 Register, ViInt32 SubRegister, ViInt32* RetVal );
ViStatus _VI_FUNC AgN57xx_StatusSetRegister ( ViSession Vi, ViInt32 Register, ViInt32 SubRegister, ViInt32 Val );

/*- System */

ViStatus _VI_FUNC AgN57xx_SystemWaitForOperationComplete ( ViSession Vi, ViInt32 MaxTimeMilliseconds );
ViStatus _VI_FUNC AgN57xx_SystemSaveState ( ViSession Vi, ViConstString Identifier );
ViStatus _VI_FUNC AgN57xx_SystemRecallState ( ViSession Vi, ViConstString Identifier );
ViStatus _VI_FUNC AgN57xx_SystemEnableLocalControls ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_SystemDisableLocalControls ( ViSession Vi );
ViStatus _VI_FUNC AgN57xx_SystemRead ( ViSession Vi, ViInt32 ValueBufferSize, ViChar Value[], ViInt32* ActualSize );
ViStatus _VI_FUNC AgN57xx_SystemWrite ( ViSession Vi, ViConstString CommandString );


/****************************************************************************
 *----------------- Instrument Error And Completion Codes ------------------*
 ****************************************************************************/
#ifndef _IVIC_ERROR_BASE_DEFINES_
#define _IVIC_ERROR_BASE_DEFINES_

#define IVIC_WARN_BASE                           (0x3FFA0000L)
#define IVIC_CROSS_CLASS_WARN_BASE               (IVIC_WARN_BASE + 0x1000)
#define IVIC_CLASS_WARN_BASE                     (IVIC_WARN_BASE + 0x2000)
#define IVIC_SPECIFIC_WARN_BASE                  (IVIC_WARN_BASE + 0x4000)

#define IVIC_ERROR_BASE                          (0xBFFA0000L)
#define IVIC_CROSS_CLASS_ERROR_BASE              (IVIC_ERROR_BASE + 0x1000)
#define IVIC_CLASS_ERROR_BASE                    (IVIC_ERROR_BASE + 0x2000)
#define IVIC_SPECIFIC_ERROR_BASE                 (IVIC_ERROR_BASE + 0x4000)
#define IVIC_LXISYNC_ERROR_BASE                  (IVIC_ERROR_BASE + 0x2000)

#endif


#define AGN57XX_ERROR_CANNOT_RECOVER                        (IVIC_ERROR_BASE + 0x0000)
#define AGN57XX_ERROR_INSTRUMENT_STATUS                     (IVIC_ERROR_BASE + 0x0001)
#define AGN57XX_ERROR_CANNOT_OPEN_FILE                      (IVIC_ERROR_BASE + 0x0002)
#define AGN57XX_ERROR_READING_FILE                          (IVIC_ERROR_BASE + 0x0003)
#define AGN57XX_ERROR_WRITING_FILE                          (IVIC_ERROR_BASE + 0x0004)
#define AGN57XX_ERROR_INVALID_PATHNAME                      (IVIC_ERROR_BASE + 0x000B)
#define AGN57XX_ERROR_INVALID_VALUE                         (IVIC_ERROR_BASE + 0x0010)
#define AGN57XX_ERROR_FUNCTION_NOT_SUPPORTED                (IVIC_ERROR_BASE + 0x0011)
#define AGN57XX_ERROR_ATTRIBUTE_NOT_SUPPORTED               (IVIC_ERROR_BASE + 0x0012)
#define AGN57XX_ERROR_VALUE_NOT_SUPPORTED                   (IVIC_ERROR_BASE + 0x0013)
#define AGN57XX_ERROR_NOT_INITIALIZED                       (IVIC_ERROR_BASE + 0x001D)
#define AGN57XX_ERROR_UNKNOWN_CHANNEL_NAME                  (IVIC_ERROR_BASE + 0x0020)
#define AGN57XX_ERROR_TOO_MANY_OPEN_FILES                   (IVIC_ERROR_BASE + 0x0023)
#define AGN57XX_ERROR_CHANNEL_NAME_REQUIRED                 (IVIC_ERROR_BASE + 0x0044)
#define AGN57XX_ERROR_MISSING_OPTION_NAME                   (IVIC_ERROR_BASE + 0x0049)
#define AGN57XX_ERROR_MISSING_OPTION_VALUE                  (IVIC_ERROR_BASE + 0x004A)
#define AGN57XX_ERROR_BAD_OPTION_NAME                       (IVIC_ERROR_BASE + 0x004B)
#define AGN57XX_ERROR_BAD_OPTION_VALUE                      (IVIC_ERROR_BASE + 0x004C)
#define AGN57XX_ERROR_OUT_OF_MEMORY                         (IVIC_ERROR_BASE + 0x0056)
#define AGN57XX_ERROR_OPERATION_PENDING                     (IVIC_ERROR_BASE + 0x0057)
#define AGN57XX_ERROR_NULL_POINTER                          (IVIC_ERROR_BASE + 0x0058)
#define AGN57XX_ERROR_UNEXPECTED_RESPONSE                   (IVIC_ERROR_BASE + 0x0059)
#define AGN57XX_ERROR_FILE_NOT_FOUND                        (IVIC_ERROR_BASE + 0x005B)
#define AGN57XX_ERROR_INVALID_FILE_FORMAT                   (IVIC_ERROR_BASE + 0x005C)
#define AGN57XX_ERROR_STATUS_NOT_AVAILABLE                  (IVIC_ERROR_BASE + 0x005D)
#define AGN57XX_ERROR_ID_QUERY_FAILED                       (IVIC_ERROR_BASE + 0x005E)
#define AGN57XX_ERROR_RESET_FAILED                          (IVIC_ERROR_BASE + 0x005F)
#define AGN57XX_ERROR_RESOURCE_UNKNOWN                      (IVIC_ERROR_BASE + 0x0060)
#define AGN57XX_ERROR_ALREADY_INITIALIZED                   (IVIC_ERROR_BASE + 0x0061)
#define AGN57XX_ERROR_CANNOT_CHANGE_SIMULATION_STATE        (IVIC_ERROR_BASE + 0x0062)
#define AGN57XX_ERROR_INVALID_NUMBER_OF_LEVELS_IN_SELECTOR  (IVIC_ERROR_BASE + 0x0063)
#define AGN57XX_ERROR_INVALID_RANGE_IN_SELECTOR             (IVIC_ERROR_BASE + 0x0064)
#define AGN57XX_ERROR_UNKOWN_NAME_IN_SELECTOR               (IVIC_ERROR_BASE + 0x0065)
#define AGN57XX_ERROR_BADLY_FORMED_SELECTOR                 (IVIC_ERROR_BASE + 0x0066)
#define AGN57XX_ERROR_UNKNOWN_PHYSICAL_IDENTIFIER           (IVIC_ERROR_BASE + 0x0067)
#define AGN57XX_ERROR_INVALID_ATTRIBUTE                     (IVIC_ERROR_BASE + 0x000C)
#define AGN57XX_ERROR_TYPES_DO_NOT_MATCH                    (IVIC_ERROR_BASE + 0x0015)
#define AGN57XX_ERROR_IVI_ATTR_NOT_WRITABLE                 (IVIC_ERROR_BASE + 0x000D)
#define AGN57XX_ERROR_IVI_ATTR_NOT_READABLE                 (IVIC_ERROR_BASE + 0x000E)
#define AGN57XX_ERROR_INVALID_SESSION_HANDLE                (IVIC_ERROR_BASE + 0x1190)



#define AGN57XX_SUCCESS                                     0
#define AGN57XX_WARN_NSUP_ID_QUERY                          (IVIC_WARN_BASE + 0x0065)
#define AGN57XX_WARN_NSUP_RESET                             (IVIC_WARN_BASE + 0x0066)
#define AGN57XX_WARN_NSUP_SELF_TEST                         (IVIC_WARN_BASE + 0x0067)
#define AGN57XX_WARN_NSUP_ERROR_QUERY                       (IVIC_WARN_BASE + 0x0068)
#define AGN57XX_WARN_NSUP_REV_QUERY                         (IVIC_WARN_BASE + 0x0069)



#define AGN57XX_ERROR_TRIGGER_NOT_SOFTWARE                  (IVIC_CROSS_CLASS_ERROR_BASE + 0x0001)
#define AGN57XX_ERROR_PERSONALITY_NOT_ACTIVE                (IVIC_SPECIFIC_ERROR_BASE + 0x0211)
#define AGN57XX_ERROR_PERSONALITY_NOT_INSTALLED             (IVIC_SPECIFIC_ERROR_BASE + 0x0212)
#define AGN57XX_ERROR_PERSONALITY_NOT_LICENSED              (IVIC_SPECIFIC_ERROR_BASE + 0x0213)
#define AGN57XX_ERROR_IO_GENERAL                            (IVIC_SPECIFIC_ERROR_BASE + 0x0214)
#define AGN57XX_ERROR_IO_TIMEOUT                            (IVIC_SPECIFIC_ERROR_BASE + 0x0215)
#define AGN57XX_ERROR_MODEL_NOT_SUPPORTED                   (IVIC_SPECIFIC_ERROR_BASE + 0x0216)
#define AGN57XX_ERROR_WRAPPED_DRIVER_ERROR                  (IVIC_SPECIFIC_ERROR_BASE + 0x0218)
#define AGN57XX_ERROR_MAX_TIME_EXCEEDED                     (IVIC_SPECIFIC_ERROR_BASE + 0x0217)




/****************************************************************************
 *---------------------------- End Include File ----------------------------*
 ****************************************************************************/
#if defined(__cplusplus) || defined(__cplusplus__)
}
#endif
#endif // __AGN57XX_HEADER
