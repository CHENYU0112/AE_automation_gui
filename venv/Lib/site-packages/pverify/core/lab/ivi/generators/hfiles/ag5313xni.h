/***********************************************************************************
 * Copyright 2008 - 2015, National Instruments, Corporation.  All Rights Reserved. *
 ***********************************************************************************/

/*****************************************************************************
 *                       IVI Counter
 *
 * Title:    ag5313xni.h
 * Purpose:  IVI Counter
 *           instrument driver declarations.
 *
 * Modification History
 *
 *       05/06/2010 - [czhou] Porting driver to 64-bits.
 *
 *		 05/11/2015 - [holi] Updated driver to comply with IVI-2014 generation.
 *
 *****************************************************************************/

#ifndef __AG5313XNI_HEADER
#define __AG5313XNI_HEADER

#include <ivi.h>
#include <IviCounter_ni.h>

#if defined(__cplusplus) || defined(__cplusplus__)
extern "C" {
#endif

/*****************************************************************************
 *----------------- Instrument Driver Revision Information ------------------*
 *****************************************************************************/
#define AG5313XNI_MAJOR_VERSION                                 1     /* Instrument driver major version   */
#define AG5313XNI_MINOR_VERSION                                 2     /* Instrument driver minor version   */

#define AG5313XNI_CLASS_SPEC_MAJOR_VERSION                      2     /* Class specification major version */
#define AG5313XNI_CLASS_SPEC_MINOR_VERSION                      0     /* Class specification minor version */

#define AG5313XNI_SUPPORTED_INSTRUMENT_MODELS                   "53131A,53132A"
#define AG5313XNI_DRIVER_VENDOR                                 "National Instruments"

#ifdef  _IVI_mswin64_
#define AG5313XNI_DRIVER_DESCRIPTION                            "AG53131A, AG53132A of Universal Counter Instrument Driver [Compiled for 64-bit.]"
#else
#define AG5313XNI_DRIVER_DESCRIPTION                            "AG53131A, AG53132A of Universal Counter Instrument Driver"
#endif
/*****************************************************************************
 *------------------------------ Useful Macros ------------------------------*
 *****************************************************************************/
    /* Instrument Model */
#define AG5313XNI_VAL_HP53131A                                  0
#define AG5313XNI_VAL_HP53132A                                  1

    /* RF Input Option */
#define AG5313XNI_VAL_NO_RF_OPTION                              0
#define AG5313XNI_VAL_OPTION_030                                1
#define AG5313XNI_VAL_OPTION_050                                2
#define AG5313XNI_VAL_OPTION_124                                4

    /* Channel Names */
#define AG5313XNI_VAL_CH1                           "1"
#define AG5313XNI_VAL_CH2                           "2"
#define AG5313XNI_VAL_CH3                           "3"



/*****************************************************************************
 *---------------------------- Attribute Defines ----------------------------*
 *****************************************************************************/

    /*- IVI Inherent Instrument Attributes ----------------------------------*/

    /* User Options */
#define AG5313XNI_ATTR_RANGE_CHECK                              IVI_ATTR_RANGE_CHECK                            /* ViBoolean */
#define AG5313XNI_ATTR_QUERY_INSTRUMENT_STATUS                  IVI_ATTR_QUERY_INSTRUMENT_STATUS                /* ViBoolean */
#define AG5313XNI_ATTR_CACHE                                    IVI_ATTR_CACHE                                  /* ViBoolean */
#define AG5313XNI_ATTR_SIMULATE                                 IVI_ATTR_SIMULATE                               /* ViBoolean */
#define AG5313XNI_ATTR_RECORD_COERCIONS                         IVI_ATTR_RECORD_COERCIONS                       /* ViBoolean */
#define AG5313XNI_ATTR_INTERCHANGE_CHECK                        IVI_ATTR_INTERCHANGE_CHECK                      /* ViBoolean */

    /* Driver Information  */
#define AG5313XNI_ATTR_SPECIFIC_DRIVER_PREFIX                   IVI_ATTR_SPECIFIC_DRIVER_PREFIX                 /* ViString, read-only  */
#define AG5313XNI_ATTR_SUPPORTED_INSTRUMENT_MODELS              IVI_ATTR_SUPPORTED_INSTRUMENT_MODELS            /* ViString, read-only  */
#define AG5313XNI_ATTR_GROUP_CAPABILITIES                       IVI_ATTR_GROUP_CAPABILITIES                     /* ViString, read-only  */
#define AG5313XNI_ATTR_INSTRUMENT_MANUFACTURER                  IVI_ATTR_INSTRUMENT_MANUFACTURER                /* ViString, read-only  */
#define AG5313XNI_ATTR_INSTRUMENT_MODEL                         IVI_ATTR_INSTRUMENT_MODEL                       /* ViString, read-only  */
#define AG5313XNI_ATTR_INSTRUMENT_FIRMWARE_REVISION             IVI_ATTR_INSTRUMENT_FIRMWARE_REVISION           /* ViString, read-only  */
#define AG5313XNI_ATTR_SPECIFIC_DRIVER_REVISION                 IVI_ATTR_SPECIFIC_DRIVER_REVISION               /* ViString, read-only  */
#define AG5313XNI_ATTR_SPECIFIC_DRIVER_VENDOR                   IVI_ATTR_SPECIFIC_DRIVER_VENDOR                 /* ViString, read-only  */
#define AG5313XNI_ATTR_SPECIFIC_DRIVER_DESCRIPTION              IVI_ATTR_SPECIFIC_DRIVER_DESCRIPTION            /* ViString, read-only  */
#define AG5313XNI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION /* ViInt32, read-only */
#define AG5313XNI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION /* ViInt32, read-only */

    /* Advanced Session Information */
#define AG5313XNI_ATTR_LOGICAL_NAME                             IVI_ATTR_LOGICAL_NAME                           /* ViString, read-only  */
#define AG5313XNI_ATTR_IO_RESOURCE_DESCRIPTOR                   IVI_ATTR_IO_RESOURCE_DESCRIPTOR                 /* ViString, read-only  */
#define AG5313XNI_ATTR_DRIVER_SETUP                             IVI_ATTR_DRIVER_SETUP                           /* ViString, read-only  */

    /*- Instrument-Specific Attributes --------------------------------------*/
    /* Channel Sub-group Attributes */
#define AG5313XNI_ATTR_CHANNEL_COUNT                            IVICOUNTER_ATTR_CHANNEL_COUNT                   /* ViInt32, read-only  */
#define AG5313XNI_ATTR_ATTENUATION                              IVICOUNTER_ATTR_ATTENUATION                     /* ViReal64,  multi-channel,        */
#define AG5313XNI_ATTR_COUPLING                                 IVICOUNTER_ATTR_COUPLING                        /* ViInt32,   multi-channel,        */
#define AG5313XNI_ATTR_IMPEDANCE                                IVICOUNTER_ATTR_IMPEDANCE                       /* ViReal64,  multi-channel, Ohms   */
#define AG5313XNI_ATTR_FILTER_ENABLED                           IVICOUNTER_ATTR_FILTER_ENABLED                  /* ViBoolean, multi-channel,        */
#define AG5313XNI_ATTR_CHANNEL_LEVEL                            IVICOUNTER_ATTR_CHANNEL_LEVEL                   /* ViReal64,  multi-channel, Volts  */
#define AG5313XNI_ATTR_CHANNEL_SLOPE                            IVICOUNTER_ATTR_CHANNEL_SLOPE                   /* ViInt32,   multi-channel,        */
#define AG5313XNI_ATTR_CHANNEL_HYSTERESIS                       IVICOUNTER_ATTR_CHANNEL_HYSTERESIS              /* ViReal64,  multi-channel, Volts  */

        /* Measure Sub-group Attributes */
#define AG5313XNI_ATTR_MEASUREMENT_FUNCTION                     IVICOUNTER_ATTR_MEASUREMENT_FUNCTION            /* ViInt32  */

    /*- Frequency Sub-group Attributes -*/
#define AG5313XNI_ATTR_FREQUENCY_CHANNEL                        IVICOUNTER_ATTR_FREQUENCY_CHANNEL               /* ViString */
#define AG5313XNI_ATTR_FREQUENCY_ESTIMATE                       IVICOUNTER_ATTR_FREQUENCY_ESTIMATE              /* ViReal64,  Hertz */
#define AG5313XNI_ATTR_FREQUENCY_ESTIMATE_AUTO                  IVICOUNTER_ATTR_FREQUENCY_ESTIMATE_AUTO         /* ViBoolean */
#define AG5313XNI_ATTR_FREQUENCY_RESOLUTION                     IVICOUNTER_ATTR_FREQUENCY_RESOLUTION            /* ViReal64,  Hertz */
#define AG5313XNI_ATTR_FREQUENCY_RESOLUTION_AUTO                IVICOUNTER_ATTR_FREQUENCY_RESOLUTION_AUTO       /* ViBoolean */
#define AG5313XNI_ATTR_FREQUENCY_APERTURE_TIME                  IVICOUNTER_ATTR_FREQUENCY_APERTURE_TIME         /* ViReal64,  Seconds   */

    /*- Period Sub-group Attributes -*/
#define AG5313XNI_ATTR_PERIOD_CHANNEL                           IVICOUNTER_ATTR_PERIOD_CHANNEL                  /* ViString */
#define AG5313XNI_ATTR_PERIOD_ESTIMATE                          IVICOUNTER_ATTR_PERIOD_ESTIMATE                 /* ViReal64,  Seconds   */
#define AG5313XNI_ATTR_PERIOD_RESOLUTION                        IVICOUNTER_ATTR_PERIOD_RESOLUTION               /* ViReal64,  Seconds   */
#define AG5313XNI_ATTR_PERIOD_APERTURE_TIME                     IVICOUNTER_ATTR_PERIOD_APERTURE_TIME            /* ViReal64,  Seconds   */

    /*- Pulse Width Sub-group Attributes -*/
#define AG5313XNI_ATTR_PULSE_WIDTH_CHANNEL                      IVICOUNTER_ATTR_PULSE_WIDTH_CHANNEL             /* ViString */
#define AG5313XNI_ATTR_PULSE_WIDTH_ESTIMATE                     IVICOUNTER_ATTR_PULSE_WIDTH_ESTIMATE            /* ViReal64,  Seconds   */
#define AG5313XNI_ATTR_PULSE_WIDTH_RESOLUTION                   IVICOUNTER_ATTR_PULSE_WIDTH_RESOLUTION          /* ViReal64,  Seconds   */

    /*- Duty Cycle Sub-group Attributes -*/
#define AG5313XNI_ATTR_DUTY_CYCLE_CHANNEL                       IVICOUNTER_ATTR_DUTY_CYCLE_CHANNEL              /* ViString */
#define AG5313XNI_ATTR_DUTY_CYCLE_FREQUENCY_ESTIMATE            IVICOUNTER_ATTR_DUTY_CYCLE_FREQUENCY_ESTIMATE   /* ViReal64,  Hertz */
#define AG5313XNI_ATTR_DUTY_CYCLE_RESOLUTION                    IVICOUNTER_ATTR_DUTY_CYCLE_RESOLUTION           /* ViReal64 */

    /*- Edge Time Sub-group Attributes -*/
#define AG5313XNI_ATTR_EDGE_TIME_CHANNEL                        IVICOUNTER_ATTR_EDGE_TIME_CHANNEL               /* ViString */
#define AG5313XNI_ATTR_EDGE_TIME_ESTIMATE                       IVICOUNTER_ATTR_EDGE_TIME_ESTIMATE              /* ViReal64,  Seconds   */
#define AG5313XNI_ATTR_EDGE_TIME_RESOLUTION                     IVICOUNTER_ATTR_EDGE_TIME_RESOLUTION            /* ViReal64,  Seconds   */
#define AG5313XNI_ATTR_EDGE_TIME_REFERENCE_TYPE                 IVICOUNTER_ATTR_EDGE_TIME_REFERENCE_TYPE        /* ViInt32  */

    /* Provide a function supports High Reference and Low Reference */
#define AG5313XNI_ATTR_EDGE_TIME_HIGH_REFERENCE                 IVICOUNTER_ATTR_EDGE_TIME_HIGH_REFERENCE        /* ViReal64,  Volts */
#define AG5313XNI_ATTR_EDGE_TIME_LOW_REFERENCE                  IVICOUNTER_ATTR_EDGE_TIME_LOW_REFERENCE         /* ViReal64,  Volts */

    /*- Frequency Ratio Sub-group Attributes -*/
#define AG5313XNI_ATTR_FREQUENCY_RATIO_NUMERATOR_CHANNEL        IVICOUNTER_ATTR_FREQUENCY_RATIO_NUMERATOR_CHANNEL    /* ViString */
#define AG5313XNI_ATTR_FREQUENCY_RATIO_DENOMINATOR_CHANNEL      IVICOUNTER_ATTR_FREQUENCY_RATIO_DENOMINATOR_CHANNEL /* ViString */
#define AG5313XNI_ATTR_FREQUENCY_RATIO_NUMERATOR_FREQUENCY_ESTIMATE IVICOUNTER_ATTR_FREQUENCY_RATIO_NUMERATOR_FREQUENCY_ESTIMATE/* ViReal64,  Hertz */
#define AG5313XNI_ATTR_FREQUENCY_RATIO_ESTIMATE                 IVICOUNTER_ATTR_FREQUENCY_RATIO_ESTIMATE        /* ViReal64 */
#define AG5313XNI_ATTR_FREQUENCY_RATIO_RESOLUTION               IVICOUNTER_ATTR_FREQUENCY_RATIO_RESOLUTION      /* ViReal64 */

    /*- Time Interval Sub-group Attributes -*/
#define AG5313XNI_ATTR_TIME_INTERVAL_START_CHANNEL              IVICOUNTER_ATTR_TIME_INTERVAL_START_CHANNEL     /* ViString */
#define AG5313XNI_ATTR_TIME_INTERVAL_STOP_CHANNEL               IVICOUNTER_ATTR_TIME_INTERVAL_STOP_CHANNEL      /* ViString */
#define AG5313XNI_ATTR_TIME_INTERVAL_ESTIMATE                   IVICOUNTER_ATTR_TIME_INTERVAL_ESTIMATE          /* ViReal64,  Seconds   */
#define AG5313XNI_ATTR_TIME_INTERVAL_RESOLUTION                 IVICOUNTER_ATTR_TIME_INTERVAL_RESOLUTION        /* ViReal64 */

    /*- Phase Sub-group Attributes -*/
#define AG5313XNI_ATTR_PHASE_INPUT_CHANNEL                      IVICOUNTER_ATTR_PHASE_INPUT_CHANNEL             /* ViString */
#define AG5313XNI_ATTR_PHASE_REFERENCE_CHANNEL                  IVICOUNTER_ATTR_PHASE_REFERENCE_CHANNEL         /* ViString */
#define AG5313XNI_ATTR_PHASE_FREQUENCY_ESTIMATE                 IVICOUNTER_ATTR_PHASE_FREQUENCY_ESTIMATE        /* ViReal64 */
#define AG5313XNI_ATTR_PHASE_RESOLUTION                         IVICOUNTER_ATTR_PHASE_RESOLUTION                /* ViReal64 */

    /*- Totalize Sub-group Attributes -*/
#define AG5313XNI_ATTR_GATED_TOTALIZE_CHANNEL                   IVICOUNTER_ATTR_GATED_TOTALIZE_CHANNEL          /* ViString */
#define AG5313XNI_ATTR_GATED_TOTALIZE_GATE_SOURCE               IVICOUNTER_ATTR_GATED_TOTALIZE_GATE_SOURCE      /* ViString */
#define AG5313XNI_ATTR_GATED_TOTALIZE_GATE_SLOPE                IVICOUNTER_ATTR_GATED_TOTALIZE_GATE_SLOPE       /* ViInt32  */
#define AG5313XNI_ATTR_TIMED_TOTALIZE_CHANNEL                   IVICOUNTER_ATTR_TIMED_TOTALIZE_CHANNEL          /* ViString */
#define AG5313XNI_ATTR_TIMED_TOTALIZE_GATE_TIME                 IVICOUNTER_ATTR_TIMED_TOTALIZE_GATE_TIME        /* ViReal64,  Seconds   */
#define AG5313XNI_ATTR_CONTINUOUS_TOTALIZE_CHANNEL              IVICOUNTER_ATTR_CONTINUOUS_TOTALIZE_CHANNEL     /* ViString */

    /*- Arm Sub-group Attributes -*/
#define AG5313XNI_ATTR_START_ARM_TYPE                           IVICOUNTER_ATTR_START_ARM_TYPE                  /* ViInt32  */
#define AG5313XNI_ATTR_LAY1_START_ARM_TYPE                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 31L)           /* ViInt32  */
#define AG5313XNI_ATTR_EXTERNAL_START_ARM_SOURCE                IVICOUNTER_ATTR_EXTERNAL_START_ARM_SOURCE       /* ViString */
#define AG5313XNI_ATTR_EXTERNAL_START_ARM_SLOPE                 IVICOUNTER_ATTR_EXTERNAL_START_ARM_SLOPE        /* ViInt32  */
#define AG5313XNI_ATTR_EXTERNAL_START_ARM_LEVEL                 IVICOUNTER_ATTR_EXTERNAL_START_ARM_LEVEL        /* ViReal64,  Volts */
#define AG5313XNI_ATTR_EXTERNAL_START_ARM_DELAY                 IVICOUNTER_ATTR_EXTERNAL_START_ARM_DELAY        /* ViReal64,  Seconds   */
#define AG5313XNI_ATTR_INTERNAL_START_ARM_EVENTS                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 32L)           /* ViInt32  */

#define AG5313XNI_ATTR_STOP_ARM_TYPE                            IVICOUNTER_ATTR_STOP_ARM_TYPE                   /* ViInt32  */
#define AG5313XNI_ATTR_LAY1_STOP_ARM_TYPE                       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 41L)           /* ViInt32  */
#define AG5313XNI_ATTR_EXTERNAL_STOP_ARM_SOURCE                 IVICOUNTER_ATTR_EXTERNAL_STOP_ARM_SOURCE        /* ViString */
#define AG5313XNI_ATTR_EXTERNAL_STOP_ARM_SLOPE                  IVICOUNTER_ATTR_EXTERNAL_STOP_ARM_SLOPE         /* ViInt32  */
#define AG5313XNI_ATTR_EXTERNAL_STOP_ARM_DELAY                  IVICOUNTER_ATTR_EXTERNAL_STOP_ARM_DELAY         /* ViReal64,  Seconds   */
#define AG5313XNI_ATTR_EXTERNAL_STOP_ARM_LEVEL                  IVICOUNTER_ATTR_EXTERNAL_STOP_ARM_LEVEL         /* ViReal64,  Volts */
#define AG5313XNI_ATTR_INTERNAL_STOP_ARM_EVENTS                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 42L)           /* ViInt32  */

#define AG5313XNI_ATTR_ID_QUERY_RESPONSE                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 51L)           /* ViString */
#define AG5313XNI_ATTR_RF_INPUT_OPTION                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 52L)           /* ViInt32  */

    /*- Voltage Measurement Extension Group Attributes -*/
#define AG5313XNI_ATTR_VOLTAGE_CHANNEL                          IVICOUNTER_ATTR_VOLTAGE_CHANNEL                 /* ViString */
#define AG5313XNI_ATTR_VOLTAGE_ESTIMATE                         IVICOUNTER_ATTR_VOLTAGE_ESTIMATE                /* ViReal64,  Volts */
#define AG5313XNI_ATTR_VOLTAGE_RESOLUTION                       IVICOUNTER_ATTR_VOLTAGE_RESOLUTION              /* ViReal64,  Volts */

    /*- Math Extension Group -*/
#define AG5313XNI_ATTR_MATH_ENABLED                             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 101L)          /* ViBoolean */
#define AG5313XNI_ATTR_MATH_RECAL_AUTO_ENABLED                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 102L)          /* ViBoolean */
#define AG5313XNI_ATTR_MATH_SCALE                               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 103L)          /* ViReal64 */
#define AG5313XNI_ATTR_MATH_OFFSET                              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 104L)          /* ViReal64 */

    /*- Limits Extension Group -*/
#define AG5313XNI_ATTR_LIMIT_ENABLED                            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 111L)          /* ViBoolean */
#define AG5313XNI_ATTR_LIMIT_RECAL_AUTO_ENABLED                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 112L)          /* ViBoolean */
#define AG5313XNI_ATTR_LIMIT_CLEAR_AUTO_ENABLED                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 113L)          /* ViBoolean */
#define AG5313XNI_ATTR_LIMIT_LOWER                              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 114L)          /* ViReal64 */
#define AG5313XNI_ATTR_LIMIT_UPPER                              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 115L)          /* ViReal64 */

    /*- Statistics Extension Group -*/
#define AG5313XNI_ATTR_STATISTICS_ENABLED                       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 121L)          /* ViBoolean */
#define AG5313XNI_ATTR_STATISTICS_AVERAGE_COUNT                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 122L)          /* ViInt32 */
#define AG5313XNI_ATTR_STATISTICS_LIMIT_ENABLED                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 123L)          /* ViBoolean */
#define AG5313XNI_ATTR_STATISTICS_LIMIT_LOWER                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 124L)          /* ViReal64 */
#define AG5313XNI_ATTR_STATISTICS_LIMIT_UPPER                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 125L)          /* ViReal64 */
#define AG5313XNI_ATTR_INSTR_MODEL                              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 53L)

/*****************************************************************************
 *------------------------ Attribute Value Defines --------------------------*
 *****************************************************************************/

    /* Defined values for ag5313xni_IsMeasurementComplete function */
#define AG5313XNI_VAL_MEASUREMENT_COMPLETE                      IVICOUNTER_VAL_MEASUREMENT_COMPLETE
#define AG5313XNI_VAL_MEASUREMENT_IN_PROGRESS               IVICOUNTER_VAL_MEASUREMENT_IN_PROGRESS
#define AG5313XNI_VAL_MEASUREMENT_STATUS_UNKNOWN            IVICOUNTER_VAL_MEASUREMENT_STATUS_UNKNOWN

    /* Defined values for AG5313XNI_ATTR_COUPLING */
#define AG5313XNI_VAL_AC                                        IVICOUNTER_VAL_AC
#define AG5313XNI_VAL_DC                                        IVICOUNTER_VAL_DC

    /* Defined values for AG5313XNI_ATTR_CHANNEL_SLOPE */
    /* Defined values for AG5313XNI_ATTR_EXTERNAL_START_ARM_SLOPE */
#define AG5313XNI_VAL_POSITIVE                                  IVICOUNTER_VAL_POSITIVE
#define AG5313XNI_VAL_NEGATIVE                                  IVICOUNTER_VAL_NEGATIVE

    /* Defined values for Measurement Function */
#define AG5313XNI_VAL_FREQUENCY                                 IVICOUNTER_VAL_FREQUENCY
#define AG5313XNI_VAL_PERIOD                                    IVICOUNTER_VAL_PERIOD
#define AG5313XNI_VAL_PULSE_WIDTH                               IVICOUNTER_VAL_PULSE_WIDTH
#define AG5313XNI_VAL_DUTY_CYCLE                                IVICOUNTER_VAL_DUTY_CYCLE
#define AG5313XNI_VAL_EDGE_TIME                                 IVICOUNTER_VAL_EDGE_TIME
#define AG5313XNI_VAL_FREQUENCY_RATIO                           IVICOUNTER_VAL_FREQUENCY_RATIO
#define AG5313XNI_VAL_TIME_INTERVAL                             IVICOUNTER_VAL_TIME_INTERVAL
#define AG5313XNI_VAL_PHASE                                     IVICOUNTER_VAL_PHASE
#define AG5313XNI_VAL_CONTINUOUS_TOTALIZE                       IVICOUNTER_VAL_CONTINUOUS_TOTALIZE
#define AG5313XNI_VAL_GATED_TOTALIZE                            IVICOUNTER_VAL_GATED_TOTALIZE
#define AG5313XNI_VAL_TIMED_TOTALIZE                            IVICOUNTER_VAL_TIMED_TOTALIZE
#define AG5313XNI_VAL_MAXIMUM_VOLTAGE                           IVICOUNTER_VAL_MAXIMUM_VOLTAGE
#define AG5313XNI_VAL_MINIMUM_VOLTAGE                           IVICOUNTER_VAL_MINIMUM_VOLTAGE
#define AG5313XNI_VAL_PEAK_TO_PEAK_VOLTAGE                      IVICOUNTER_VAL_PEAK_TO_PEAK_VOLTAGE

    /* Defined values for AG5313XNI_ATTR_START_ARM_TYPE */
    /*                    AG5313XNI_ATTR_STOP_ARM_TYPE  */
#define AG5313XNI_VAL_IMMEDIATE_ARM                             IVICOUNTER_VAL_IMMEDIATE_ARM_TYPE
#define AG5313XNI_VAL_EXTERNAL_ARM                              IVICOUNTER_VAL_EXTERNAL_ARM_TYPE
#define AG5313XNI_VAL_GATE_TIME_ARM                             (IVICOUNTER_VAL_ARM_TYPE_SPECIFIC_EXT_BASE + 1L)
#define AG5313XNI_VAL_DIGITS_ARM                                (IVICOUNTER_VAL_ARM_TYPE_SPECIFIC_EXT_BASE + 2L)

    /*- Defined values for AG5313XNI_ATTR_LAY1_START_ARM_TYPE -*/
#define AG5313XNI_VAL_DELAY_IMMEDIATE_ARM                       (0L)
#define AG5313XNI_VAL_DELAY_TIMER_ARM                           (1L)
#define AG5313XNI_VAL_DELAY_EVENT_ARM                           (2L)

    /*- Defined values for attribute FLPM668X_ATTR_EDGE_TIME_REFERENCE_TYPE -*/
#define AG5313XNI_VAL_VOLTAGE_REFERENCE_TYPE                    IVICOUNTER_VAL_VOLTAGE_REFERENCE_TYPE
#define AG5313XNI_VAL_PERCENT_REFERENCE_TYPE                    IVICOUNTER_VAL_PERCENT_REFERENCE_TYPE

    /*- Defined values for QueryStatisticsTest function ---------------------*/
#define AG5313XNI_VAL_STATISTICS_MEAN                           (0L)
#define AG5313XNI_VAL_STATISTICS_STANDARD_DEVIATION             (1L)
#define AG5313XNI_VAL_STATISTICS_MINIMUM                        (2L)
#define AG5313XNI_VAL_STATISTICS_MAXIMUM                        (3L)

/*****************************************************************************
 *---------------- Instrument Driver Function Declarations ------------------*
 *****************************************************************************/

    /*- Init and Close Functions --------------------------------------------*/
ViStatus _VI_FUNC ag5313xni_init (
    ViRsrc resourceName,
    ViBoolean IDQuery,
    ViBoolean resetDevice,
    ViSession *vi
    );

ViStatus _VI_FUNC ag5313xni_InitWithOptions (
    ViRsrc resourceName,
    ViBoolean IDQuery,
    ViBoolean resetDevice,
    ViConstString optionString,
    ViSession *newVi
    );

ViStatus _VI_FUNC ag5313xni_close (ViSession vi);

    /*- Coercion Info Functions ---------------------------------------------*/
ViStatus _VI_FUNC ag5313xni_GetNextCoercionRecord (
    ViSession vi,
    ViInt32 bufferSize,
    ViChar record[]
    );

    /*- Locking Functions ---------------------------------------------------*/
ViStatus _VI_FUNC ag5313xni_LockSession (ViSession vi, ViBoolean *callerHasLock);
ViStatus _VI_FUNC ag5313xni_UnlockSession (ViSession vi, ViBoolean *callerHasLock);

    /*- Error Functions -----------------------------------------------------*/
ViStatus _VI_FUNC ag5313xni_error_query (
    ViSession vi,
    ViInt32 *errorCode,
    ViChar errorMessage[]
    );

ViStatus _VI_FUNC ag5313xni_GetChannelName (
    ViSession vi,
    ViInt32 index,
    ViInt32 bufferSize,
    ViChar channelName[]
    );

ViStatus _VI_FUNC ag5313xni_GetError (
    ViSession vi,
    ViStatus *code,
    ViInt32 bufferSize,
    ViChar description[]
    );

ViStatus _VI_FUNC ag5313xni_ClearError (ViSession vi);

ViStatus _VI_FUNC ag5313xni_error_message (
    ViSession vi,
    ViStatus errorCode,
    ViChar errorMessage[256]
    );

    /*- Interchangeability Checking Functions -------------------------------*/
ViStatus _VI_FUNC ag5313xni_GetNextInterchangeWarning (
    ViSession vi,
    ViInt32 bufferSize,
    ViChar warnString[]
    );

ViStatus _VI_FUNC ag5313xni_ResetInterchangeCheck (ViSession vi);
ViStatus _VI_FUNC ag5313xni_ClearInterchangeWarnings (ViSession vi);

    /*- Utility Functions ---------------------------------------------------*/
ViStatus _VI_FUNC ag5313xni_InvalidateAllAttributes (ViSession vi);

ViStatus _VI_FUNC ag5313xni_Initiate (ViSession vi);

ViStatus _VI_FUNC ag5313xni_IsMeasurementComplete (ViSession vi,
                            ViInt32 *MeasurementStatus);

ViStatus _VI_FUNC ag5313xni_Fetch (ViSession vi, ViReal64 *measurement);

ViStatus _VI_FUNC ag5313xni_Read (
    ViSession vi,
    ViInt32 maximumTime_ms,
    ViReal64 *measurement
    );

ViStatus _VI_FUNC ag5313xni_Abort (ViSession vi);

ViStatus _VI_FUNC ag5313xni_reset (ViSession vi);
ViStatus _VI_FUNC ag5313xni_ResetWithDefaults (ViSession vi);
ViStatus _VI_FUNC ag5313xni_self_test (
    ViSession vi,
    ViInt16 *selfTestResult,
    ViChar selfTestMessage[]
    );

ViStatus _VI_FUNC ag5313xni_revision_query (
    ViSession vi,
    ViChar instrumentDriverRevision[],
    ViChar firmwareRevision[]
    );

ViStatus _VI_FUNC ag5313xni_Disable (ViSession vi);

ViStatus _VI_FUNC  ag5313xni_viWrite (ViSession vi, ViByte buffer[], ViInt64 count, ViInt64 *returnCount);
ViStatus _VI_FUNC  ag5313xni_viRead (ViSession vi, ViInt64 bufferSize, ViByte buffer[], ViInt64 *returnCount);

/* Obsolete Direct IO Functions. */
ViStatus _VI_FUNC ag5313xni_WriteInstrData (ViSession vi,
    ViConstString writeBuffer
    );

ViStatus _VI_FUNC ag5313xni_ReadInstrData  (
    ViSession vi,
    ViInt32 numBytes,
    ViChar rdBuf[],
    ViInt32 *bytesRead
    );

    /*- Configure and Measurement Functions ---------------------------------*/

    /*- Channel Sub-group Functions -----------------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigureChannel (
    ViSession vi,
    ViConstString channel,
    ViReal64 impedance,
    ViInt32 coupling,
    ViReal64 attenuation
    );

ViStatus _VI_FUNC ag5313xni_ConfigureChannelFilterEnabled (
    ViSession vi,
    ViConstString channel,
    ViBoolean filterEnabled
    );

ViStatus _VI_FUNC ag5313xni_ConfigureChannelLevel (
    ViSession vi,
    ViConstString channel,
    ViReal64 level,
    ViReal64 hysteresis
    );

ViStatus _VI_FUNC ag5313xni_ConfigureChannelSlope (
    ViSession vi,
    ViConstString channel,
    ViInt32 slope
    );

    /*- Frequency Sub-group Functions ---------------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigureFrequencyManual (
    ViSession vi,
    ViConstString channel,
    ViReal64 estimate,
    ViReal64 resolution
    );

ViStatus _VI_FUNC ag5313xni_ConfigureFrequency (
    ViSession vi,
    ViConstString channel
    );

ViStatus _VI_FUNC ag5313xni_ConfigureFrequencyWithApertureTime (
    ViSession vi,
    ViConstString channel,
    ViReal64 ApertureTime
    );

    /*- Period Sub-group Functions ------------------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigurePeriod (
    ViSession vi,
    ViConstString channel,
    ViReal64 estimate,
    ViReal64 resolution
    );

ViStatus _VI_FUNC ag5313xni_ConfigurePeriodWithApertureTime (
    ViSession vi,
    ViConstString channel,
    ViReal64 ApertureTime
    );

    /*- Pulse Width Sub-group Functions -------------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigurePulseWidth (
    ViSession vi,
    ViConstString channel,
    ViReal64 estimate,
    ViReal64 resolution
    );

    /*- Duty Cycle Sub-group Functions --------------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigureDutyCycle (
    ViSession vi,
    ViConstString channel,
    ViReal64 frequencyEstimate,
    ViReal64 resolution
    );

    /*- Edge Time Sub-group Functions ---------------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigureEdgeTime (
    ViSession vi,
    ViConstString channel,
    ViReal64 estimate,
    ViReal64 resolution
    );

ViStatus _VI_FUNC ag5313xni_ConfigureEdgeTimeReferenceLevels(
    ViSession vi,
    ViConstString channel,
    ViInt32 referenceType,
    ViReal64 estimate,
    ViReal64 resolution,
    ViReal64 highReference,
    ViReal64 lowReference);

    /*- Frequency Ratio Sub-group Functions ---------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigureFrequencyRatio (
    ViSession vi,
    ViConstString NumeratorChannel,
    ViConstString DenominatorChannel,
    ViReal64 NumeratorFrequencyEstimate,
    ViReal64 Estimate,
    ViReal64 Resolution
    );

    /*- Time Interval Sub-group Functions -----------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigureTimeInterval (
    ViSession vi,
    ViConstString startChannel,
    ViConstString stopChannel,
    ViReal64 estimate,
    ViReal64 resolution
    );

    /*- Phase Sub-group Functions -------------------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigurePhase (
    ViSession vi,
    ViConstString MeasurementChannel,
    ViConstString ReferenceChannel,
    ViReal64 FrequencyEstimate,
    ViReal64 Resolution
    );

    /*- Totalize Sub-group Functions -----------------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigureContinuousTotalize (
    ViSession vi,
    ViConstString channel
    );

ViStatus _VI_FUNC ag5313xni_StartContinuousTotalize (
    ViSession vi
    );

ViStatus _VI_FUNC ag5313xni_StopContinuousTotalize (
    ViSession vi
    );

ViStatus _VI_FUNC ag5313xni_FetchContinuousTotalizeCount (
    ViSession vi,
    ViInt32 *Measurement
    );

ViStatus _VI_FUNC ag5313xni_ConfigureGatedTotalize (
    ViSession vi,
    ViConstString channel,
    ViConstString GateSource,
    ViInt32 GateSlope
    );

ViStatus _VI_FUNC ag5313xni_ConfigureTimedTotalize (
    ViSession vi,
    ViConstString channel,
    ViReal64 GateTime
    );

    /*- Arm Sub-group Functions ---------------------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigureStartArm (ViSession vi, ViInt32 type);

ViStatus _VI_FUNC ag5313xni_ConfigureStopArm (ViSession vi, ViInt32 type);

ViStatus _VI_FUNC ag5313xni_ConfigureExternalStartArm (
    ViSession vi,
    ViConstString source,
    ViReal64 level,
    ViInt32 slope,
    ViReal64 delay
    );

ViStatus _VI_FUNC ag5313xni_ConfigureExternalStopArm (
    ViSession vi,
    ViConstString source,
    ViReal64 level,
    ViInt32 slope,
    ViReal64 delay
    );

    /*- Voltage Sub-group Functions -----------------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigureVoltage (
    ViSession vi,
    ViConstString channel,
    ViInt32 Function,
    ViReal64 Estimate,
    ViReal64 Resolution
    );

    /*- Math Extention group Functions --------------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigureMathEnabled (
    ViSession   vi,
    ViBoolean   enabled
    );

ViStatus _VI_FUNC ag5313xni_ConfigureMathAutoEnabled (
    ViSession   vi,
    ViBoolean   enabled
    );

ViStatus _VI_FUNC ag5313xni_ConfigureMathScaleOffset (
    ViSession   vi,
    ViReal64    scale,
    ViReal64    offset
    );

    /*- Limit Extention group Functions -------------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigureLimitEnabled (
    ViSession   vi,
    ViBoolean   enabled
    );

ViStatus _VI_FUNC ag5313xni_ConfigureLimitAutoEnabled (
    ViSession   vi,
    ViBoolean   enabled
    );

ViStatus _VI_FUNC ag5313xni_ConfigureClearAutoEnabled (
    ViSession   vi,
    ViBoolean   enabled
    );

ViStatus _VI_FUNC ag5313xni_ConfigureLimit (
    ViSession   vi,
    ViReal64    lower,
    ViReal64    upper
    );

    /*- Statistics Extention group Functions --------------------------------*/
ViStatus _VI_FUNC ag5313xni_ConfigureStatistics (
    ViSession   vi,
    ViBoolean   statisticsEnabled,
    ViInt32     measurementCount
    );

ViStatus _VI_FUNC ag5313xni_ConfigureStatisticsLimit (
    ViSession   vi,
    ViBoolean   limitEnabled,
    ViReal64    lower,
    ViReal64    upper
    );

    /*- Low-level Measurement group Functions -------------------------------*/
ViStatus _VI_FUNC ag5313xni_RecalculateMath (ViSession vi);

ViStatus _VI_FUNC ag5313xni_RecalculateLimits (ViSession vi);

ViStatus _VI_FUNC ag5313xni_ClearLimitsResult (ViSession vi);

ViStatus _VI_FUNC ag5313xni_QueryLimitsTest (
    ViSession   vi,
    ViInt32 *failCountTotal,
    ViInt32 *failCountLower,
    ViInt32 *failCountUpper,
    ViInt32 *passCountTotal
    );

ViStatus _VI_FUNC ag5313xni_IsOutOfLimit (ViSession vi, ViBoolean *status);

ViStatus _VI_FUNC ag5313xni_QueryStatisticsTest (
    ViSession   vi,
    ViInt32     type,
    ViReal64*   result
);

ViStatus _VI_FUNC ag5313xni_GetCurrentStatisticsCount (
    ViSession   vi,
    ViInt32*    currentCount
);

ViStatus _VI_FUNC ag5313xni_ClearStatisticsResult (ViSession vi);

    /*- Set, Get, and Check Attribute Functions -----------------------------*/
ViStatus _VI_FUNC ag5313xni_GetAttributeViInt32 (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViInt32 *value
    );

ViStatus _VI_FUNC ag5313xni_GetAttributeViReal64 (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViReal64 *value
    );

ViStatus _VI_FUNC ag5313xni_GetAttributeViString (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViInt32 bufSize,
    ViChar value[]
    );

ViStatus _VI_FUNC ag5313xni_GetAttributeViSession (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViSession *value
    );

ViStatus _VI_FUNC ag5313xni_GetAttributeViBoolean (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViBoolean *value
    );

ViStatus _VI_FUNC ag5313xni_SetAttributeViInt32 (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViInt32 value
    );

ViStatus _VI_FUNC ag5313xni_SetAttributeViReal64 (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViReal64 value
    );

ViStatus _VI_FUNC ag5313xni_SetAttributeViString (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViConstString value
    );

ViStatus _VI_FUNC ag5313xni_SetAttributeViSession (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViSession value
    );

ViStatus _VI_FUNC ag5313xni_SetAttributeViBoolean (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViBoolean value
    );

ViStatus _VI_FUNC ag5313xni_CheckAttributeViInt32 (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViInt32 value
    );

ViStatus _VI_FUNC ag5313xni_CheckAttributeViReal64 (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViReal64 value
    );

ViStatus _VI_FUNC ag5313xni_CheckAttributeViString (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViConstString value
    );

ViStatus _VI_FUNC ag5313xni_CheckAttributeViSession (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViSession value
    );

ViStatus _VI_FUNC ag5313xni_CheckAttributeViBoolean (
    ViSession vi,
    ViConstString channelName,
    ViAttr attribute,
    ViBoolean value
    );

/****************************************************************************
 *---------------------------- End Include File ----------------------------*
 ****************************************************************************/
#if defined(__cplusplus) || defined(__cplusplus__)
}
#endif
#endif /* __AG5313XNI_HEADER */
