/****************************************************************************
 *                       Agilent 6000 Series Oscilloscopes
 *
 * Title:    ag6000.h
 * Purpose:  Agilent 6000 Series Oscilloscopes
 *           instrument driver declarations.
 *
 ****************************************************************************/

#ifndef __AG6000_HEADER
#define __AG6000_HEADER

#include <ivi.h>
#include <iviscope.h>

#if defined(__cplusplus) || defined(__cplusplus__)
extern "C" {
#endif

/****************************************************************************
 *----------------- Instrument Driver Revision Information -----------------*
 ****************************************************************************/
#define AG6000_MAJOR_VERSION                3     /* Instrument driver major version   */
#define AG6000_MINOR_VERSION                0     /* Instrument driver minor version   */

#define AG6000_CLASS_SPEC_MAJOR_VERSION     4     /* Class specification major version */
#define AG6000_CLASS_SPEC_MINOR_VERSION     1     /* Class specification minor version */

#define AG6000_SUPPORTED_INSTRUMENT_MODELS  "DSO6012A,MSO6012A,DSO6014A,DSO6014L,MSO6014A,DSO6032A,MSO6032A,DSO6034A,MSO6034A,DSO6052A,MSO6052A,DSO6054A,DSO6054L,MSO6054A,DSO6102A,MSO6102A,DSO6104A,DSO6104L,MSO6104A,DSO5012A,DSO5014A,DSO5032A,DSO5034A,DSO5052A,DSO5054A,DSO7032A.DSO7034A,DSO7052A,DSO7054A,DSO7104A,MSO7032A,MSO7034A,MSO7052A,MSO7054A,MSO7104A,DSO7012A,MSO7012A,DSO7014A,MSO7014A,DSO7032B,DSO7034B,DSO7052B,DSO7054B,DSO7104B,MSO7032B,MSO7034B,MSO7052B,MSO7054B,MSO7104B,DSO7012B,MSO7012B,DSO7014B,MSO7014B"

#define AG6000_DRIVER_VENDOR                "National Instruments"

#ifdef _IVI_mswin64_
#define AG6000_DRIVER_DESCRIPTION           "Agilent 6000 and 7000 Series Oscilloscopes [Compiled for 64-bit]"
#else
#define AG6000_DRIVER_DESCRIPTION           "Agilent 6000 and 7000 Series Oscilloscopes"
#endif

/****************************************************************************
 *------------------------------ Useful Macros -----------------------------*
 ****************************************************************************/


    /* Defined values for maxTime parameter to the waveform acquisition functions */
#define AG6000_VAL_MAX_TIME_INFINITE        IVISCOPE_VAL_MAX_TIME_INFINITE
#define AG6000_VAL_MAX_TIME_IMMEDIATE       IVISCOPE_VAL_MAX_TIME_IMMEDIATE

    /* Defined values for the status parameter of the ag6000_Acquisition_Status function */
#define AG6000_VAL_ACQ_COMPLETE             IVISCOPE_VAL_ACQ_COMPLETE
#define AG6000_VAL_ACQ_IN_PROGRESS          IVISCOPE_VAL_ACQ_IN_PROGRESS
#define AG6000_VAL_ACQ_STATUS_UNKNOWN       IVISCOPE_VAL_ACQ_STATUS_UNKNOWN

    /*
        Defined values for the measurementFunction parameter of the
        ag6000_ReadWaveformMeasurement function.
    */
#define AG6000_VAL_RISE_TIME                IVISCOPE_VAL_RISE_TIME
#define AG6000_VAL_FALL_TIME                IVISCOPE_VAL_FALL_TIME
#define AG6000_VAL_FREQUENCY                IVISCOPE_VAL_FREQUENCY
#define AG6000_VAL_PERIOD                   IVISCOPE_VAL_PERIOD
#define AG6000_VAL_VOLTAGE_RMS              IVISCOPE_VAL_VOLTAGE_RMS
#define AG6000_VAL_VOLTAGE_PEAK_TO_PEAK     IVISCOPE_VAL_VOLTAGE_PEAK_TO_PEAK
#define AG6000_VAL_VOLTAGE_MAX              IVISCOPE_VAL_VOLTAGE_MAX
#define AG6000_VAL_VOLTAGE_MIN              IVISCOPE_VAL_VOLTAGE_MIN
#define AG6000_VAL_VOLTAGE_HIGH             IVISCOPE_VAL_VOLTAGE_HIGH
#define AG6000_VAL_VOLTAGE_LOW              IVISCOPE_VAL_VOLTAGE_LOW
#define AG6000_VAL_VOLTAGE_AVERAGE          IVISCOPE_VAL_VOLTAGE_AVERAGE
#define AG6000_VAL_WIDTH_NEG                IVISCOPE_VAL_WIDTH_NEG
#define AG6000_VAL_WIDTH_POS                IVISCOPE_VAL_WIDTH_POS
#define AG6000_VAL_DUTY_CYCLE_POS           IVISCOPE_VAL_DUTY_CYCLE_POS
#define AG6000_VAL_AMPLITUDE                IVISCOPE_VAL_AMPLITUDE
#define AG6000_VAL_OVERSHOOT                IVISCOPE_VAL_OVERSHOOT
#define AG6000_VAL_PRESHOOT                 IVISCOPE_VAL_PRESHOOT
#define AG6000_VAL_COUNTER                  (IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + 1L)
#define AG6000_VAL_DELAY                    (IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + 2L)
#define AG6000_VAL_PHASE                    (IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + 3L)
#define AG6000_VAL_X_AT_MAX                 (IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + 4L)
#define AG6000_VAL_X_AT_MIN                 (IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + 5L)

/****************************************************************************
 *---------------------------- Attribute Defines ---------------------------*
 ****************************************************************************/

    /*- IVI Inherent Instrument Attributes ---------------------------------*/

        /* User Options */
#define AG6000_ATTR_RANGE_CHECK                   IVI_ATTR_RANGE_CHECK                    /* ViBoolean */
#define AG6000_ATTR_QUERY_INSTRUMENT_STATUS       IVI_ATTR_QUERY_INSTRUMENT_STATUS        /* ViBoolean */
#define AG6000_ATTR_CACHE                         IVI_ATTR_CACHE                          /* ViBoolean */
#define AG6000_ATTR_SIMULATE                      IVI_ATTR_SIMULATE                       /* ViBoolean */
#define AG6000_ATTR_RECORD_COERCIONS              IVI_ATTR_RECORD_COERCIONS               /* ViBoolean */
#define AG6000_ATTR_INTERCHANGE_CHECK             IVI_ATTR_INTERCHANGE_CHECK              /* ViBoolean */

        /* Driver Information  */
#define AG6000_ATTR_SPECIFIC_DRIVER_PREFIX        IVI_ATTR_SPECIFIC_DRIVER_PREFIX         /* ViString, read-only  */
#define AG6000_ATTR_SUPPORTED_INSTRUMENT_MODELS   IVI_ATTR_SUPPORTED_INSTRUMENT_MODELS    /* ViString, read-only  */
#define AG6000_ATTR_GROUP_CAPABILITIES            IVI_ATTR_GROUP_CAPABILITIES             /* ViString, read-only  */
#define AG6000_ATTR_INSTRUMENT_MANUFACTURER       IVI_ATTR_INSTRUMENT_MANUFACTURER        /* ViString, read-only  */
#define AG6000_ATTR_INSTRUMENT_MODEL              IVI_ATTR_INSTRUMENT_MODEL               /* ViString, read-only  */
#define AG6000_ATTR_INSTRUMENT_FIRMWARE_REVISION  IVI_ATTR_INSTRUMENT_FIRMWARE_REVISION   /* ViString, read-only  */
#define AG6000_ATTR_SPECIFIC_DRIVER_REVISION      IVI_ATTR_SPECIFIC_DRIVER_REVISION       /* ViString, read-only  */
#define AG6000_ATTR_SPECIFIC_DRIVER_VENDOR        IVI_ATTR_SPECIFIC_DRIVER_VENDOR         /* ViString, read-only  */
#define AG6000_ATTR_SPECIFIC_DRIVER_DESCRIPTION   IVI_ATTR_SPECIFIC_DRIVER_DESCRIPTION    /* ViString, read-only  */
#define AG6000_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION /* ViInt32, read-only */
#define AG6000_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION /* ViInt32, read-only */

        /* Advanced Session Information */
#define AG6000_ATTR_LOGICAL_NAME                  IVI_ATTR_LOGICAL_NAME                   /* ViString, read-only  */
#define AG6000_ATTR_IO_RESOURCE_DESCRIPTOR        IVI_ATTR_IO_RESOURCE_DESCRIPTOR         /* ViString, read-only  */
#define AG6000_ATTR_DRIVER_SETUP                  IVI_ATTR_DRIVER_SETUP                   /* ViString, read-only  */
    /*- Instrument-Specific Attributes -------------------------------------*/
    /*- Acquisition Sub-system ---------------------------------------------*/
#define AG6000_ATTR_ACQUISITION_TYPE         IVISCOPE_ATTR_ACQUISITION_TYPE         /* ViInt32 */
#define AG6000_ATTR_ACQUISITION_MODE         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 52L)  /* ViInt32 */
#define AG6000_ATTR_CHANNEL_COUNT            IVI_ATTR_CHANNEL_COUNT                 /* ViInt32,  read-only  */
#define AG6000_ATTR_INITIATE_CONTINUOUS      IVISCOPE_ATTR_INITIATE_CONTINUOUS      /* ViBoolean */
#define AG6000_ATTR_NUM_AVERAGES             IVISCOPE_ATTR_NUM_AVERAGES             /* ViInt32 */
#define AG6000_ATTR_SAMPLE_MODE              IVISCOPE_ATTR_SAMPLE_MODE              /* ViInt32, Read-only */
#define AG6000_ATTR_HORZ_TIME_PER_RECORD     IVISCOPE_ATTR_HORZ_TIME_PER_RECORD     /* ViReal64 */
#define AG6000_ATTR_HORZ_MIN_NUM_PTS         IVISCOPE_ATTR_HORZ_MIN_NUM_PTS         /* ViInt32 */
#define AG6000_ATTR_HORZ_RECORD_LENGTH       IVISCOPE_ATTR_HORZ_RECORD_LENGTH       /* ViInt32, Read-only  */
#define AG6000_ATTR_ACQUISITION_START_TIME   IVISCOPE_ATTR_ACQUISITION_START_TIME   /* ViReal64, percentage of record length  */
#define AG6000_ATTR_HORZ_SAMPLE_RATE         IVISCOPE_ATTR_HORZ_SAMPLE_RATE         /* ViReal64, Read-only */
#define AG6000_ATTR_HORZ_RECORD_MODE        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 114L)  /* ViInt32 */

    /*- Channel Sub-system -------------------------------------------------*/
#define AG6000_ATTR_CHANNEL_ENABLED          IVISCOPE_ATTR_CHANNEL_ENABLED          /* ViBoolean, Multi-channel */
#define AG6000_ATTR_PROBE_ATTENUATION        IVISCOPE_ATTR_PROBE_ATTENUATION        /* ViReal64, Multi-channel */
#define AG6000_ATTR_PROBE_SENSE_VALUE        IVISCOPE_ATTR_PROBE_SENSE_VALUE        /* ViReal64, Multi-channel, Read-only */
#define AG6000_ATTR_VERTICAL_RANGE           IVISCOPE_ATTR_VERTICAL_RANGE           /* ViReal64, Multi-channel, volts */
#define AG6000_ATTR_VERTICAL_OFFSET          IVISCOPE_ATTR_VERTICAL_OFFSET          /* ViReal64, Multi-channel, volts */
#define AG6000_ATTR_VERTICAL_COUPLING        IVISCOPE_ATTR_VERTICAL_COUPLING        /* ViInt32, Multi-channel */
#define AG6000_ATTR_MAX_INPUT_FREQUENCY      IVISCOPE_ATTR_MAX_INPUT_FREQUENCY      /* ViReal64,  Multi-Channel, hertz  */
#define AG6000_ATTR_INPUT_IMPEDANCE          IVISCOPE_ATTR_INPUT_IMPEDANCE          /* ViReal64, Multi-channel, ohms */
#define AG6000_ATTR_VERNIER                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 60L)  /* ViBoolean, Multi-channel */
#define AG6000_ATTR_INVERT                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 61L)  /* ViBoolean, Multi-channel */
#define AG6000_ATTR_PROBE_SKEW               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 62L)  /* ViReal64, Multi-channel */
#define AG6000_ATTR_PROBE_UNITS              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 63L)  /* ViInt32, Multi-channel */
#define AG6000_ATTR_CHANNEL_LABEL            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 64L)  /* ViString, Multi-channel */
#define AG6000_ATTR_DIG_SIZE                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 65L)  /* ViInt32, Multi-channel */
#define AG6000_ATTR_DIG_THRESHOLD            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 66L)  /* ViInt32 */
#define AG6000_ATTR_DIG_POSITION             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 67L)  /* ViInt32, Multi-channel  */
#define AG6000_ATTR_THRESHOLD_VALUE          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 68L)  /* ViReal64, Multi-channel */
#define AG6000_ATTR_DIG_CHANNEL_ENABLED      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 69L)  /* ViBoolean, Multi-channel */

    /*- Trigger Sub-system -------------------------------------------------*/
#define AG6000_ATTR_TRIGGER_TYPE             IVISCOPE_ATTR_TRIGGER_TYPE             /* ViInt32  */
#define AG6000_ATTR_TRIGGER_SOURCE           IVISCOPE_ATTR_TRIGGER_SOURCE           /* ViString */
#define AG6000_ATTR_TRIGGER_LEVEL            IVISCOPE_ATTR_TRIGGER_LEVEL            /* ViReal64, volts */
#define AG6000_ATTR_TRIGGER_HOLDOFF          IVISCOPE_ATTR_TRIGGER_HOLDOFF          /* ViReal64, seconds   */
#define AG6000_ATTR_TRIGGER_MODIFIER         IVISCOPE_ATTR_TRIGGER_MODIFIER         /* ViInt32 */
#define AG6000_ATTR_TRIGGER_NOISE_REJECT     IVISCOPE_VAL_NOISE_REJECT              /* ViBoolean */
#define AG6000_ATTR_TRIGGER_HF_REJECT        IVISCOPE_VAL_HF_REJECT                 /* ViBoolean */

    /*- Edge Trigger Attributes -*/
#define AG6000_ATTR_TRIGGER_COUPLING         IVISCOPE_ATTR_TRIGGER_COUPLING         /* ViInt32 */
#define AG6000_ATTR_TRIGGER_SLOPE            IVISCOPE_ATTR_TRIGGER_SLOPE            /* ViInt32 */

    /*- TV Trigger Attributes -*/
#define AG6000_ATTR_TV_TRIGGER_SIGNAL_FORMAT IVISCOPE_ATTR_TV_TRIGGER_SIGNAL_FORMAT /* ViInt32 */
#define AG6000_ATTR_TV_TRIGGER_EVENT         IVISCOPE_ATTR_TV_TRIGGER_EVENT         /* ViInt32 */
#define AG6000_ATTR_TV_TRIGGER_LINE_NUMBER   IVISCOPE_ATTR_TV_TRIGGER_LINE_NUMBER   /* ViInt32 */
#define AG6000_ATTR_TV_TRIGGER_POLARITY      IVISCOPE_ATTR_TV_TRIGGER_POLARITY      /* ViInt32 */

    /*- Glitch Trigger Attributes -*/
#define AG6000_ATTR_GLITCH_POLARITY          IVISCOPE_ATTR_GLITCH_POLARITY          /* ViInt32 */
#define AG6000_ATTR_GLITCH_CONDITION         IVISCOPE_ATTR_GLITCH_CONDITION         /* ViInt32 */
#define AG6000_ATTR_GLITCH_WIDTH             IVISCOPE_ATTR_GLITCH_WIDTH             /* ViReal64, Max Width */
#define AG6000_ATTR_GLITCH_MIN_WIDTH         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3L)   /* ViReal64, Min Width */
#define AG6000_ATTR_GLITCH_RANGE             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 5L)   /* ViString */
    /*- Pattern Trigger Attribute -*/
#define AG6000_ATTR_PATTERN                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 6L)   /* ViString */
    /*- CAN Trigger Attributes -*/
#define AG6000_ATTR_CAN_BAUDRATE             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 7L)   /* ViInt32 */
#define AG6000_ATTR_CAN_SIGNAL               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 8L)   /* ViInt32 */
#define AG6000_ATTR_CAN_TRIGGER              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 9L)   /* ViInt32 */
    /*- Duration Trigger Attributes -*/
#define AG6000_ATTR_DURATION_QUALIFIER       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 10L)  /* ViInt32 */
#define AG6000_ATTR_DURATION_PATTERN         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 11L)  /* ViString */
#define AG6000_ATTR_DURATION_MIN             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 12L)  /* ViReal64 */
#define AG6000_ATTR_DURATION_MAX             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 13L)  /* ViReal64 */
#define AG6000_ATTR_DURATION_RANGE           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 14L)  /* ViString */
    /*- IIC Trigger Attributes -*/
#define AG6000_ATTR_IIC_SCL                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 15L)  /* ViString */
#define AG6000_ATTR_IIC_SDA                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 16L)  /* ViString */
#define AG6000_ATTR_IIC_TYPE                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 17L)  /* ViInt32 */
#define AG6000_ATTR_IIC_QUALIFIER            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 18L)  /* ViInt32 */
#define AG6000_ATTR_IIC_ADDRESS              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 19L)  /* ViInt32 */
#define AG6000_ATTR_IIC_DATA                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 20L)  /* ViInt32 */
    /*- LIN Trigger Attributes -*/
#define AG6000_ATTR_LIN_BAUDRATE             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 21L)  /* ViInt32 */
#define AG6000_ATTR_LIN_SIGNAL               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 22L)  /* ViInt32 */
#define AG6000_ATTR_LIN_TRIGGER              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 23L)  /* ViInt32 */
    /*- Sequence Trigger Attributes -*/
#define AG6000_ATTR_SEQUENCE_FIND            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 24L)  /* ViInt32 */
#define AG6000_ATTR_SEQUENCE_TRIGGER         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 25L)  /* ViInt32 */
#define AG6000_ATTR_SEQUENCE_COUNT           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 26L)  /* ViInt32 */
#define AG6000_ATTR_SEQUENCE_RESET           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 27L)  /* ViInt32 */
#define AG6000_ATTR_SEQUENCE_TIMEOUT         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 28L)  /* ViReal64 */
#define AG6000_ATTR_SEQUENCE_EDGE1           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 29L)  /* ViString */
#define AG6000_ATTR_SEQUENCE_EDGE2           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 30L)  /* ViString */
#define AG6000_ATTR_SEQUENCE_PATTERN1        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 31L)  /* ViString */
#define AG6000_ATTR_SEQUENCE_PATTERN2        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 32L)  /* ViString */
    /*- SPI Trigger Attributes -*/
#define AG6000_ATTR_SPI_WIDTH                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 40L)  /* ViInt32 */
#define AG6000_ATTR_SPI_DATA                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 41L)  /* ViString */
#define AG6000_ATTR_SPI_CLKSOURCE            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 42L)  /* ViString */
#define AG6000_ATTR_SPI_SLOPE                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 43L)  /* ViInt32 */
#define AG6000_ATTR_SPI_DSOURCE              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 44L)  /* ViString */
#define AG6000_ATTR_SPI_FRAME                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 45L)  /* ViInt32 */
#define AG6000_ATTR_SPI_FSOURCE              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 46L)  /* ViString */
#define AG6000_ATTR_SPI_TIMEOUT              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 47L)  /* ViReal64 */
    /*- USB Trigger Attributes -*/
#define AG6000_ATTR_USB_TRIGGER              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 48L)  /* ViInt32, enum */
#define AG6000_ATTR_USB_SPEED                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 49L)  /* ViInt32, enum */
#define AG6000_ATTR_USB_DPLUS                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 50L)  /* ViString */
#define AG6000_ATTR_USB_DMINUS               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 51L)  /* ViString */

    /*- Waveform Measurement Attributes ------------------------------------*/
#define AG6000_ATTR_MEASURE_REF              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 73L)  /* ViString */
#define AG6000_ATTR_MEASURE_SOURCE           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 74L)  /* ViString */
#define AG6000_ATTR_MEASURE_DELAY            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 75L)  /* ViString */

#define AG6000_ATTR_ID_QUERY_RESPONSE        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1L)     /* ViString (Read Only) */

    /*- Math Attributes ------------------------------------*/
#define AG6000_ATTR_MATH_CHANNEL_ENABLED     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 80L)  /* ViBoolean */
#define AG6000_ATTR_MATH_SOURCE              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 81L)  /* ViString */
#define AG6000_ATTR_MATH_OPERATION           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 82L)  /* ViInt32 */
#define AG6000_ATTR_MATH_SCALE               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 83L)  /* ViReal64 */
#define AG6000_ATTR_MATH_OFFSET              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 84L)  /* ViReal64 */
#define AG6000_ATTR_MATH_SPAN                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 85L)  /* ViReal64 */
#define AG6000_ATTR_MATH_CENTER              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 86L)  /* ViReal64 */
#define AG6000_ATTR_MATH_WINDOW              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 87L)  /* ViInt32 */
#define AG6000_ATTR_MATH_SOURCE1             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 88L)  /* ViString */
#define AG6000_ATTR_MATH_SOURCE2             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 89L)  /* ViString */

    /*- Timebase Attributes ------------------------------------*/
#define AG6000_ATTR_TIMEBASE_MODE            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 100L)  /* ViInt32, enum */
#define AG6000_ATTR_TIMEBASE_POSITION        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 101L)  /* ViReal64 */
#define AG6000_ATTR_TIMEBASE_REFERENCE       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 103L)  /* ViInt32, enum */
#define AG6000_ATTR_TIMEBASE_VERNIER         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 105L)  /* ViBoolean */

#define AG6000_ATTR_WIN_TIMEBASE_POSITION    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 110L)  /* ViReal64 */
#define AG6000_ATTR_WIN_TIMEBASE_RANGE       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 111L)  /* ViReal64 */


    /*- Waveform Measurement Attributes ------------------------------------*/
#define AG6000_ATTR_MEAS_HIGH_REF            IVISCOPE_ATTR_MEAS_HIGH_REF            /* ViReal64, percentage */
#define AG6000_ATTR_MEAS_LOW_REF             IVISCOPE_ATTR_MEAS_LOW_REF             /* ViReal64, percentage */
#define AG6000_ATTR_MEAS_MID_REF             IVISCOPE_ATTR_MEAS_MID_REF             /* ViReal64, percentage */

/****************************************************************************
 *------------------------ Attribute Value Defines -------------------------*
 ****************************************************************************/
    /*- AG6000_ATTR_PROBE_ATTENUATION Values -*/
#define AG6000_VAL_PROBE_SENSE_ON            IVISCOPE_VAL_PROBE_SENSE_ON

    /*- AG6000_ATTR_VERTICAL_COUPLING Values -*/
#define AG6000_VAL_AC                    IVISCOPE_VAL_AC
#define AG6000_VAL_DC                    IVISCOPE_VAL_DC

    /*- AG6000_ATTR_HORZ_RECORD_MODE Values -*/
#define AG6000_VAL_RECORD_NORMAL        0
#define AG6000_VAL_RECORD_MAX           1
#define AG6000_VAL_RECORD_RAW           2

    /*- AG6000_ATTR_TRIGGER_TYPE Values -*/
#define AG6000_VAL_EDGE_TRIGGER          IVISCOPE_VAL_EDGE_TRIGGER
#define AG6000_VAL_GLITCH_TRIGGER        IVISCOPE_VAL_GLITCH_TRIGGER
#define AG6000_VAL_PATTERN_TRIGGER       (IVISCOPE_VAL_TRIGGER_TYPE_SPECIFIC_EXT_BASE + 1L)
#define AG6000_VAL_CAN_TRIGGER           (IVISCOPE_VAL_TRIGGER_TYPE_SPECIFIC_EXT_BASE + 2L)
#define AG6000_VAL_DURATION_TRIGGER      (IVISCOPE_VAL_TRIGGER_TYPE_SPECIFIC_EXT_BASE + 3L)
#define AG6000_VAL_IIC_TRIGGER           (IVISCOPE_VAL_TRIGGER_TYPE_SPECIFIC_EXT_BASE + 4L)
#define AG6000_VAL_LIN_TRIGGER           (IVISCOPE_VAL_TRIGGER_TYPE_SPECIFIC_EXT_BASE + 5L)
#define AG6000_VAL_SEQUENCE_TRIGGER      (IVISCOPE_VAL_TRIGGER_TYPE_SPECIFIC_EXT_BASE + 6L)
#define AG6000_VAL_SPI_TRIGGER           (IVISCOPE_VAL_TRIGGER_TYPE_SPECIFIC_EXT_BASE + 7L)
#define AG6000_VAL_TV_TRIGGER            IVISCOPE_VAL_TV_TRIGGER
#define AG6000_VAL_USB_TRIGGER           (IVISCOPE_VAL_TRIGGER_TYPE_SPECIFIC_EXT_BASE + 8L)

    /*- Source Values -*/
#define AG6000_VAL_CHANNEL1              "CHAN1"
#define AG6000_VAL_CHANNEL2              "CHAN2"
#define AG6000_VAL_CHANNEL3              "CHAN3"
#define AG6000_VAL_CHANNEL4              "CHAN4"
#define AG6000_VAL_DIGITAL0              "DIG0"
#define AG6000_VAL_DIGITAL1              "DIG1"
#define AG6000_VAL_DIGITAL2              "DIG2"
#define AG6000_VAL_DIGITAL3              "DIG3"
#define AG6000_VAL_DIGITAL4              "DIG4"
#define AG6000_VAL_DIGITAL5              "DIG5"
#define AG6000_VAL_DIGITAL6              "DIG6"
#define AG6000_VAL_DIGITAL7              "DIG7"
#define AG6000_VAL_DIGITAL8              "DIG8"
#define AG6000_VAL_DIGITAL9              "DIG9"
#define AG6000_VAL_DIGITAL10             "DIG10"
#define AG6000_VAL_DIGITAL11             "DIG11"
#define AG6000_VAL_DIGITAL12             "DIG12"
#define AG6000_VAL_DIGITAL13             "DIG13"
#define AG6000_VAL_DIGITAL14             "DIG14"
#define AG6000_VAL_DIGITAL15             "DIG15"
#define AG6000_VAL_EXTERNAL              "EXT"
#define AG6000_VAL_LINE                  "LINE"
#define AG6000_VAL_MATH                  "FUNC"
#define AG6000_VAL_NONE                  "NONE"
#define AG6000_VAL_CH1_PLUS_CH2          "ADD"
#define AG6000_VAL_CH1_MINUS_CH2         "SUBT"
#define AG6000_VAL_CH1_MULTIPLE_CH2      "MULT"
#define AG6000_VAL_MATH_SOURCE1_GOFT     "GOFT"
#define AG6000_VAL_MATH_SOURCE2_NONE     "NONE"

    /*- AG6000_ATTR_TRIGGER_MODIFIER Values -*/
#define AG6000_VAL_AUTO                  IVISCOPE_VAL_AUTO          /* default */
#define AG6000_VAL_NO_TRIGGER_MOD        IVISCOPE_VAL_NO_TRIGGER_MOD

    /*- AG6000_ATTR_TRIGGER_COUPLING Values -*/
/* #define AG6000_VAL_AC                 DEFINED ABOVE */
/* #define AG6000_VAL_DC                 DEFINED ABOVE */
#define AG6000_VAL_LF_REJECT             IVISCOPE_VAL_LF_REJECT

    /*- AG6000_ATTR_TRIGGER_SLOPE Values -*/
#define AG6000_VAL_POSITIVE              IVISCOPE_VAL_POSITIVE
#define AG6000_VAL_NEGATIVE              IVISCOPE_VAL_NEGATIVE
#define AG6000_VAL_EITHER                (2L)
#define AG6000_VAL_ALTERNATE             (3L)

    /*- AG6000_ATTR_TV_TRIGGER_SIGNAL_FORMAT Values -*/
#define AG6000_VAL_GENERIC               (IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + 1L)
#define AG6000_VAL_NTSC                  IVISCOPE_VAL_NTSC
#define AG6000_VAL_PALM                  (IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + 2L)
#define AG6000_VAL_PAL                   IVISCOPE_VAL_PAL
#define AG6000_VAL_SECAM                 IVISCOPE_VAL_SECAM
#define AG6000_VAL_P480L60HZ             (IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + 3L)
#define AG6000_VAL_P480                  (IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + 4L)
#define AG6000_VAL_P720L60HZ             (IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + 5L)
#define AG6000_VAL_P720                  (IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + 6L)
#define AG6000_VAL_P1080L24HZ            (IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + 7L)
#define AG6000_VAL_P1080                 (IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + 8L)
#define AG6000_VAL_P1080L25HZ            (IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + 9L)
#define AG6000_VAL_I1080L50HZ            (IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + 10L)
#define AG6000_VAL_I1080                 (IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + 11L)
#define AG6000_VAL_I1080L60HZ            (IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + 12L)

    /*- AG6000_ATTR_TV_TRIGGER_EVENT Values -*/
#define AG6000_VAL_TV_EVENT_FIELD1             IVISCOPE_VAL_TV_EVENT_FIELD1
#define AG6000_VAL_TV_EVENT_FIELD2             IVISCOPE_VAL_TV_EVENT_FIELD2
#define AG6000_VAL_TV_EVENT_ANY_FIELD          IVISCOPE_VAL_TV_EVENT_ANY_FIELD
#define AG6000_VAL_TV_EVENT_ANY_LINE           IVISCOPE_VAL_TV_EVENT_ANY_LINE
#define AG6000_VAL_TV_EVENT_LINE_NUMBER        IVISCOPE_VAL_TV_EVENT_LINE_NUMBER
#define AG6000_VAL_TV_EVENT_VERTICAL           (IVISCOPE_VAL_TV_TRIGGER_EVENT_SPECIFIC_EXT_BASE + 1L)
#define AG6000_VAL_TV_EVENT_LFIELD1            (IVISCOPE_VAL_TV_TRIGGER_EVENT_SPECIFIC_EXT_BASE + 2L)
#define AG6000_VAL_TV_EVENT_LFIELD2            (IVISCOPE_VAL_TV_TRIGGER_EVENT_SPECIFIC_EXT_BASE + 3L)
#define AG6000_VAL_TV_EVENT_LALTERNATE         (IVISCOPE_VAL_TV_TRIGGER_EVENT_SPECIFIC_EXT_BASE + 4L)
#define AG6000_VAL_TV_EVENT_LVERTICAL          (IVISCOPE_VAL_TV_TRIGGER_EVENT_SPECIFIC_EXT_BASE + 5L)

        /* Instrument specific attribute value definitions */

    /*- Defined values for AG6000_ATTR_TV_TRIGGER_POLARITY -*/
#define AG6000_VAL_TV_POSITIVE               IVISCOPE_VAL_TV_POSITIVE
#define AG6000_VAL_TV_NEGATIVE               IVISCOPE_VAL_TV_NEGATIVE

    /*- Defined values for AG6000_ATTR_GLITCH_CONDITION -*/
#define AG6000_VAL_GLITCH_LESS_THAN          IVISCOPE_VAL_GLITCH_LESS_THAN
#define AG6000_VAL_GLITCH_GREATER_THAN       IVISCOPE_VAL_GLITCH_GREATER_THAN
#define AG6000_VAL_GLITCH_RANGE              (3L)

    /*- Defined values for AG6000_ATTR_GLITCH_POLARITY -*/
#define AG6000_VAL_GLITCH_POSITIVE           IVISCOPE_VAL_GLITCH_POSITIVE
#define AG6000_VAL_GLITCH_NEGATIVE           IVISCOPE_VAL_GLITCH_NEGATIVE

    /*- AG6000_ATTR_ACQUISITION_TYPE Values -*/
#define AG6000_VAL_NORMAL                IVISCOPE_VAL_NORMAL     /* default */
#define AG6000_VAL_PEAK_DETECT           IVISCOPE_VAL_PEAK_DETECT
#define AG6000_VAL_AVERAGE               IVISCOPE_VAL_AVERAGE

    /*- AG6000_ATTR_SAMPLE_MODE Values -*/
#define AG6000_VAL_REAL_TIME             IVISCOPE_VAL_REAL_TIME
#define AG6000_VAL_EQUIVALENT_TIME       IVISCOPE_VAL_EQUIVALENT_TIME

    /*- AG6000_ATTR_CAN_SIGNAL Values -*/
#define AG6000_VAL_CAN_SIGNAL_RX                0
#define AG6000_VAL_CAN_SIGNAL_TX                1
#define AG6000_VAL_CAN_SIGNAL_CAN_H             2
#define AG6000_VAL_CAN_SIGNAL_CAN_L             3
#define AG6000_VAL_CAN_SIGNAL_DIFFERENTIAL      4

    /*- AG6000_ATTR_CAN_TRIGGER Values -*/
#define AG6000_VAL_CAN_TRIGGER_SOF              0
#define AG6000_VAL_CAN_TRIGGER_DATA             1
#define AG6000_VAL_CAN_TRIGGER_ERROR            2
#define AG6000_VAL_CAN_TRIGGER_IDDATA           3
#define AG6000_VAL_CAN_TRIGGER_IDEITHER         4
#define AG6000_VAL_CAN_TRIGGER_IDREMOTE         5

    /*- AG6000_ATTR_DURATION_QUALIFIER Values -*/
#define AG6000_VAL_DURATION_GREATERTHAN         0
#define AG6000_VAL_DURATION_LESSTHAN            1
#define AG6000_VAL_DURATION_INRANGE             2
#define AG6000_VAL_DURATION_OUTRANGE            3
#define AG6000_VAL_DURATION_TIMEOUT             4

    /*- AG6000_ATTR_IIC_TYPE Values -*/
#define AG6000_VAL_IIC_TYPE_START               0
#define AG6000_VAL_IIC_TYPE_STOP                1
#define AG6000_VAL_IIC_TYPE_NACK                2
#define AG6000_VAL_IIC_TYPE_RESTART             3
#define AG6000_VAL_IIC_TYPE_READEEPROM          4
#define AG6000_VAL_IIC_TYPE_READ7               5
#define AG6000_VAL_IIC_TYPE_WRITE7              6
#define AG6000_VAL_IIC_TYPE_WRITE10             7

    /*- AG6000_ATTR_IIC_QUALIFIER Values -*/
#define AG6000_VAL_IIC_QUALIFIER_EQUAL          0
#define AG6000_VAL_IIC_QUALIFIER_NEQUAL         1
#define AG6000_VAL_IIC_QUALIFIER_LESSTHAN       2
#define AG6000_VAL_IIC_QUALIFIER_GREATERTHAN    3

    /*- AG6000_ATTR_LIN_SIGNAL Values -*/
#define AG6000_VAL_LIN_SIGNAL_LIN               0
#define AG6000_VAL_LIN_SIGNAL_RX                1
#define AG6000_VAL_LIN_SIGNAL_TX                2

    /*- AG6000_ATTR_LIN_TRIGGER Values -*/
#define AG6000_VAL_LIN_TRIGGER_SYNCBREAK        0

    /*- AG6000_ATTR_USB_TRIGGER Values -*/
#define AG6000_VAL_USB_TRIGGER_SOP              0
#define AG6000_VAL_USB_TRIGGER_EOP              1
#define AG6000_VAL_USB_TRIGGER_RES              2
#define AG6000_VAL_USB_TRIGGER_ENT              3
#define AG6000_VAL_USB_TRIGGER_EXIT             4

    /*- AG6000_ATTR_USB_SPEED Values -*/
#define AG6000_VAL_USB_SPEED_LOW                0
#define AG6000_VAL_USB_SPEED_FULL               1

    /*- AG6000_ATTR_SPI_SLOPE Values -*/
#define AG6000_VAL_SPI_SLOPE_NEGATIVE           0
#define AG6000_VAL_SPI_SLOPE_POSITIVE           1

    /*- AG6000_ATTR_SPI_FRAME Values -*/
#define AG6000_VAL_SPI_FRAME_NCHIP              0
#define AG6000_VAL_SPI_FRAME_CHIP               1
#define AG6000_VAL_SPI_FRAME_TIMEOUT            2

    /*- AG6000_ATTR_SEQUENCE_FIND Values -*/
#define AG6000_VAL_SEQ_TRIGGER_PATT1_ENT        0
#define AG6000_VAL_SEQ_TRIGGER_PATT1_EXIT       1
#define AG6000_VAL_SEQ_TRIGGER_EDGE1            2
#define AG6000_VAL_SEQ_TRIGGER_PATT1_EDGE1      3

    /*- AG6000_ATTR_SEQUENCE_TRIGGER -*/
#define AG6000_VAL_SEQ_TRIGGER_PATT2_ENT            5
#define AG6000_VAL_SEQ_TRIGGER_PATT2_EXIT           6
#define AG6000_VAL_SEQ_TRIGGER_EDGE2                7
#define AG6000_VAL_SEQ_TRIGGER_PATT2_EDGE2          8
#define AG6000_VAL_SEQ_TRIGGER_PATT2_EDGE2_COUNT    9

    /*- function ag6000_ConfigureSequenceEdge, parametr edge  -*/
#define AG6000_VAL_SEQ_TRIGGER_EDGE_1           1
#define AG6000_VAL_SEQ_TRIGGER_EDGE_2           2

    /*- function ag6000_ConfigureSequencePattern, parametr pattern  -*/
#define AG6000_VAL_SEQ_TRIGGER_PATTERN_1        1
#define AG6000_VAL_SEQ_TRIGGER_PATTERN_2        2

    /*- AG6000_ATTR_SEQUENCE_RESET + AG6000_ATTR_SEQUENCE_FIND, AG6000_ATTR_SEQUENCE_TRIGGER -*/
#define AG6000_VAL_SEQ_TRIGGER_NO_RESET     10
#define AG6000_VAL_SEQ_TRIGGER_TIMEOUT      11

    /*- AG6000_ATTR_ACQUISITION_MODE -*/
#define AG6000_VAL_ACQ_MODE_REALTIME        0
#define AG6000_VAL_ACQ_MODE_EQTIME          1

    /*- AG6000_ATTR_PROBE_UNITS -*/
#define AG6000_VAL_PROBE_UNITS_VOLTS        0
#define AG6000_VAL_PROBE_UNITS_AMPS         1

    /*- AG6000_ATTR_MATH_OPERATION -*/
#define AG6000_VAL_MATH_OPERATION_SUBTRACT            0
#define AG6000_VAL_MATH_OPERATION_MULTIPLY            1
#define AG6000_VAL_MATH_OPERATION_INTEGRATE           2
#define AG6000_VAL_MATH_OPERATION_DIFFERENTIATE       3
#define AG6000_VAL_MATH_OPERATION_FFT                 4
#define AG6000_VAL_MATH_OPERATION_ADD                 5
#define AG6000_VAL_MATH_OPERATION_SQUARE_ROOT         6
#define AG6000_VAL_MATH_OPERATION_GOFT_PLUS           7
#define AG6000_VAL_MATH_OPERATION_GOFT_MINUS          8
#define AG6000_VAL_MATH_OPERATION_GOFT_MULTIPLY       9

    /*- AG6000_ATTR_MATH_WINDOW -*/
#define AG6000_VAL_MATH_WINDOW_HANNING              0
#define AG6000_VAL_MATH_WINDOW_FLATTOP              1
#define AG6000_VAL_MATH_WINDOW_RECTANGULAR          2

    /*- AG6000_ATTR_DIG_SIZE -*/
#define AG6000_VAL_DIGITAL_SIZE_SMALL               0
#define AG6000_VAL_DIGITAL_SIZE_MEDIUM              1
#define AG6000_VAL_DIGITAL_SIZE_LARGE               2

    /*- AG6000_ATTR_DIG_THRESHOLD -*/
#define AG6000_VAL_THRESHOLD_TTL        0
#define AG6000_VAL_THRESHOLD_CMOS       1
#define AG6000_VAL_THRESHOLD_ECL        2
#define AG6000_VAL_THRESHOLD_USER       3

/*- AG6000_ATTR_TIMEBASE_MODE -*/
#define AG6000_VAL_TIMEBASE_NORMAL      (0)
#define AG6000_VAL_TIMEBASE_WINDOW      (1)
#define AG6000_VAL_TIMEBASE_XY          (2)
#define AG6000_VAL_TIMEBASE_ROLL        (3)

/*- AG6000_ATTR_TIMEBASE_REFERENCE -*/
#define AG6000_VAL_TIMEBASE_REF_LEFT        (0)
#define AG6000_VAL_TIMEBASE_REF_CENTER      (1)
#define AG6000_VAL_TIMEBASE_REF_RIGHT       (2)

/****************************************************************************
 *---------------- Instrument Driver Function Declarations -----------------*
 ****************************************************************************/

    /*- Init and Close Functions -------------------------------------------*/
ViStatus _VI_FUNC  ag6000_init (ViRsrc resourceName, ViBoolean IDQuery,
                                  ViBoolean resetDevice, ViSession *vi);
ViStatus _VI_FUNC  ag6000_InitWithOptions (ViRsrc resourceName, ViBoolean IDQuery,
                                             ViBoolean resetDevice, ViConstString optionString,
                                             ViSession *newVi);
ViStatus _VI_FUNC  ag6000_close (ViSession vi);

ViStatus _VI_FUNC  ag6000_DeviceClear (ViSession instrumentHandle);

    /*- Coercion Info Functions --------------------------------------------*/
ViStatus _VI_FUNC  ag6000_GetNextCoercionRecord (ViSession vi,
                                                   ViInt32 bufferSize,
                                                   ViChar record[]);

    /*- Locking Functions --------------------------------------------------*/
ViStatus _VI_FUNC  ag6000_LockSession (ViSession vi, ViBoolean *callerHasLock);
ViStatus _VI_FUNC  ag6000_UnlockSession (ViSession vi, ViBoolean *callerHasLock);

    /*- Channel Info Functions ---------------------------------------------*/
ViStatus _VI_FUNC ag6000_GetChannelName (ViSession vi, ViInt32 index,
                                   ViInt32 bufferSize, ViChar name[]);

    /*- Acquisition Subsystem Configuration ---------------------------------*/
ViStatus _VI_FUNC  ag6000_ConfigureAcquisitionType (ViSession vi,
                                                      ViInt32 acquisitionType);
ViStatus _VI_FUNC ag6000_ConfigureAcquisitionMode (ViSession vi,
                                                   ViInt32 acquisitionMode);
ViStatus _VI_FUNC  ag6000_ConfigureAcquisitionRecord (ViSession vi,
                                                        ViReal64 timePerRecord,
                                                        ViInt32 minimumRecordLength,
                                                        ViReal64 acqStartTime);
ViStatus _VI_FUNC ag6000_ConfigureRecordMode (ViSession vi,
                                                ViInt32 horizontalRecordMode);
ViStatus _VI_FUNC  ag6000_ConfigureNumAverages (ViSession vi,
                                                  ViInt32 numberOfAverages);
ViStatus _VI_FUNC  ag6000_SampleMode (ViSession vi, ViInt32 *sampleMode);
ViStatus _VI_FUNC  ag6000_SampleRate (ViSession vi, ViReal64 *sampleRate);
ViStatus _VI_FUNC ag6000_ConfigureMathChannelEnabled (ViSession vi,
                                                      ViBoolean channelEnabled);

/* ********************************************************************************* */
/* ag6000_ConfigureMathChannel is obsolete, for the instrument with latest firmware, *
 * call ag6000_ConfigureMathFunction instead.                                        *
 * ********************************************************************************* */
ViStatus _VI_FUNC ag6000_ConfigureMathChannel (ViSession vi,
                                               ViConstString source, ViInt32 operation);
ViStatus _VI_FUNC ag6000_ConfigureMathFunction (ViSession vi,
                                                ViConstString source1,
                                                ViConstString source2,
                                                ViInt32 operation);

ViStatus _VI_FUNC ag6000_ConfigureMathSettings (ViSession vi,
                                                ViReal64 scale, ViReal64 offset);
ViStatus _VI_FUNC ag6000_ConfigureMathFFT (ViSession vi,
                                           ViReal64 span, ViReal64 center,
                                           ViInt32 window);
ViStatus _VI_FUNC  ag6000_ActualRecordLength (ViSession vi,
                                                ViInt32 *actualRecordLength);
ViStatus _VI_FUNC  ag6000_ConfigureInitiateContinuous (ViSession vi,
                                                         ViBoolean continuous);

    /*- Channel Subsystem Configuration -------------------------------------*/
ViStatus _VI_FUNC  ag6000_ConfigureChannel (ViSession vi,
                                              ViConstString channel,
                                              ViReal64 range,
                                              ViReal64 offset,
                                              ViInt32 coupling,
                                              ViReal64 probeAttenuation,
                                              ViBoolean enabled);
ViStatus _VI_FUNC ag6000_ConfigureDigitalChannel (ViSession vi,
                                                  ViConstString channelName,
                                                  ViInt32 size,
                                                  ViInt32 threshold,
                                                  ViReal64 thresholdValue,
                                                  ViBoolean channelEnabled);
ViStatus _VI_FUNC ag6000_ConfigureChanCharacteristics (ViSession vi,
                                                       ViConstString channel,
                                                       ViReal64 inputImpedance,
                                                       ViReal64 maxInputFrequency);
ViStatus _VI_FUNC ag6000_AutoProbeSenseValue (ViSession vi,
                                              ViConstString channel,
                                              ViReal64 *autoProbeSenseValue);

ViStatus _VI_FUNC ag6000_ConfigureChannelInvert (ViSession vi,
                                                 ViConstString channel,
                                                 ViBoolean invert);

ViStatus _VI_FUNC ag6000_ConfigureChannelVernier (ViSession vi,
                                                  ViConstString channel,
                                                  ViBoolean vernier);

ViStatus _VI_FUNC ag6000_ConfigureChannelProbe (ViSession vi,
                                                ViConstString channel,
                                                ViReal64 skew, ViInt32 units);
ViStatus _VI_FUNC ag6000_ConfigureChannelLabel (ViSession vi,
                                                ViConstString channel,
                                                ViConstString label);
ViStatus _VI_FUNC ag6000_ConfigureDigitalPosition (ViSession vi,
                                                   ViConstString channelName,
                                                   ViInt32 position);
ViStatus _VI_FUNC ag6000_ConfigureTimebaseMode (ViSession vi,
                                                ViInt32 timebaseMode);
ViStatus _VI_FUNC ag6000_ConfigureTimebase (ViSession vi,
                                            ViInt32 reference,
                                            ViBoolean vernier);
ViStatus _VI_FUNC ag6000_ConfigureWindowTimebase (ViSession vi,
                                                  ViReal64 position,
                                                  ViReal64 range);

    /*- Triggering Subsystem Configuration ----------------------------------*/
ViStatus _VI_FUNC  ag6000_ConfigureTrigger (ViSession vi,
                                              ViInt32 triggerType,
                                              ViReal64 holdoff);
ViStatus _VI_FUNC  ag6000_ConfigureTriggerCoupling (ViSession vi,
                                                      ViInt32 coupling);
ViStatus _VI_FUNC  ag6000_ConfigureTriggerModifier (ViSession vi,
                                                      ViInt32 modifier);
ViStatus _VI_FUNC ag6000_ConfigureTriggerReject (ViSession vi,
                                                 ViBoolean noiseReject,
                                                 ViBoolean HFReject);
ViStatus _VI_FUNC  ag6000_ConfigureEdgeTriggerSource (ViSession vi,
                                                        ViConstString source,
                                                        ViReal64 level,
                                                        ViInt32 slope);
ViStatus _VI_FUNC ag6000_ConfigureTVTriggerSource (ViSession vi,
                                                     ViConstString source,
                                                     ViInt32 TVSignalFormat,
                                                     ViInt32 TVEvent,
                                                     ViInt32 TVPolarity);
ViStatus _VI_FUNC ag6000_ConfigureTVTriggerLineNumber (ViSession vi,
                                                         ViInt32 lineNumber);
ViStatus _VI_FUNC ag6000_ConfigureIICTriggerSource (ViSession instrumentHandle,
                                                    ViConstString serialClockSource,
                                                    ViConstString serialDataSource,
                                                    ViInt32 type);
ViStatus _VI_FUNC ag6000_ConfigureIICEEPROMQualifier (ViSession vi,
                                                      ViInt32 qualifier);
ViStatus _VI_FUNC ag6000_ConfigureIICData (ViSession vi,
                                           ViInt32 address, ViInt32 data);
ViStatus _VI_FUNC ag6000_ConfigureLINTriggerSource (ViSession vi,
                                                    ViConstString triggerSource,
                                                    ViInt32 baudRate, ViInt32 signal,
                                                    ViInt32 trigger);
ViStatus _VI_FUNC ag6000_ConfigureSequenceTriggerFind (ViSession vi,
                                                       ViInt32 find);
ViStatus _VI_FUNC ag6000_ConfigureSequenceTrigger (ViSession instrumentHandle,
                                                   ViInt32 trigger,
                                                   ViInt32 count);
ViStatus _VI_FUNC ag6000_ConfigureSequenceReset (ViSession vi,
                                                 ViInt32 reset, ViReal64 timeout);
ViStatus _VI_FUNC ag6000_ConfigureSequenceEdge (ViSession vi,
                                                ViInt32 edge,
                                                ViConstString triggerSource,
                                                ViInt32 slope);
ViStatus _VI_FUNC ag6000_ConfigureSequencePattern (ViSession vi,
                                                   ViInt32 pattern,
                                                   ViInt32 dataValue,
                                                   ViInt32 dataMask);
ViStatus _VI_FUNC ag6000_ConfigureSPITriggerSource (ViSession vi,
                                                    ViInt32 SPIDataWidth,
                                                    ViInt32 dataValue,
                                                    ViInt32 dataMask);
ViStatus _VI_FUNC ag6000_ConfigureSPITriggerSignals (ViSession vi,
                                                     ViConstString clockSource,
                                                     ViInt32 slope,
                                                     ViConstString dataSource,
                                                     ViInt32 frame_by,
                                                     ViConstString frameSource);
ViStatus _VI_FUNC ag6000_ConfigureSPITriggerTimeout (ViSession vi,
                                                     ViReal64 timeout);
ViStatus _VI_FUNC ag6000_ConfigureGlitchTriggerSource (ViSession vi,
                                                         ViConstString source,
                                                         ViReal64 level,
                                                         ViInt32 glitchCondition,
                                                         ViInt32 glitchPolarity);
ViStatus _VI_FUNC ag6000_ConfigureGlitchWidth (ViSession vi,
                                                ViReal64 minWidth,
                                                ViReal64 maxWidth);
ViStatus _VI_FUNC ag6000_ConfigureGlitchRange (ViSession vi,
                                               ViReal64 greaterThanTime,
                                               ViReal64 lessThanTime);
ViStatus _VI_FUNC ag6000_ConfigurePatternTrigger (ViSession vi,
                                                  ViInt32 dataValue,
                                                  ViInt32 dataMask,
                                                  ViConstString triggerSource,
                                                  ViInt32 slope);
ViStatus _VI_FUNC ag6000_ConfigureCANTriggerSource (ViSession vi,
                                                    ViConstString source,
                                                    ViInt32 baudRate,
                                                    ViInt32 signal,
                                                    ViInt32 trigger);
ViStatus _VI_FUNC ag6000_ConfigureDurationTriggerSource (ViSession vi,
                                                         ViInt32 qualifier,
                                                         ViInt32 patternValue,
                                                         ViInt32 patternMask);
ViStatus _VI_FUNC ag6000_ConfigureDurationWidth (ViSession vi,
                                                 ViReal64 maximumDuration_sec,
                                                 ViReal64 minimumDuration_sec);
ViStatus _VI_FUNC ag6000_ConfigureDurationRange (ViSession vi,
                                                 ViReal64 greaterThanTime,
                                                 ViReal64 lessThanTime);

    /*- Waveform Acquisition ------------------------------------------------*/
ViStatus _VI_FUNC  ag6000_ReadWaveform (ViSession vi,
                                          ViConstString channel,
                                          ViInt32 waveformSize,
                                          ViInt32 maxTime,
                                          ViReal64 waveform[],
                                          ViInt32 *actualPoints,
                                          ViReal64 *initialX,
                                          ViReal64 *xIncrement);
ViStatus _VI_FUNC  ag6000_InitiateAcquisition (ViSession vi);
ViStatus _VI_FUNC  ag6000_AcquisitionStatus (ViSession vi, ViInt32 *status);
ViStatus _VI_FUNC  ag6000_Abort (ViSession vi);
ViStatus _VI_FUNC  ag6000_FetchWaveform (ViSession vi,
                                           ViConstString channel,
                                           ViInt32 waveformSize,
                                           ViReal64 waveform[],
                                           ViInt32 *actualPoints,
                                           ViReal64 *initialX,
                                           ViReal64 *xIncrement);

    /* Used when AG6000_ATTR_ACQUISTION_TYPE is either */
    /* AG6000_VAL_PEAK_DETECT or AG6000_VAL_ENVELOPE */
ViStatus _VI_FUNC  ag6000_ReadMinMaxWaveform (ViSession vi,
                                                ViConstString channel,
                                                ViInt32 waveformSize,
                                                ViInt32 maxTime,
                                                ViReal64 minWaveform[],
                                                ViReal64 maxWaveform[],
                                                ViInt32 *actualPoints,
                                                ViReal64 *initialX,
                                                ViReal64 *xIncrement);

    /* Used when AG6000_ATTR_ACQUISTION_TYPE is either */
    /* AG6000_VAL_PEAK_DETECT or AG6000_VAL_ENVELOPE */
ViStatus _VI_FUNC  ag6000_FetchMinMaxWaveform (ViSession vi,
                                                 ViConstString channel,
                                                 ViInt32 waveformSize,
                                                 ViReal64 minWaveform[],
                                                 ViReal64 maxWaveform[],
                                                 ViInt32 *actualPoints,
                                                 ViReal64 *initialX,
                                                 ViReal64 *xIncrement);
ViStatus _VI_FUNC ag6000_ConfigureUSBTriggerSource (ViSession vi,
                                                    ViInt32 trigger, ViInt32 speed,
                                                    ViConstString dPlus, ViConstString dMinus);
ViStatus _VI_FUNC ag6000_ConfigureMeasSource (ViSession vi,
                                              ViConstString source1,
                                              ViConstString source2);
ViStatus _VI_FUNC ag6000_ConfigureMeasurementDelay (ViSession vi,
                                                    ViInt32 edgeSpec1,
                                                    ViInt32 edgeSpec2);

    /*- Waveform Measurements ----------------------------------------------*/
ViStatus _VI_FUNC  ag6000_ConfigureRefLevels (ViSession vi,
                                                ViReal64 lowRef,
                                                ViReal64 midRef,
                                                ViReal64 highRef);
ViStatus _VI_FUNC  ag6000_ReadWaveformMeasurement (ViSession vi,
                                                     ViConstString channel,
                                                     ViInt32 measurementFunction,
                                                     ViInt32 maxTime,
                                                     ViReal64 *measurement);
ViStatus _VI_FUNC  ag6000_FetchWaveformMeasurement (ViSession vi,
                                                      ViConstString channel,
                                                      ViInt32 measurementFunction,
                                                      ViReal64 *measurement);

    /*- Auto Setup ----------------------------------------------------------*/
ViStatus _VI_FUNC  ag6000_AutoSetup (ViSession vi);

    /*- Utility -------------------------------------------------------------*/
ViStatus _VI_FUNC ag6000_IsInvalidWfmElement (ViSession vi, ViReal64 elementValue,
                                                    ViBoolean *isInvalid);

    /*- Error Functions ----------------------------------------------------*/
ViStatus _VI_FUNC  ag6000_error_query (ViSession vi, ViInt32 *errorCode,
                                         ViChar errorMessage[]);

ViStatus _VI_FUNC  ag6000_GetError (ViSession vi, ViStatus *code,
                                      ViInt32 bufferSize, ViChar description[]);
ViStatus _VI_FUNC  ag6000_ClearError (ViSession vi);

ViStatus _VI_FUNC  ag6000_error_message (ViSession vi, ViStatus errorCode,
                                           ViChar errorMessage[256]);

    /*- Interchangeability Checking Functions ------------------------------*/
ViStatus _VI_FUNC ag6000_GetNextInterchangeWarning (ViSession vi,
                                                      ViInt32 bufferSize,
                                                      ViChar warnString[]);
ViStatus _VI_FUNC ag6000_ResetInterchangeCheck (ViSession vi);
ViStatus _VI_FUNC ag6000_ClearInterchangeWarnings (ViSession vi);

    /*- Utility Functions --------------------------------------------------*/
ViStatus _VI_FUNC ag6000_InvalidateAllAttributes (ViSession vi);
ViStatus _VI_FUNC  ag6000_reset (ViSession vi);
ViStatus _VI_FUNC  ag6000_ResetWithDefaults (ViSession vi);
ViStatus _VI_FUNC  ag6000_self_test (ViSession vi, ViInt16 *selfTestResult,
                                       ViChar selfTestMessage[]);
ViStatus _VI_FUNC  ag6000_revision_query (ViSession vi,
                                            ViChar instrumentDriverRevision[],
                                            ViChar firmwareRevision[]);
ViStatus _VI_FUNC  ag6000_Disable (ViSession vi);
ViStatus _VI_FUNC  ag6000_viWrite (ViSession vi, ViByte buffer[], ViInt64 count, ViInt64 *returnCount);
ViStatus _VI_FUNC  ag6000_viRead (ViSession vi, ViInt64 bufferSize, ViByte buffer[], ViInt64 *returnCount);
/* Obsolete Direct IO Functions. */
ViStatus _VI_FUNC  ag6000_WriteInstrData (ViSession vi, ViConstString writeBuffer);
ViStatus _VI_FUNC  ag6000_ReadInstrData  (ViSession vi, ViInt32 numBytes,
                                            ViChar rdBuf[], ViInt32 *bytesRead);

    /*- Set, Get, and Check Attribute Functions ----------------------------*/
ViStatus _VI_FUNC  ag6000_GetAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 *value);
ViStatus _VI_FUNC  ag6000_GetAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 *value);
ViStatus _VI_FUNC  ag6000_GetAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 bufSize, ViChar value[]);
ViStatus _VI_FUNC  ag6000_GetAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession *value);
ViStatus _VI_FUNC  ag6000_GetAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean *value);

ViStatus _VI_FUNC  ag6000_SetAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value);
ViStatus _VI_FUNC  ag6000_SetAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value);
ViStatus _VI_FUNC  ag6000_SetAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value);
ViStatus _VI_FUNC  ag6000_SetAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value);
ViStatus _VI_FUNC  ag6000_SetAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value);

ViStatus _VI_FUNC  ag6000_CheckAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value);
ViStatus _VI_FUNC  ag6000_CheckAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value);
ViStatus _VI_FUNC  ag6000_CheckAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value);
ViStatus _VI_FUNC  ag6000_CheckAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value);
ViStatus _VI_FUNC  ag6000_CheckAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value);

    /*********************************************************
        Functions reserved for class driver use only.
        End-users should not call these functions.
     *********************************************************/
ViStatus _VI_FUNC  ag6000_IviInit (ViRsrc resourceName, ViBoolean IDQuery,
                                     ViBoolean reset, ViSession vi);
ViStatus _VI_FUNC  ag6000_IviClose (ViSession vi);

/****************************************************************************
 *------------------------ Error And Completion Codes ----------------------*
 ****************************************************************************/
#define AG6000_WARN_INVALID_WFM_ELEMENT              IVISCOPE_WARN_INVALID_WFM_ELEMENT

#define AG6000_ERROR_CHANNEL_NOT_ENABLED             IVISCOPE_ERROR_CHANNEL_NOT_ENABLED
#define AG6000_ERROR_MAX_TIME_EXCEEDED               IVISCOPE_ERROR_MAX_TIME_EXCEEDED

/****************************************************************************
 *---------------------------- End Include File ----------------------------*
 ****************************************************************************/
#if defined(__cplusplus) || defined(__cplusplus__)
}
#endif
#endif /* __AG6000_HEADER */
