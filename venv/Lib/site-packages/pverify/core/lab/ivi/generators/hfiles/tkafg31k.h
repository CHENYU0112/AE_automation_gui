/***********************************************************************************
 *  Copyright 2019, National Instruments, Corporation.  All Rights Reserved.
 **********************************************************************************/

/******************************************************************************
 *                       Tektronix AFG31000 Series Arbitrary Function Generator
 *
 * Title:    tkafg31k.h
 * Purpose:  Tektronix AFG31000 Series Arbitrary Function Generator
 *           instrument driver declarations.
 *
 *****************************************************************************/

#ifndef __tkafg31k_HEADER
#define __tkafg31k_HEADER

#include <ivi.h>
#include <ivifgen.h>

#if defined(__cplusplus) || defined(__cplusplus__)
extern "C" {
#endif

/****************************************************************************
 *----------------- Instrument Driver Revision Information -----------------*
 ****************************************************************************/
#define TKAFG31K_MAJOR_VERSION                  1   /* Instrument driver major version   */
#define TKAFG31K_MINOR_VERSION                  0   /* Instrument driver minor version   */

#define TKAFG31K_CLASS_SPEC_MAJOR_VERSION       5   /* Class specification major version */
#define TKAFG31K_CLASS_SPEC_MINOR_VERSION       2   /* Class specification minor version */

#define TKAFG31K_SUPPORTED_INSTRUMENT_MODELS    "AFG31021, AFG31022, AFG31051, AFG31052, AFG31101, AFG31102, AFG31151, AFG31152, AFG31251, AFG31252"

#define TKAFG31K_DRIVER_VENDOR                  "National Instruments"

#ifdef _IVI_mswin64_
#define TKAFG31K_DRIVER_DESCRIPTION             "Tektronix AFG31000 Series Arbitrary Funtion Generator [Compiled for 64-bit]"
#else
#define TKAFG31K_DRIVER_DESCRIPTION             "Tektronix AFG31000 Series Arbitrary Funtion Generator"
#endif

/****************************************************************************
 *---------------------------- Attribute Defines ---------------------------*
 ****************************************************************************/

/*- IVI Inherent Instrument Attributes ---------------------------------*/

/* User Options */
#define TKAFG31K_ATTR_RANGE_CHECK                                 IVI_ATTR_RANGE_CHECK                           /* ViBoolean */
#define TKAFG31K_ATTR_QUERY_INSTRUMENT_STATUS                     IVI_ATTR_QUERY_INSTRUMENT_STATUS               /* ViBoolean */
#define TKAFG31K_ATTR_CACHE                                       IVI_ATTR_CACHE                                 /* ViBoolean */
#define TKAFG31K_ATTR_SIMULATE                                    IVI_ATTR_SIMULATE                              /* ViBoolean */
#define TKAFG31K_ATTR_RECORD_COERCIONS                            IVI_ATTR_RECORD_COERCIONS                      /* ViBoolean */
#define TKAFG31K_ATTR_INTERCHANGE_CHECK                           IVI_ATTR_INTERCHANGE_CHECK                     /* ViBoolean */

/* Driver Information  */
#define TKAFG31K_ATTR_SPECIFIC_DRIVER_PREFIX                      IVI_ATTR_SPECIFIC_DRIVER_PREFIX                   /* ViString, read-only  */
#define TKAFG31K_ATTR_SUPPORTED_INSTRUMENT_MODELS                 IVI_ATTR_SUPPORTED_INSTRUMENT_MODELS              /* ViString, read-only  */
#define TKAFG31K_ATTR_GROUP_CAPABILITIES                          IVI_ATTR_GROUP_CAPABILITIES                       /* ViString, read-only  */
#define TKAFG31K_ATTR_INSTRUMENT_MANUFACTURER                     IVI_ATTR_INSTRUMENT_MANUFACTURER                  /* ViString, read-only  */
#define TKAFG31K_ATTR_INSTRUMENT_MODEL                            IVI_ATTR_INSTRUMENT_MODEL                         /* ViString, read-only  */
#define TKAFG31K_ATTR_INSTRUMENT_FIRMWARE_REVISION                IVI_ATTR_INSTRUMENT_FIRMWARE_REVISION             /* ViString, read-only  */
#define TKAFG31K_ATTR_SPECIFIC_DRIVER_REVISION                    IVI_ATTR_SPECIFIC_DRIVER_REVISION                 /* ViString, read-only  */
#define TKAFG31K_ATTR_SPECIFIC_DRIVER_VENDOR                      IVI_ATTR_SPECIFIC_DRIVER_VENDOR                   /* ViString, read-only  */
#define TKAFG31K_ATTR_SPECIFIC_DRIVER_DESCRIPTION                 IVI_ATTR_SPECIFIC_DRIVER_DESCRIPTION              /* ViString, read-only  */
#define TKAFG31K_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION    IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION /* ViInt32, read-only */
#define TKAFG31K_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION    IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION /* ViInt32, read-only */

/* Advanced Session Information */
#define TKAFG31K_ATTR_LOGICAL_NAME                                IVI_ATTR_LOGICAL_NAME                          /* ViString, read-only  */
#define TKAFG31K_ATTR_IO_RESOURCE_DESCRIPTOR                      IVI_ATTR_IO_RESOURCE_DESCRIPTOR                /* ViString, read-only  */
#define TKAFG31K_ATTR_DRIVER_SETUP                                IVI_ATTR_DRIVER_SETUP                          /* ViString, read-only  */

/*- Instrument-Specific Attributes -------------------------------------*/

/*- Basic Instrument Operation -----------------------------------------*/
#define TKAFG31K_ATTR_CHANNEL_COUNT       IVI_ATTR_CHANNEL_COUNT                                                 /* ViInt32,  read-only  */
#define TKAFG31K_ATTR_OUTPUT_MODE         IVIFGEN_ATTR_OUTPUT_MODE                                               /* ViInt32                        */
#define TKAFG31K_ATTR_REF_CLOCK_SOURCE    IVIFGEN_ATTR_REF_CLOCK_SOURCE                                          /* ViInt32                        */
#define TKAFG31K_ATTR_OUTPUT_ENABLED      IVIFGEN_ATTR_OUTPUT_ENABLED                                            /* ViBoolean, multi-channel       */
#define TKAFG31K_ATTR_OUTPUT_IMPEDANCE    IVIFGEN_ATTR_OUTPUT_IMPEDANCE                                          /* ViReal64,  multi-channel, ohms */
#define TKAFG31K_ATTR_OPERATION_MODE      IVIFGEN_ATTR_OPERATION_MODE                                            /* ViInt32,   multi-channel       */
#define TKAFG31K_ATTR_ACTIVE_MEMORY       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 45L)                                  /* ViInt32                        */
#define TKAFG31K_ATTR_ACTIVE_CHANNEL      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3014L)


/*- Standard Waveform Generation ---------------------------------------*/
#define TKAFG31K_ATTR_FUNC_WAVEFORM            IVIFGEN_ATTR_FUNC_WAVEFORM                                        /* ViInt32,  multi-channel           */
#define TKAFG31K_ATTR_FUNC_AMPLITUDE           IVIFGEN_ATTR_FUNC_AMPLITUDE                                       /* ViReal64, multi-channel, volts    */
#define TKAFG31K_ATTR_FUNC_DC_OFFSET           IVIFGEN_ATTR_FUNC_DC_OFFSET                                       /* ViReal64, multi-channel, volts    */
#define TKAFG31K_ATTR_FUNC_FREQUENCY           IVIFGEN_ATTR_FUNC_FREQUENCY                                       /* ViReal64, multi-channel, hertz    */
#define TKAFG31K_ATTR_FUNC_START_PHASE         IVIFGEN_ATTR_FUNC_START_PHASE                                     /* ViReal64, multi-channel, degrees  */
#define TKAFG31K_ATTR_FUNC_DUTY_CYCLE_HIGH     IVIFGEN_ATTR_FUNC_DUTY_CYCLE_HIGH                                 /* ViReal64, multi-channel, percent  */
#define TKAFG31K_ATTR_FUNC_RAMP_SYMMETRY       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3L)                              /* ViReal64, multi-channel, percent  */

#define TKAFG31K_ATTR_PULSE_DUTY_CYCLE         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 42L)
#define TKAFG31K_ATTR_PULSE_LEAD_DELAY         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 4L)                              /* ViReal64, multi-channel, s   */
#define TKAFG31K_ATTR_PULSE_PERIOD             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 5L)                              /* ViReal64, multi-channel, s   */
#define TKAFG31K_ATTR_PULSE_LEADING_TIME       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 6L)                              /* ViReal64, multi-channel, s   */
#define TKAFG31K_ATTR_PULSE_TRAILING_TIME      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 7L)                              /* ViReal64, multi-channel, s   */

/*- Arbitrary Waveform Generation --------------------------------------*/
#define TKAFG31K_ATTR_ARB_WAVEFORM_HANDLE      IVIFGEN_ATTR_ARB_WAVEFORM_HANDLE                                  /* ViInt32,  multi-channel         */
#define TKAFG31K_ATTR_ARB_GAIN                 IVIFGEN_ATTR_ARB_GAIN                                             /* ViReal64, multi-channel         */
#define TKAFG31K_ATTR_ARB_OFFSET               IVIFGEN_ATTR_ARB_OFFSET                                           /* ViReal64, multi-channel, volts  */
#define TKAFG31K_ATTR_ARB_SAMPLE_RATE          IVIFGEN_ATTR_ARB_SAMPLE_RATE                                      /* ViReal64, samples-per-second    */

#define TKAFG31K_ATTR_MAX_NUM_WAVEFORMS        IVIFGEN_ATTR_MAX_NUM_WAVEFORMS                                    /* ViInt32,  read-only             */
#define TKAFG31K_ATTR_WAVEFORM_QUANTUM         IVIFGEN_ATTR_WAVEFORM_QUANTUM                                     /* ViInt32,  read-only             */
#define TKAFG31K_ATTR_MIN_WAVEFORM_SIZE        IVIFGEN_ATTR_MIN_WAVEFORM_SIZE                                    /* ViInt32,  read-only             */
#define TKAFG31K_ATTR_MAX_WAVEFORM_SIZE        IVIFGEN_ATTR_MAX_WAVEFORM_SIZE                                    /* ViInt32,  read-only             */

#define TKAFG31K_ATTR_ARB_FREQUENCY            IVIFGEN_ATTR_ARB_FREQUENCY                                        /* ViReal64, multi-channel         */

/*- Trigger Configuration ----------------------------------------------*/
#define TKAFG31K_ATTR_TRIGGER_SOURCE           IVIFGEN_ATTR_TRIGGER_SOURCE                                       /* ViInt32, multi-channel */
#define TKAFG31K_ATTR_TRIGGER_MODE             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 8L)                              /* ViInt32, multi-channel */
#define TKAFG31K_ATTR_TRIGGER_SLOPE            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 9L)                              /* ViInt32, multi-channel */
#define TKAFG31K_ATTR_INTERNAL_TRIGGER_RATE    IVIFGEN_ATTR_INTERNAL_TRIGGER_RATE                                /* ViReal64               */

/*- Burst Configuration ------------------------------------------------*/
#define TKAFG31K_ATTR_BURST_COUNT              IVIFGEN_ATTR_BURST_COUNT                                          /* ViInt32, multi-channel */
#define TKAFG31K_ATTR_BURST_MODE               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 41L)
#define TKAFG31K_ATTR_BURST_DELAY              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 44L)
#define TKAFG31K_ATTR_BURST_IDLE               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1001L)          /* ViInt32      */
/*- Instrument-Specific Attributes -------------------------------------*/ /*- IviFgen Arbitrary Waveform Sequence Group Attributes ---------------*/

/*- Arbitrary Waveform Sequence Group Attributes ---------------*/
#define TKAFG31K_ATTR_SEQUENCE_MODE                       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2001L)                    /* ViInt32      */
#define TKAFG31K_ATTR_SEQUENCE_SAMPLE_RATE                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2002L)                    /* ViReal64     */
#define TKAFG31K_ATTR_SEQUENCE_DELAY                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2003L)                    /* ViReal64     */
#define TKAFG31K_ATTR_SEQUENCE_SCALE                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2004L)                    /* ViReal64     */
#define TKAFG31K_ATTR_SEQUENCE_OFFSET                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2005L)                    /* ViReal64     */
#define TKAFG31K_ATTR_SEQUENCE_LENGTH                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2006L)                    /* ViInt32      */
#define TKAFG31K_ATTR_SEQUENCE_TIMER                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2007L)                    /* ViReal64     */
#define TKAFG31K_ATTR_SEQUENCE_MARKER                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2008L)                    /* ViBoolean        */
#define TKAFG31K_ATTR_SEQUENCE_GOTO_ENABLED               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2009L)                    /* ViBoolean        */
#define TKAFG31K_ATTR_SEQUENCE_GOTO_INDEX                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2010L)                    /* ViInt32      */
#define TKAFG31K_ATTR_SEQUENCE_JTARGET_TYPE               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2011L)                    /* ViInt32      */
#define TKAFG31K_ATTR_SEQUENCE_JTARGET_INDEX              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2012L)                    /* ViInt32      */
#define TKAFG31K_ATTR_SEQUENCE_JUMP_EVENT                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2013L)                    /* ViInt32      */
#define TKAFG31K_ATTR_SEQUENCE_JUMP_SLOPE                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2014L)                    /* ViInt32      */
#define TKAFG31K_ATTR_SEQUENCE_WAIT_ENABLED               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2015L)                    /* ViBoolean        */
#define TKAFG31K_ATTR_SEQUENCE_WAIT_EVENT                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2016L)                    /* ViInt32      */
#define TKAFG31K_ATTR_SEQUENCE_WAIT_SLOPE                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2017L)                    /* ViInt32      */
#define TKAFG31K_ATTR_SEQUENCE_WAVEFORM                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2018L)                    /* ViString     */
#define TKAFG31K_ATTR_SEQUENCE_LOOP_COUNT                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2019L)                    /* ViInt32      */
#define TKAFG31K_ATTR_SEQUENCE_LOOP_INFINITE_ENABLED      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2020L)                    /* ViBoolean        */
#define TKAFG31K_ATTR_SEQUENCE_ELEMENT                    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2021L)
#define TKAFG31K_ATTR_ARB_SEQUENCE_HANDLE                 IVIFGEN_ATTR_ARB_SEQUENCE_HANDLE
#define TKAFG31K_ATTR_MAX_NUM_SEQUENCES                   IVIFGEN_ATTR_MAX_NUM_SEQUENCES

/*- Waveform List Group Attributes ---------------*/
#define TKAFG31K_ATTR_WLIST_NAME                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3001L)                     /* ViString     */
#define TKAFG31K_ATTR_WLIST_SIZE                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3002L)                     /* ViInt32      */
#define TKAFG31K_ATTR_WLIST_DELETE                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3003L)                     /* ViString     */
#define TKAFG31K_ATTR_WLIST_IMPORT                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3004L)                     /* ViString     */
#define TKAFG31K_ATTR_WLIST_LENGTH                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3005L)
#define TKAFG31K_ATTR_WLIST_INDEX                         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3006L)

/*- Sweep Configuration ------------------------------------------------*/
#define TKAFG31K_ATTR_SWEEP_TYPE                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 11L)                  /* ViInt32,   multi-channel         */
#define TKAFG31K_ATTR_SWEEP_MODE                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 43L)                  /* ViInt32,   multi-channel         */
#define TKAFG31K_ATTR_SWEEP_TIME                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 12L)                  /* ViReal64,  multi-channel, s      */
#define TKAFG31K_ATTR_SWEEP_START_FREQUENCY               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 13L)                  /* ViReal64,  multi-channel, hertz  */
#define TKAFG31K_ATTR_SWEEP_STOP_FREQUENCY                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 14L)                  /* ViReal64,  multi-channel, hertz  */
#define TKAFG31K_ATTR_SWEEP_HOLD_TIME                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 15L)                  /* ViReal64,  multi-channel, s      */
#define TKAFG31K_ATTR_SWEEP_RETURN_TIME                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 16L)                  /* ViReal64,  multi-channel, s      */

/*- Waveform Appendant -------------------------------------------------*/
#define TKAFG31K_ATTR_APPEND_NOISE_ENABLED                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 17L)                  /* ViBoolean, multi-channel          */
#define TKAFG31K_ATTR_APPEND_NOISE_LEVEL                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 18L)                  /* ViReal64, multi-channel, percent  */
#define TKAFG31K_ATTR_APPEND_EXTERNAL_ENABLED             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 19L)                  /* ViBoolean, multi-channel          */

/*- Ampitude Modulation Generation -------------------------------------*/
#define TKAFG31K_ATTR_AM_ENABLED                          IVIFGEN_ATTR_AM_ENABLED                                /* ViBoolean, multi-channel             */
#define TKAFG31K_ATTR_AM_SOURCE                           IVIFGEN_ATTR_AM_SOURCE                                 /* ViInt32,   multi-channel             */
#define TKAFG31K_ATTR_AM_INTERNAL_DEPTH                   IVIFGEN_ATTR_AM_INTERNAL_DEPTH                         /* ViReal64,  percent                   */
#define TKAFG31K_ATTR_AM_INTERNAL_WAVEFORM                IVIFGEN_ATTR_AM_INTERNAL_WAVEFORM                      /* ViInt32                              */
#define TKAFG31K_ATTR_AM_INTERNAL_FREQUENCY               IVIFGEN_ATTR_AM_INTERNAL_FREQUENCY                     /* ViReal64,  hertz                     */

/*- Frequency Modulation Generation ------------------------------------*/
#define TKAFG31K_ATTR_FM_ENABLED                          IVIFGEN_ATTR_FM_ENABLED                                /* ViBoolean, multi-channel             */
#define TKAFG31K_ATTR_FM_SOURCE                           IVIFGEN_ATTR_FM_SOURCE                                 /* ViInt32,   multi-channel             */
#define TKAFG31K_ATTR_FM_INTERNAL_DEVIATION               IVIFGEN_ATTR_FM_INTERNAL_DEVIATION                     /* ViReal64,  hertz                     */
#define TKAFG31K_ATTR_FM_INTERNAL_WAVEFORM                IVIFGEN_ATTR_FM_INTERNAL_WAVEFORM                      /* ViInt32                              */
#define TKAFG31K_ATTR_FM_INTERNAL_FREQUENCY               IVIFGEN_ATTR_FM_INTERNAL_FREQUENCY                     /* ViReal64,  hertz                     */

/*- FSK Modulation Generation ------------------------------------------*/
#define TKAFG31K_ATTR_FSK_ENABLED                         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 26L)                  /* ViBoolean, multi-channel             */
#define TKAFG31K_ATTR_FSK_HOP_FREQUENCY                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 27L)                  /* ViReal64,  multi-channel, hertz      */
#define TKAFG31K_ATTR_FSK_INTERNAL_RATE                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 28L)                  /* ViReal64, multi-channel, hertz       */
#define TKAFG31K_ATTR_FSK_SOURCE                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 29L)                  /* ViInt32,  multi-channel              */

/*- Phase Modulation Generation ----------------------------------------*/
#define TKAFG31K_ATTR_PM_ENABLED                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 30L)                  /* ViBoolean, multi-channel             */
#define TKAFG31K_ATTR_PM_SOURCE                           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 31L)                  /* ViInt32,   multi-channel             */
#define TKAFG31K_ATTR_PM_DEVIATION_BY_CHANNEL             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 32L)                  /* ViReal64, multi-channel, deg         */
#define TKAFG31K_ATTR_PM_INTERNAL_FREQUENCY_BY_CHANNEL    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 33L)                  /* ViReal64, multi-channel, hertz       */
#define TKAFG31K_ATTR_PM_INTERNAL_WAVEFORM_BY_CHANNEL     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 34L)                  /* ViInt32,  multi-channel              */

/*- Pulse Width Modulation Generation ----------------------------------*/
#define TKAFG31K_ATTR_PWM_ENABLED                         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 35L)                  /* ViBoolean, multi-channel             */
#define TKAFG31K_ATTR_PWM_SOURCE                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 36L)                  /* ViInt32,   multi-channel             */
#define TKAFG31K_ATTR_PWM_DEVIATION                       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 37L)                  /* ViReal64, multi-channel, percent     */
#define TKAFG31K_ATTR_PWM_INTERNAL_FREQUENCY              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 38L)                  /* ViReal64, multi-channel, hertz       */
#define TKAFG31K_ATTR_PWM_INTERNAL_WAVEFORM               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 39L)                  /* ViInt32,  multi-channel              */

/*- Miscellaneous Attributes -------------------------------------------*/
#define TKAFG31K_ATTR_ID_QUERY_RESPONSE                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1L)                   /* ViString(Read Only) */
#define TKAFG31K_ATTR_AM_EFIL                             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3007L)
#define TKAFG31K_ATTR_FM_EFIL                             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3008L)
#define TKAFG31K_ATTR_PM_EFIL                             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3009L)
#define TKAFG31K_ATTR_PWM_EFIL                            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3010L)
#define TKAFG31K_ATTR_ARB_EFIL                            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3011L)
#define TKAFG31K_ATTR_FREQUENCY_MODE                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3015L)
#define TKAFG31K_ATTR_START_TRIGGER_DELAY                 IVIFGEN_ATTR_START_TRIGGER_DELAY
#define TKAFG31K_ATTR_START_TRIGGER_SLOPE                 IVIFGEN_ATTR_START_TRIGGER_SLOPE
#define TKAFG31K_ATTR_START_TRIGGER_SOURCE                IVIFGEN_ATTR_START_TRIGGER_SOURCE
#define TKAFG31K_ATTR_START_TRIGGER_THRESHOLD             IVIFGEN_ATTR_START_TRIGGER_THRESHOLD
#define TKAFG31K_ATTR_MAX_LOOP_COUNT                      IVIFGEN_ATTR_MAX_LOOP_COUNT
#define TKAFG31K_ATTR_MAX_SEQUENCE_LENGTH                 IVIFGEN_ATTR_MAX_SEQUENCE_LENGTH
#define TKAFG31K_ATTR_MIN_SEQUENCE_LENGTH                 IVIFGEN_ATTR_MIN_SEQUENCE_LENGTH



/****************************************************************************
 *------------------------ Attribute Value Defines -------------------------*
 ****************************************************************************/
/*- Defined Value for Instrument models -------------------------------*/
#define TKAFG31K_VAL_MODEL_AFG31021           0
#define TKAFG31K_VAL_MODEL_AFG31022           1
#define TKAFG31K_VAL_MODEL_AFG31051           2
#define TKAFG31K_VAL_MODEL_AFG31052           3
#define TKAFG31K_VAL_MODEL_AFG31101           4
#define TKAFG31K_VAL_MODEL_AFG31102           5
#define TKAFG31K_VAL_MODEL_AFG31151           6
#define TKAFG31K_VAL_MODEL_AFG31152           7
#define TKAFG31K_VAL_MODEL_AFG31251           8
#define TKAFG31K_VAL_MODEL_AFG31252           9

/*- Defined values for attribute TKAFG31K_ATTR_OPERATION_MODE --------------*/
#define TKAFG31K_VAL_OPERATE_CONTINUOUS       IVIFGEN_VAL_OPERATE_CONTINUOUS
#define TKAFG31K_VAL_OPERATE_MODULATION       (IVIFGEN_VAL_OP_MODE_SPECIFIC_EXT_BASE + 1)
#define TKAFG31K_VAL_OPERATE_SWEEP            (IVIFGEN_VAL_OP_MODE_SPECIFIC_EXT_BASE + 2)
#define TKAFG31K_VAL_OPERATE_BURST            IVIFGEN_VAL_OPERATE_BURST

/*- Defined values for attribute TKAFG31K_ATTR_ACTIVE_MEMORY --------------*/
#define TKAFG31K_VAL_OUTPUT_EMEM              (0L)
#define TKAFG31K_VAL_OUTPUT_EMEM1             (1L)
#define TKAFG31K_VAL_OUTPUT_EMEM2             (2L)

/*- Defined values for attribute TKAFG31K_ATTR_OUTPUT_MODE --------------*/
#define TKAFG31K_VAL_OUTPUT_FUNC              IVIFGEN_VAL_OUTPUT_FUNC
#define TKAFG31K_VAL_OUTPUT_ARB               IVIFGEN_VAL_OUTPUT_ARB
#define TKAFG31K_VAL_OUTPUT_SEQ               IVIFGEN_VAL_OUTPUT_SEQ

/*- Defined values for attribute TKAFG31K_ATTR_OUTPUT_IMPEDANCE ------*/
#define TKAFG31K_VAL_IMPEDANCE_INFINITY       0

/*- Defined values for attribute TKAFG31K_ATTR_REF_CLOCK_SOURCE ------*/
#define TKAFG31K_VAL_REF_CLOCK_INTERNAL       IVIFGEN_VAL_REF_CLOCK_INTERNAL
#define TKAFG31K_VAL_REF_CLOCK_EXTERNAL       IVIFGEN_VAL_REF_CLOCK_EXTERNAL

/*- Defined values for attribute TKAFG31K_ATTR_FUNC_WAVEFORM ---------*/
#define TKAFG31K_VAL_WFM_SINE                 IVIFGEN_VAL_WFM_SINE
#define TKAFG31K_VAL_WFM_SQUARE               IVIFGEN_VAL_WFM_SQUARE
#define TKAFG31K_VAL_WFM_DC                   IVIFGEN_VAL_WFM_DC
/*- Extended standard waveform -*/
#define TKAFG31K_VAL_WFM_RAMP                 (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 1)
#define TKAFG31K_VAL_WFM_PULS                 (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 2)
#define TKAFG31K_VAL_WFM_PRN                  (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 3)
#define TKAFG31K_VAL_WFM_SINC                 (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 4)
#define TKAFG31K_VAL_WFM_GAUS                 (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 5)
#define TKAFG31K_VAL_WFM_LOR                  (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 6)
#define TKAFG31K_VAL_WFM_ERIS                 (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 7)
#define TKAFG31K_VAL_WFM_EDEC                 (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 8)
#define TKAFG31K_VAL_WFM_HAV                  (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 9)

#define TKAFG31K_VAL_FIRST_WAVEFORM_HANDLE    (10000L)
/*- Extended arbitrary waveform -*/
#define TKAFG31K_VAL_WFM_EMEM                 (TKAFG31K_VAL_FIRST_WAVEFORM_HANDLE)
#define TKAFG31K_VAL_WFM_EMEM2                (TKAFG31K_VAL_FIRST_WAVEFORM_HANDLE + 1)
#define TKAFG31K_VAL_WFM_EFIL                 (10002L)


/*- Defined values for attribute TKAFG31K_ATTR_SEQUENCE_JTARGET_TYPE -*/
#define TKAFG31K_VAL_JTARGET_INDEX              (1L)
#define TKAFG31K_VAL_JTARGET_NEXT               (2L)
#define TKAFG31K_VAL_JTARGET_OFF                (3L)

/*- Defined values for attribute TKAFG31K_ATTR_SEQUENCE_JUMP_EVENT -*/
#define TKAFG31K_VAL_JUMP_EXTERNAL              (1L)
#define TKAFG31K_VAL_JUMP_BUS                   (2L)
#define TKAFG31K_VAL_JUMP_MANUAL                (3L)
#define TKAFG31K_VAL_JUMP_TIMER                 (4L)

/*- Defined values for attribute TKAFG31K_ATTR_SEQUENCE_JUMP_SLOPE -*/
#define TKAFG31K_VAL_JUMP_SLOP_POSITIVE         (1L)
#define TKAFG31K_VAL_JUMP_SLOP_NEGATIVE         (2L)

/*- Defined values for attribute TKAFG31K_ATTR_SEQUENCE_MODE -*/
#define TKAFG31K_VAL_SEQUENCE_CONTINUOUS        (1L)
#define TKAFG31K_VAL_SEQUENCE_TRIGGERED         (2L)
#define TKAFG31K_VAL_SEQUENCE_GATED             (3L)
#define TKAFG31K_VAL_SEQUENCE_SEQUENCE          (4L)

/*- Defined values for attribute TKAFG31K_ATTR_SEQUENCE_WAIT_EVENT -*/
#define TKAFG31K_VAL_WAIT_EXTERNAL              (1L)
#define TKAFG31K_VAL_WAIT_BUS                   (2L)
#define TKAFG31K_VAL_WAIT_MANUAL                (3L)
#define TKAFG31K_VAL_WAIT_TIMER                 (4L)

/*- Defined values for attribute TKAFG31K_ATTR_SEQUENCE_WAIT_SLOPE -*/
#define TKAFG31K_VAL_WAIT_SLOP_POSITIVE         (1L)
#define TKAFG31K_VAL_WAIT_SLOP_NEGATIVE         (2L)

/*- Defined values for attribute TKAFG31K_ATTR_BURST_IDLE -*/
#define TKAFG31K_VAL_BURST_START                (1L)
#define TKAFG31K_VAL_BURST_DC                   (2L)
#define TKAFG31K_VAL_BURST_END                  (3L)

/*- Defined values for Arbitrary Waveform Handles ---------------------------------*/
#define TKAFG31K_VAL_ALL_WAVEFORMS              IVIFGEN_VAL_ALL_WAVEFORMS

/*- Defined values for attribute TKAFG31K_ATTR_TRIGGER_SOURCE ----------------------*/
#define TKAFG31K_VAL_EXTERNAL                   IVIFGEN_VAL_EXTERNAL
#define TKAFG31K_VAL_INTERNAL_TRIGGER           IVIFGEN_VAL_INTERNAL_TRIGGER

/*- Defined values for attribute TKAFG31K_ATTR_TRIGGER_MODE ------------------------*/
#define TKAFG31K_VAL_TRIGGER_TRIGGER            1
#define TKAFG31K_VAL_TRIGGER_SYNC               2

/*- Defined values for attribute TKAFG31K_ATTR_TRIGGER_SLOPE -----------------------*/
#define TKAFG31K_VAL_TRIGGER_POSITIVE           IVIFGEN_VAL_TRIGGER_POSITIVE
#define TKAFG31K_VAL_TRIGGER_NEGATIVE           IVIFGEN_VAL_TRIGGER_NEGATIVE

/*- Defined values for attribute TKAWG5K7K_ATTR_START_TRIGGER_SOURCE    -*/
#define TKAFG31K_VAL_TRIGGER_SOURCE_EXTERNAL    IVIFGEN_VAL_TRIGGER_SOURCE_EXTERNAL
#define TKAFG31K_VAL_TRIGGER_SOURCE_INTERNAL    IVIFGEN_VAL_TRIGGER_SOURCE_INTERNAL

/*- Deifined value for attribute TKAFG31K_ATTR_BURST_COUNT -------------------------*/
#define TKAFG31K_VAL_BURST_INFINITY             -1

/*- Defined value for attribute TKAFG31K_ATTR_BURST_MODE ---------------------------*/
#define TKAFG31K_VAL_BURST_TRIGGER              1
#define TKAFG31K_VAL_BURST_GATE                 2

/*- Defined value for attribute TKAFG31K_ATTR_SWEEP_TYPE ---------------------------*/
#define TKAFG31K_VAL_SWEEP_LINEAR               1
#define TKAFG31K_VAL_SWEEP_LOGARITHMIC          2

/*- Defined value for attribute TKAFG31K_ATTR_SWEEP_MODE ---------------------------*/
#define TKAFG31K_VAL_SWEEP_AUTO                 1
#define TKAFG31K_VAL_SWEEP_MANUAL               2

/*- Defined values for attribute TKAFG31K_ATTR_AM_SOURCE -*/
#define TKAFG31K_VAL_AM_INTERNAL                IVIFGEN_VAL_AM_INTERNAL
#define TKAFG31K_VAL_AM_EXTERNAL                IVIFGEN_VAL_AM_EXTERNAL

/*- Defined values for attribute TKAFG31K_ATTR_AM_INTERNAL_WAVEFORM -*/
#define TKAFG31K_VAL_AM_INTERNAL_SINE           IVIFGEN_VAL_AM_INTERNAL_SINE
#define TKAFG31K_VAL_AM_INTERNAL_SQUARE         IVIFGEN_VAL_AM_INTERNAL_SQUARE
#define TKAFG31K_VAL_AM_INTERNAL_TRIANGLE       IVIFGEN_VAL_AM_INTERNAL_TRIANGLE
#define TKAFG31K_VAL_AM_INTERNAL_RAMP_UP        IVIFGEN_VAL_AM_INTERNAL_RAMP_UP
#define TKAFG31K_VAL_AM_INTERNAL_RAMP_DOWN      IVIFGEN_VAL_AM_INTERNAL_RAMP_DOWN
#define TKAFG31K_VAL_AM_INTERNAL_PRN            (IVIFGEN_VAL_AM_INTERNAL_WFM_SPECIFIC_EXT_BASE + 1)
#define TKAFG31K_VAL_AM_INTERNAL_EMEM           (IVIFGEN_VAL_AM_INTERNAL_WFM_SPECIFIC_EXT_BASE + 2)
#define TKAFG31K_VAL_AM_INTERNAL_EMEM2          (IVIFGEN_VAL_AM_INTERNAL_WFM_SPECIFIC_EXT_BASE + 3)
#define TKAFG31K_VAL_AM_INTERNAL_EFIL           (IVIFGEN_VAL_AM_INTERNAL_WFM_SPECIFIC_EXT_BASE + 4)

/*- Defined values for attribute TKAFG31K_ATTR_FSK_SOURCE -*/
#define TKAFG31K_VAL_FSK_INTERNAL               (0L)
#define TKAFG31K_VAL_FSK_EXTERNAL               (1L)

/*- Defined values for attribute TKAFG31K_ATTR_FM_SOURCE -*/
#define TKAFG31K_VAL_FM_INTERNAL                IVIFGEN_VAL_FM_INTERNAL
#define TKAFG31K_VAL_FM_EXTERNAL                IVIFGEN_VAL_FM_EXTERNAL

/*- Defined values for attribute TKAFG31K_ATTR_FM_INTERNAL_WAVEFORM -*/
#define TKAFG31K_VAL_FM_INTERNAL_SINE           IVIFGEN_VAL_FM_INTERNAL_SINE
#define TKAFG31K_VAL_FM_INTERNAL_SQUARE         IVIFGEN_VAL_FM_INTERNAL_SQUARE
#define TKAFG31K_VAL_FM_INTERNAL_TRIANGLE       IVIFGEN_VAL_FM_INTERNAL_TRIANGLE
#define TKAFG31K_VAL_FM_INTERNAL_RAMP_UP        IVIFGEN_VAL_FM_INTERNAL_RAMP_UP
#define TKAFG31K_VAL_FM_INTERNAL_RAMP_DOWN      IVIFGEN_VAL_FM_INTERNAL_RAMP_DOWN
#define TKAFG31K_VAL_FM_INTERNAL_PRN            (IVIFGEN_VAL_FM_INTERNAL_WFM_SPECIFIC_EXT_BASE + 1)
#define TKAFG31K_VAL_FM_INTERNAL_EMEM           (IVIFGEN_VAL_FM_INTERNAL_WFM_SPECIFIC_EXT_BASE + 2)
#define TKAFG31K_VAL_FM_INTERNAL_EMEM2          (IVIFGEN_VAL_FM_INTERNAL_WFM_SPECIFIC_EXT_BASE + 3)
#define TKAFG31K_VAL_FM_INTERNAL_EFIL           (IVIFGEN_VAL_FM_INTERNAL_WFM_SPECIFIC_EXT_BASE + 4)

/*- Defined values for attribute TKAFG31K_ATTR_PM_SOURCE -*/
#define TKAFG31K_VAL_PM_INTERNAL                (0L)
#define TKAFG31K_VAL_PM_EXTERNAL                (1L)

/*- Defined values for attribute TKAFG31K_ATTR_PM_INTERNAL_WAVEFORM_BY_CHANNEL -*/
#define TKAFG31K_VAL_PM_INTERNAL_SINE           (1L)
#define TKAFG31K_VAL_PM_INTERNAL_SQUARE         (2L)
#define TKAFG31K_VAL_PM_INTERNAL_TRIANGLE       (3L)
#define TKAFG31K_VAL_PM_INTERNAL_RAMP_UP        (4L)
#define TKAFG31K_VAL_PM_INTERNAL_RAMP_DOWN      (5L)
#define TKAFG31K_VAL_PM_INTERNAL_PRN            (100L)
#define TKAFG31K_VAL_PM_INTERNAL_EMEM           (200L)
#define TKAFG31K_VAL_PM_INTERNAL_EMEM2          (201L)
#define TKAFG31K_VAL_PM_INTERNAL_EFIL           (202L)


/*- Defined values for attribute TKAFG31K_ATTR_PWM_SOURCE -*/
#define TKAFG31K_VAL_PWM_INTERNAL              (0L)
#define TKAFG31K_VAL_PWM_EXTERNAL              (1L)

/*- Defined values for attribute TKAFG31K_ATTR_PWM_INTERNAL_WAVEFORM -*/
#define TKAFG31K_VAL_PWM_INTERNAL_SINE         (1L)
#define TKAFG31K_VAL_PWM_INTERNAL_SQUARE       (2L)
#define TKAFG31K_VAL_PWM_INTERNAL_TRIANGLE     (3L)
#define TKAFG31K_VAL_PWM_INTERNAL_RAMP_UP      (4L)
#define TKAFG31K_VAL_PWM_INTERNAL_RAMP_DOWN    (5L)
#define TKAFG31K_VAL_PWM_INTERNAL_PRN          (100L)
#define TKAFG31K_VAL_PWM_INTERNAL_EMEM         (200L)
#define TKAFG31K_VAL_PWM_INTERNAL_EMEM2        (201L)
#define TKAFG31K_VAL_PWM_INTERNAL_EFIL         (202L)


#define TKAFG31K_VAL_MODULATION_AM             0
#define TKAFG31K_VAL_MODULATION_FM             1
#define TKAFG31K_VAL_MODULATION_PM             2
#define TKAFG31K_VAL_MODULATION_FSK            3
#define TKAFG31K_VAL_MODULATION_PWM            4

/*- Defined values for function tkafg31k_SaveLoadInstrumentSettings -*/
#define TKAFG31K_VAL_OPERATION_SAVE            0
#define TKAFG31K_VAL_OPERATION_LOAD            1

/*- Defined values for function tkafg31k_SaveLoadWaveformData -*/
#define TKAFG31K_VAL_WAVE_OPERATION_STORE      0
#define TKAFG31K_VAL_WAVE_OPERATION_LOAD       1

/*- Defined values for function tkafg31k_SaveLoadSequence -*/
#define TKAFG31K_VAL_SEQ_OPERATION_SAVE        0
#define TKAFG31K_VAL_SEQ_OPERATION_LOAD        1

/*- Defined values for attribute TKAFG31K_ATTR_ARB_SEQUENCE_HANDLE ---*/
#define TKAFG31K_VAL_MAX_SEQUENCES             (1L)
#define TKAFG31K_VAL_FIRST_SEQUENCE_HANDLE     (20000L)


/****************************************************************************
 *------------------------ Error And Completion Codes ----------------------*
 ****************************************************************************/
#define TKAFG31K_ERROR_NO_WFMS_AVAILABLE               IVIFGEN_ERROR_NO_WFMS_AVAILABLE

#define TKAFG31K_ERROR_INVALID_SPECIFIC_MODEL          (IVI_SPECIFIC_ERROR_BASE + 0x11)      /* 0xBFFA4011 */
#define TKAFG31K_ERROR_UNSUPPORTED_CHANNEL             (IVI_SPECIFIC_ERROR_BASE + 0x12)      /* 0xBFFA4012 */
#define TKAFG31K_ERROR_ABORT_GENERATION_UNSUPPORTED    (IVI_SPECIFIC_ERROR_BASE + 0x21)      /* 0xBFFA4021 */
#define TKAFG31K_ERROR_DISABLE_UNSUPPORTED             (IVI_SPECIFIC_ERROR_BASE + 0x22)      /* 0xBFFA4022 */
#define TKAFG31K_ERROR_CHANNELS_DIFFERENT              (IVI_SPECIFIC_ERROR_BASE + 0x31)      /* 0xBFFA4031 */
#define TKAFG31K_ERROR_COMBINATION_UNSUPPORTED         (IVI_SPECIFIC_ERROR_BASE + 0x32)      /* 0xBFFA4032 */
#define TKAFG31K_ERROR_INVALID_GROUP_VALUE             (IVI_SPECIFIC_ERROR_BASE + 0x33)      /* 0xBFFA4033 */
#define TKAFG31K_ERROR_INIT_FAIL                       (IVI_SPECIFIC_ERROR_BASE + 0x34)      /* 0xBFFA4034 */
#define TKAFG31K_ERROR_UNKNOWN_ARB_WFM                 (IVI_SPECIFIC_ERROR_BASE + 0x300)     /* 0xBFFA4300 */


/****************************************************************************
 *---------------- Instrument Driver Function Declarations -----------------*
 ****************************************************************************/

/*- Init and Close Functions -------------------------------------------*/
ViStatus _VI_FUNC  tkafg31k_init (ViRsrc resourceName, ViBoolean IDQuery,
                                  ViBoolean resetDevice, ViSession *vi);
ViStatus _VI_FUNC  tkafg31k_InitWithOptions (ViRsrc resourceName,
                                             ViBoolean IDQuery,
                                             ViBoolean resetDevice,
                                             ViConstString optionString,
                                             ViSession *newVi);
ViStatus _VI_FUNC  tkafg31k_close (ViSession vi);

/*- Coercion Info Functions --------------------------------------------*/
ViStatus _VI_FUNC  tkafg31k_GetNextCoercionRecord (ViSession vi,
                                                   ViInt32 bufferSize,
                                                   ViChar record[]);

/*- Locking Functions --------------------------------------------------*/
ViStatus _VI_FUNC  tkafg31k_LockSession (ViSession vi,
                                         ViBoolean *callerHasLock);
ViStatus _VI_FUNC  tkafg31k_UnlockSession (ViSession vi,
                                           ViBoolean *callerHasLock);

/*- Channel Info Functions ---------------------------------------------*/
ViStatus _VI_FUNC tkafg31k_GetChannelName (ViSession vi, ViInt32 index,
                                           ViInt32 bufferSize, ViChar name[]);

/*- Basic Instrument Operation -----------------------------------------*/
ViStatus _VI_FUNC tkafg31k_ConfigureActiveMemory (ViSession vi,
                                                  ViInt32 activeMemory);

ViStatus _VI_FUNC tkafg31k_ConfigureOperationMode (ViSession vi,
                                                   ViConstString channelName,
                                                   ViInt32 outputMode);

ViStatus _VI_FUNC tkafg31k_ConfigureOutputMode (ViSession vi,
                                                ViInt32 outputMode);

ViStatus _VI_FUNC tkafg31k_ConfigureRefClockSource (ViSession vi,
                                                    ViInt32 refClockSource);

ViStatus _VI_FUNC tkafg31k_ConfigureOutputImpedance (ViSession vi,
                                                     ViConstString channelName,
                                                     ViReal64 outputImpedance);

ViStatus _VI_FUNC tkafg31k_ConfigureOutputEnabled (ViSession vi,
                                                   ViConstString channelName,
                                                   ViBoolean enabled);

ViStatus _VI_FUNC tkafg31k_InitiateGeneration (ViSession vi);

ViStatus _VI_FUNC tkafg31k_AbortGeneration (ViSession vi);

ViStatus _VI_FUNC tkafg31k_ConfigureActiveChannel (ViSession vi,
                                                   ViConstString channelName);

/*- Standard Function Output --------------------------------------------*/
ViStatus _VI_FUNC tkafg31k_ConfigureStandardWaveform (ViSession vi,
                                                      ViConstString channelName,
                                                      ViInt32 waveform,
                                                      ViReal64 amplitude,
                                                      ViReal64 dcOffset,
                                                      ViReal64 frequency,
                                                      ViReal64 startPhase);

ViStatus _VI_FUNC tkafg31k_ConfigureRampSymmetry (ViSession vi,
                                                  ViConstString channelName,
                                                  ViReal64 rampSymmetry);

ViStatus _VI_FUNC tkafg31k_ConfigurePulseWaveform (ViSession vi,
                                                   ViConstString channelName,
                                                   ViReal64 dutyCycle,
                                                   ViReal64 leadingEdgeTime,
                                                   ViReal64 trailingEdgeTime);

ViStatus _VI_FUNC tkafg31k_ConfigurePulseDelay (ViSession vi,
                                                ViConstString channelName,
                                                ViReal64 delay);

ViStatus _VI_FUNC tkafg31k_ClearArbWaveform (ViSession vi,
                                             ViInt32 waveformHandle);

/*- Arbitrary Waveform Output -------------------------------------------*/
ViStatus _VI_FUNC  tkafg31k_ConfigureSampleRate (ViSession vi,
                                                 ViReal64 sampleRate);

ViStatus _VI_FUNC  tkafg31k_QueryArbWfmCapabilities (ViSession vi,
                                                     ViInt32 *maxNumWfms,
                                                     ViInt32 *wfmQuantum,
                                                     ViInt32 *minWfmSize,
                                                     ViInt32 *maxWfmSize);

ViStatus _VI_FUNC tkafg31k_ConfigureArbWaveform (ViSession vi,
                                                 ViConstString channelName,
                                                 ViInt32 wfmHandle, ViReal64 arbGain,
                                                 ViReal64 arbOffset);

ViStatus _VI_FUNC tkafg31k_CreateArbWaveform (ViSession vi, ViInt32 wfmSize,
                                              ViReal64 wfmData[],
                                              ViInt32 *wfmHandle);

ViStatus _VI_FUNC tkafg31k_ConfigureArbWaveformExtended (ViSession vi,
                                                         ViConstString channelName,
                                                         ViInt32 wfmHandle,
                                                         ViReal64 arbGain,
                                                         ViReal64 arbOffset,
                                                         ViConstString editFile);

/*- Arbitrary Frequency -------------------------------------------------*/
ViStatus _VI_FUNC tkafg31k_ConfigureArbFrequency (ViSession vi,
                                                  ViConstString channelName,
                                                  ViReal64 frequency);
/*- Arbitrary Sequence -------------------------------------------------*/
ViStatus _VI_FUNC tkafg31k_QueryArbSeqCapabilities (ViSession vi,
                                                    ViInt32 *maxNumSeqs,
                                                    ViInt32 *minSeqLength,
                                                    ViInt32 *maxSeqLength,
                                                    ViInt32 *maxLoopCount);

ViStatus _VI_FUNC tkafg31k_CreateArbSequence (ViSession vi, ViInt32 length,
                                              ViInt32 waveformHandle[],
                                              ViInt32 loopCount[]);

ViStatus _VI_FUNC tkafg31k_CreateSequence (ViSession vi);

ViStatus _VI_FUNC tkafg31k_ConfigureArbSequence (ViSession vi,
                                                 ViConstString channelName,
                                                 ViInt32 seqHandle,
                                                 ViReal64 arbGain,
                                                 ViReal64 offset);

ViStatus _VI_FUNC tkafg31k_ConfigureSequenceScale (ViSession vi,
                                                   ViConstString channelName,
                                                   ViReal64 scale);

ViStatus _VI_FUNC tkafg31k_ClearArbMemory (ViSession vi);

ViStatus _VI_FUNC tkafg31k_ClearArbSequence (ViSession vi,
                                             ViInt32 sequenceHandle);

ViStatus _VI_FUNC tkafg31k_ConfigureAddress (ViSession vi,
                                             ViInt32 element,
                                             ViInt32 jumpIndex,
                                             ViInt32 GOTOIndex,
                                             ViBoolean enableInfiniteLoop,
                                             ViBoolean enableGOTO,
                                             ViInt32 loopCount);

ViStatus _VI_FUNC tkafg31k_ConfigureSequenceSamplingRate (ViSession vi,
                                                          ViReal64 samplingRate);

ViStatus _VI_FUNC tkafg31k_ConfigureSequenceJumpTrigger (ViSession vi,
                                                         ViInt32 element,
                                                         ViInt32 jumpTriggerType,
                                                         ViInt32 jumpTargetType,
                                                         ViInt32 jumpTriggerSlopeType,
                                                         ViReal64 timer);

ViStatus _VI_FUNC tkafg31k_ConfigureSequenceWaveform (ViSession vi,
                                                      ViConstString channelName,
                                                      ViInt32 element,
                                                      ViConstString waveformPath,
                                                      ViInt32 sequenceRunMode);

ViStatus _VI_FUNC tkafg31k_ConfigureSequenceWaitTrigger (ViSession vi,
                                                         ViInt32 element,
                                                         ViInt32 waitTriggerType,
                                                         ViBoolean enableWaitTrigger,
                                                         ViInt32 waitTriggerSlopeType,
                                                         ViReal64 timer);

ViStatus _VI_FUNC tkafg31k_ConfigureWaveformDelay (ViSession vi,
                                                   ViReal64 delay);

ViStatus _VI_FUNC tkafg31k_DeleteWaveform (ViSession vi,
                                           ViConstString waveformPath);

ViStatus _VI_FUNC tkafg31k_ConfigureMarkerEnabled (ViSession vi,
                                                   ViInt32 element,
                                                   ViBoolean markerEnabled);

ViStatus _VI_FUNC tkafg31k_StartSequenceOutput (ViSession vi);

ViStatus _VI_FUNC tkafg31k_StopSequenceOutput (ViSession vi);

ViStatus _VI_FUNC tkafg31k_ConfigureSequenceLength (ViSession vi,
                                                    ViInt32 sequenceLength);


/*- Triggering ----------------------------------------------------------*/
ViStatus _VI_FUNC  tkafg31k_ConfigureTriggerSource (ViSession vi,
                                                    ViConstString channelName,
                                                    ViInt32 trigSource);

ViStatus _VI_FUNC tkafg31k_ForceTrigger (ViSession vi);

ViStatus _VI_FUNC tkafg31k_ConfigureTriggerOutputMode (ViSession vi,
                                                       ViInt32 outputMode);

ViStatus _VI_FUNC tkafg31k_ConfigureStartTrigger (ViSession vi,
                                                  ViConstString channelName,
                                                  ViConstString triggerSource,
                                                  ViInt32 triggerSlope);

/*- Internal Triggering -------------------------------------------------*/
ViStatus _VI_FUNC tkafg31k_ConfigureInternalTriggerRate (ViSession vi,
                                                         ViReal64 rate);

/*- External Triggering -------------------------------------------------*/
ViStatus _VI_FUNC tkafg31k_ConfigureExternalTriggerSlope (ViSession vi,
                                                          ViInt32 triggerSlope);

/*- Burst Configuration -------------------------------------------------*/
ViStatus _VI_FUNC tkafg31k_ConfigureBurstEnabled (ViSession vi,
                                                  ViConstString channelName,
                                                  ViBoolean enabled);

ViStatus _VI_FUNC tkafg31k_ConfigureBurstCount (ViSession vi,
                                                ViConstString channelName,
                                                ViInt32 burstCount);

ViStatus _VI_FUNC tkafg31k_ConfigureBurstMode (ViSession vi,
                                               ViConstString channelName,
                                               ViInt32 burstMode);

ViStatus _VI_FUNC tkafg31k_ConfigureBurstDelay (ViSession vi,
                                                ViConstString channelName,
                                                ViReal64 burstDelay);

ViStatus _VI_FUNC tkafg31k_ConfigureBurstIdle (ViSession vi,
                                               ViConstString channelName,
                                               ViInt32 burstIdle);

ViStatus _VI_FUNC tkafg31k_RearmBurst (ViSession vi,
                                       ViConstString channelName);

/*- Sweep Configuration -------------------------------------------------*/
ViStatus _VI_FUNC tkafg31k_ConfigureSweepEnabled (ViSession vi,
                                                  ViConstString channelName,
                                                  ViBoolean enabled);

ViStatus _VI_FUNC tkafg31k_ConfigureSweep (ViSession vi,
                                           ViConstString channelName,
                                           ViReal64 startFrequency,
                                           ViReal64 stopFrequency,
                                           ViReal64 time,
                                           ViInt32 type);

ViStatus _VI_FUNC tkafg31k_ConfigureSweepEx (ViSession vi,
                                             ViConstString channelName,
                                             ViReal64 startFrequency,
                                             ViReal64 stopFrequency,
                                             ViReal64 time,
                                             ViReal64 holdTime,
                                             ViReal64 returnTime,
                                             ViInt32 type);

ViStatus _VI_FUNC tkafg31k_ConfigureSweepMode (ViSession vi,
                                               ViConstString channelName,
                                               ViInt32 sweepMode);

/*- Waveform Appendant --------------------------------------------------*/
ViStatus _VI_FUNC tkafg31k_ConfigureNoiseAppendantEnabled (ViSession vi,
                                                           ViConstString channelName,
                                                           ViBoolean enabled);

ViStatus _VI_FUNC tkafg31k_ConfigureNoiseLevel (ViSession vi,
                                                ViConstString channelName,
                                                ViReal64 level);

ViStatus _VI_FUNC tkafg31k_ConfigureExternalAppendEnabled (ViSession vi,
                                                           ViConstString channelName,
                                                           ViBoolean enabled);

/*- Amplitude Modulation ------------------------------------------------*/

ViStatus _VI_FUNC  tkafg31k_ConfigureAMEnabled (ViSession vi,
                                                ViConstString channelName,
                                                ViBoolean enabled);

ViStatus _VI_FUNC  tkafg31k_ConfigureAMSource (ViSession vi,
                                               ViConstString channelName,
                                               ViInt32 source);

ViStatus _VI_FUNC tkafg31k_ConfigureAMInternal (ViSession vi,
                                                ViReal64 modulationDepth,
                                                ViInt32 modulationWaveform,
                                                ViReal64 modulationFrequency);

ViStatus _VI_FUNC tkafg31k_ConfigureAMInternalByChannel (ViSession vi,
                                                         ViConstString channelName,
                                                         ViReal64 amDepth,
                                                         ViInt32 amWaveform,
                                                         ViReal64 amFrequency,
                                                         ViConstString editFile);

ViStatus _VI_FUNC tkafg31k_ConfigureAMExternalByChannel (ViSession vi,
                                                         ViConstString channelName,
                                                         ViReal64 amDepth);

/*- Frequency Modulation ------------------------------------------------*/

ViStatus _VI_FUNC  tkafg31k_ConfigureFMEnabled (ViSession vi,
                                                ViConstString channelName,
                                                ViBoolean enabled);

ViStatus _VI_FUNC  tkafg31k_ConfigureFMSource (ViSession vi,
                                               ViConstString channelName,
                                               ViInt32 source);

ViStatus _VI_FUNC tkafg31k_ConfigureFMInternal (ViSession vi,
                                                ViReal64 peakDeviation_Hz,
                                                ViInt32 modulationWaveform,
                                                ViReal64 modulationFrequency_Hz);


ViStatus _VI_FUNC  tkafg31k_ConfigureFMInternalByChannel (ViSession vi,
                                                          ViConstString channelName,
                                                          ViReal64 fmDeviance,
                                                          ViInt32 fmWaveform,
                                                          ViReal64 fmFrequency,
                                                          ViConstString editFile);

ViStatus _VI_FUNC tkafg31k_ConfigureFMExternalByChannel (ViSession vi,
                                                         ViConstString channelName,
                                                         ViReal64 fmDeviance);

/*- Phase Modulation ----------------------------------------------------*/
ViStatus _VI_FUNC tkafg31k_ConfigurePMEnabled (ViSession vi,
                                               ViConstString channelName,
                                               ViBoolean enabled);

ViStatus _VI_FUNC tkafg31k_ConfigurePMSource (ViSession vi,
                                              ViConstString channelName,
                                              ViInt32 source);

ViStatus _VI_FUNC tkafg31k_ConfigurePMInternalByChannel (ViSession vi,
                                                         ViConstString channelName,
                                                         ViReal64 pmDeviation,
                                                         ViInt32 pmWaveform,
                                                         ViReal64 pmFrequency,
                                                         ViConstString editFile);

ViStatus _VI_FUNC tkafg31k_ConfigurePMExternalByChannel (ViSession vi,
                                                         ViConstString channelName,
                                                         ViReal64 pmDeviation);

/*- FSK Modulation -----------------------------------------------------*/
ViStatus _VI_FUNC tkafg31k_ConfigureFSKEnabled (ViSession vi,
                                                ViConstString channelName,
                                                ViBoolean enabled);

ViStatus _VI_FUNC tkafg31k_ConfigureFSKSource (ViSession vi,
                                               ViConstString channelName,
                                               ViInt32 source);

ViStatus _VI_FUNC tkafg31k_ConfigureFSKInternalByChannel (ViSession vi,
                                                          ViConstString channelName,
                                                          ViReal64 hopFrequency,
                                                          ViReal64 rate);

ViStatus _VI_FUNC tkafg31k_ConfigureFSKExternalByChannel (ViSession vi,
                                                          ViConstString channelName,
                                                          ViReal64 hopFrequency);

/*- PWM Modulation -----------------------------------------------------*/
ViStatus _VI_FUNC tkafg31k_ConfigurePWMEnabled (ViSession vi,
                                                ViConstString channelName,
                                                ViBoolean enabled);

ViStatus _VI_FUNC tkafg31k_ConfigurePWMSource (ViSession vi,
                                               ViConstString channelName,
                                               ViInt32 source);

ViStatus _VI_FUNC tkafg31k_ConfigurePWMInternalByChannel (ViSession vi,
                                                          ViConstString channelName,
                                                          ViReal64 pwmDeviation,
                                                          ViInt32 pwmWaveform,
                                                          ViReal64 pwmFrequency,
                                                          ViConstString editFile);

ViStatus _VI_FUNC tkafg31k_ConfigurePWMExternalByChannel (ViSession vi,
                                                          ViConstString channelName,
                                                          ViReal64 pwmDeviation);

/*- Error Functions ----------------------------------------------------*/
ViStatus _VI_FUNC  tkafg31k_error_query (ViSession vi, ViInt32 *errorCode,
                                         ViChar errorMessage[]);

ViStatus _VI_FUNC  tkafg31k_GetError (ViSession vi, ViStatus *code,
                                      ViInt32 bufferSize,
                                      ViChar description[]);

ViStatus _VI_FUNC  tkafg31k_ClearError (ViSession vi);

ViStatus _VI_FUNC tkafg31k_error_message (ViSession vi, ViStatus errorCode,
                                          ViChar errorMessage[256]);

/*- Interchangeability Checking Functions ------------------------------*/
ViStatus _VI_FUNC tkafg31k_GetNextInterchangeWarning (ViSession vi,
                                                      ViInt32 bufferSize,
                                                      ViChar warnString[]);

ViStatus _VI_FUNC tkafg31k_ResetInterchangeCheck (ViSession vi);

ViStatus _VI_FUNC tkafg31k_ClearInterchangeWarnings (ViSession vi);

/*- Utility Functions --------------------------------------------------*/
ViStatus _VI_FUNC   tkafg31k_InvalidateAllAttributes (ViSession vi);

ViStatus _VI_FUNC tkafg31k_QuerySequenceParameter (ViSession vi,
                                                   ViConstString channelName,
                                                   ViReal64 *samplingRate,
                                                   ViReal64 *scale,
                                                   ViInt32 *sequenceLength,
                                                   ViReal64 *offset);

ViStatus _VI_FUNC tkafg31k_ListWaveforms (ViSession vi,
                                          ViInt32 index,
                                          ViInt32 *waveformAmount,
                                          ViChar waveformPath[],
                                          ViInt32 *waveformLength);

ViStatus _VI_FUNC tkafg31k_SaveLoadSequence (ViSession vi,
                                             ViInt32 operation,
                                             ViConstString filePath);


ViStatus _VI_FUNC   tkafg31k_reset (ViSession vi);
ViStatus _VI_FUNC   tkafg31k_ResetWithDefaults (ViSession vi);
ViStatus _VI_FUNC   tkafg31k_self_test (ViSession vi, ViInt16 *selfTestResult,
                                        ViChar selfTestMessage[]);
ViStatus _VI_FUNC   tkafg31k_revision_query (ViSession vi,
                                             ViChar instrumentDriverRevision[],
                                             ViChar firmwareRevision[]);
ViStatus _VI_FUNC   tkafg31k_Disable (ViSession vi);

ViStatus _VI_FUNC   tkafg31k_SaveLoadInstrumentSettings (ViSession vi,
                                                         ViInt32 operationSelect,
                                                         ViConstString fileName);
ViStatus _VI_FUNC   tkafg31k_SaveLoadWaveformData (ViSession vi,
                                                   ViInt32 operationSelect,
                                                   ViConstString fileName,
                                                   ViInt32 editMemory);

ViStatus _VI_FUNC   tkafg31k_viWrite (ViSession vi,
                                      ViByte buffer[],
                                      ViInt64 count,
                                      ViInt64 *returnCount);
ViStatus _VI_FUNC   tkafg31k_viRead (ViSession vi,
                                     ViInt64 bufferSize,
                                     ViByte buffer[],
                                     ViInt64 *returnCount);

/* Obsolete Direct IO Functions. */
ViStatus _VI_FUNC   tkafg31k_WriteInstrData (ViSession vi,
                                             ViConstString writeBuffer);
ViStatus _VI_FUNC   tkafg31k_ReadInstrData (ViSession vi, ViInt32 numBytes,
                                            ViChar rdBuf[],
                                            ViInt32 *bytesRead);


/*- Set, Get, and Check Attribute Functions ----------------------------*/
ViStatus _VI_FUNC  tkafg31k_GetAttributeViInt32 (ViSession vi,
                                                 ViConstString channelName,
                                                 ViAttr attribute,
                                                 ViInt32 *value);
ViStatus _VI_FUNC  tkafg31k_GetAttributeViReal64 (ViSession vi,
                                                  ViConstString channelName,
                                                  ViAttr attribute,
                                                  ViReal64 *value);
ViStatus _VI_FUNC  tkafg31k_GetAttributeViString (ViSession vi,
                                                  ViConstString channelName,
                                                  ViAttr attribute,
                                                  ViInt32 bufSize,
                                                  ViChar value[]);
ViStatus _VI_FUNC  tkafg31k_GetAttributeViSession (ViSession vi,
                                                   ViConstString channelName,
                                                   ViAttr attribute,
                                                   ViSession *value);
ViStatus _VI_FUNC  tkafg31k_GetAttributeViBoolean (ViSession vi,
                                                   ViConstString channelName,
                                                   ViAttr attribute,
                                                   ViBoolean *value);

ViStatus _VI_FUNC  tkafg31k_SetAttributeViInt32 (ViSession vi,
                                                 ViConstString channelName,
                                                 ViAttr attribute,
                                                 ViInt32 value);
ViStatus _VI_FUNC  tkafg31k_SetAttributeViReal64 (ViSession vi,
                                                  ViConstString channelName,
                                                  ViAttr attribute,
                                                  ViReal64 value);
ViStatus _VI_FUNC  tkafg31k_SetAttributeViString (ViSession vi,
                                                  ViConstString channelName,
                                                  ViAttr attribute,
                                                  ViConstString value);
ViStatus _VI_FUNC  tkafg31k_SetAttributeViSession (ViSession vi,
                                                   ViConstString channelName,
                                                   ViAttr attribute,
                                                   ViSession value);
ViStatus _VI_FUNC  tkafg31k_SetAttributeViBoolean (ViSession vi,
                                                   ViConstString channelName,
                                                   ViAttr attribute,
                                                   ViBoolean value);

ViStatus _VI_FUNC  tkafg31k_CheckAttributeViInt32 (ViSession vi,
                                                   ViConstString channelName,
                                                   ViAttr attribute,
                                                   ViInt32 value);
ViStatus _VI_FUNC  tkafg31k_CheckAttributeViReal64 (ViSession vi,
                                                    ViConstString channelName,
                                                    ViAttr attribute,
                                                    ViReal64 value);
ViStatus _VI_FUNC  tkafg31k_CheckAttributeViString (ViSession vi,
                                                    ViConstString channelName,
                                                    ViAttr attribute,
                                                    ViConstString value);
ViStatus _VI_FUNC  tkafg31k_CheckAttributeViSession (ViSession vi,
                                                     ViConstString channelName,
                                                     ViAttr attribute,
                                                     ViSession value);
ViStatus _VI_FUNC  tkafg31k_CheckAttributeViBoolean (ViSession vi,
                                                     ViConstString channelName,
                                                     ViAttr attribute,
                                                     ViBoolean value);

/****************************************************************************
 *---------------------------- End Include File ----------------------------*
 ****************************************************************************/
#if defined(__cplusplus) || defined(__cplusplus__)
}
#endif
#endif /* __tkafg31k_HEADER */
