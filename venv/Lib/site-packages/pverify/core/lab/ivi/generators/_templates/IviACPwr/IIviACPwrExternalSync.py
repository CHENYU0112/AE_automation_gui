from __future__ import annotations


class IIviACPwrExternalSync:
    def __init__(self):
        pass

    @property
    def Enabled(self):
        raise NotImplementedError

    @Enabled.setter
    def Enabled(self, value):
        """
        Specifies whether to enable or disable synchronization to an external
        synchronization signal.
        """
        raise NotImplementedError

    @property
    def PhaseOffset(self):
        raise NotImplementedError

    @PhaseOffset.setter
    def PhaseOffset(self, value):
        """
        Specifies the phase angle offset of the power sources output relative to the
        external synchronization signal.
        """
        raise NotImplementedError

    @property
    def Locked(self):
        raise NotImplementedError

    @Locked.setter
    def Locked(self, value):
        """
        Indicates if the power source is locked to the external synchronization signal.
        """
        raise NotImplementedError

    def Configure(self, Enabled, PhaseOffset):
        """
        Configures the external synchronization Enabled and Phase Offset properties.

        :param Enabled: Sets the external synchronization Enabled property.
        :type Enabled: bool
        :param PhaseOffset: Sets the external synchronization PhaseOffset property.
        :type PhaseOffset: float
        """
        raise NotImplementedError
