/****************************************************************************
 *                       chr63600
 *
 * Title:    chr63600.h
 * Purpose:  chr63600
 *           instrument driver declarations.
 *
 ****************************************************************************/

#ifndef __CHR63600_HEADER
#define __CHR63600_HEADER

#include <ivi.h>

#if defined(__cplusplus) || defined(__cplusplus__)
extern "C" {
#endif

/****************************************************************************
 *----------------- Instrument Driver Revision Information -----------------*
 ****************************************************************************/
#define CHR63600_MAJOR_VERSION                1     /* Instrument driver major version   */
#define CHR63600_MINOR_VERSION                0     /* Instrument driver minor version   */

#define CHR63600_CLASS_SPEC_MAJOR_VERSION     2     /* Class specification major version */
#define CHR63600_CLASS_SPEC_MINOR_VERSION     0     /* Class specification minor version */

#define CHR63600_SUPPORTED_INSTRUMENT_MODELS  "63600-1,63600-2,63600-5,63610-80-20,63630-80-60,63640-80-80"
#define CHR63600_DRIVER_VENDOR                "Chroma ATE INC."
#define CHR63600_DRIVER_DESCRIPTION           "DC Electronic Load 63600 Series Instrument Driver"

/****************************************************************************
 *------------------------------ Useful Macros -----------------------------*
 ****************************************************************************/

/****************************************************************************
 *---------------------------- Attribute Defines ---------------------------*
 ****************************************************************************/

    /*- IVI Inherent Instrument Attributes ---------------------------------*/

        /* User Options */
#define CHR63600_ATTR_RANGE_CHECK                   IVI_ATTR_RANGE_CHECK                    /* ViBoolean */
#define CHR63600_ATTR_QUERY_INSTR_STATUS            IVI_ATTR_QUERY_INSTR_STATUS             /* ViBoolean */
#define CHR63600_ATTR_CACHE                         IVI_ATTR_CACHE                          /* ViBoolean */
#define CHR63600_ATTR_SIMULATE                      IVI_ATTR_SIMULATE                       /* ViBoolean */
#define CHR63600_ATTR_RECORD_COERCIONS              IVI_ATTR_RECORD_COERCIONS               /* ViBoolean */

        /* Instrument Capabilities */
#define CHR63600_ATTR_NUM_CHANNELS                  IVI_ATTR_NUM_CHANNELS                   /* ViInt32,  read-only  */

        /* Driver Information  */
#define CHR63600_ATTR_SPECIFIC_DRIVER_PREFIX        IVI_ATTR_SPECIFIC_DRIVER_PREFIX         /* ViString, read-only  */
#define CHR63600_ATTR_SUPPORTED_INSTRUMENT_MODELS   IVI_ATTR_SUPPORTED_INSTRUMENT_MODELS    /* ViString, read-only  */
#define CHR63600_ATTR_GROUP_CAPABILITIES            IVI_ATTR_GROUP_CAPABILITIES             /* ViString, read-only  */
#define CHR63600_ATTR_INSTRUMENT_MANUFACTURER       IVI_ATTR_INSTRUMENT_MANUFACTURER        /* ViString, read-only  */
#define CHR63600_ATTR_INSTRUMENT_MODEL              IVI_ATTR_INSTRUMENT_MODEL               /* ViString, read-only  */
#define CHR63600_ATTR_INSTRUMENT_FIRMWARE_REVISION  IVI_ATTR_INSTRUMENT_FIRMWARE_REVISION              /* ViString, read-only  */
#define CHR63600_ATTR_SPECIFIC_DRIVER_MAJOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_MAJOR_VERSION  /* ViInt32,  read-only  */
#define CHR63600_ATTR_SPECIFIC_DRIVER_MINOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_MINOR_VERSION  /* ViInt32,  read-only  */
#define CHR63600_ATTR_SPECIFIC_DRIVER_REVISION      IVI_ATTR_SPECIFIC_DRIVER_REVISION       /* ViString, read-only  */
#define CHR63600_ATTR_SPECIFIC_DRIVER_VENDOR        IVI_ATTR_SPECIFIC_DRIVER_VENDOR         /* ViString, read-only  */
#define CHR63600_ATTR_SPECIFIC_DRIVER_DESCRIPTION   IVI_ATTR_SPECIFIC_DRIVER_DESCRIPTION    /* ViString, read-only  */
#define CHR63600_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION /* ViInt32, read-only */
#define CHR63600_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION /* ViInt32, read-only */

        /* Error Info */
#define CHR63600_ATTR_PRIMARY_ERROR                 IVI_ATTR_PRIMARY_ERROR                  /* ViInt32   */
#define CHR63600_ATTR_SECONDARY_ERROR               IVI_ATTR_SECONDARY_ERROR                /* ViInt32   */
#define CHR63600_ATTR_ERROR_ELABORATION             IVI_ATTR_ERROR_ELABORATION              /* ViString  */

        /* Advanced Session Information */
#define CHR63600_ATTR_LOGICAL_NAME                  IVI_ATTR_LOGICAL_NAME                   /* ViString, read-only  */
#define CHR63600_ATTR_RESOURCE_DESCRIPTOR           IVI_ATTR_RESOURCE_DESCRIPTOR            /* ViString, read-only  */
#define CHR63600_ATTR_IO_SESSION_TYPE               IVI_ATTR_IO_SESSION_TYPE                /* ViString, read-only  */
#define CHR63600_ATTR_IO_SESSION                    IVI_ATTR_IO_SESSION                     /* ViSession, read-only */


    /*- Instrument-Specific Attributes -------------------------------------*/

#define CHR63600_ATTR_ID_QUERY_RESPONSE 	(IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1L)     /* ViString (Read Only) */
#define CHR63600_ATTR_STATUS_ESE            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 2L)
#define CHR63600_ATTR_STATUS_RDT            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 3L)
#define CHR63600_ATTR_MODE                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 5L)
#define CHR63600_ATTR_CHANNEL               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 6L)
#define CHR63600_ATTR_L1                    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 7L)
#define CHR63600_ATTR_RISE                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 8L)
#define CHR63600_ATTR_FALL                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 9L)
#define CHR63600_ATTR_VOLT_RESPONSE         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 10L)
#define CHR63600_ATTR_VOLT_TYPE             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 11L)
#define CHR63600_ATTR_VOLT_CURR_LIMIT       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 12L)
#define CHR63600_ATTR_IMPEDANCE_CL  		(IVI_SPECIFIC_PUBLIC_ATTR_BASE + 13L)
#define CHR63600_ATTR_IMPEDANCE_LS          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 14L)
#define CHR63600_ATTR_IMPEDANCE_RS          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 15L)
#define CHR63600_ATTR_IMPEDANCE_RL          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 16L)
#define CHR63600_ATTR_L2                    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 17L)
#define CHR63600_ATTR_CURR_DYN_T1           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 18L)
#define CHR63600_ATTR_CURR_DYN_T2           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 19L)
#define CHR63600_ATTR_CURR_DYN_REPEAT       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 20L)
#define CHR63600_ATTR_CURR_SWP_IMAX         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 21L)
#define CHR63600_ATTR_CURR_SWP_IMIN         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 22L)
#define CHR63600_ATTR_CURR_SWP_FSTART       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 23L)
#define CHR63600_ATTR_CURR_SWP_FEND         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 24L)
#define CHR63600_ATTR_CURR_SWP_FSTEP        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 25L)
#define CHR63600_ATTR_CURR_SWP_DWELL        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 26L)
#define CHR63600_ATTR_CURR_SWP_DUTY         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 27L)
#define CHR63600_ATTR_CONF_VOLT_RANGE 		(IVI_SPECIFIC_PUBLIC_ATTR_BASE + 28L)
#define CHR63600_ATTR_CONF_VOLT_ON          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 29L)
#define CHR63600_ATTR_CONF_VOLT_OFF         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 30L)
#define CHR63600_ATTR_TIME_MODE             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 31L)
#define CHR63600_ATTR_TIME_VALUE            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 32L)
#define CHR63600_ATTR_TIME_TRG_MODE         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 33L)
#define CHR63600_ATTR_TIME_TRG_VSTART       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 34L)
#define CHR63600_ATTR_TIME_TRG_VEND         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 35L)
#define CHR63600_ATTR_TIME_ENDVOLT          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 36L)
#define CHR63600_ATTR_TIME_TOUT             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 37L)
#define CHR63600_ATTR_OCP_ISTART            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 38L)
#define CHR63600_ATTR_OCP_IEND              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 39L)
#define CHR63600_ATTR_OCP_STEP              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 40L)
#define CHR63600_ATTR_OCP_DWELL             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 41L)
#define CHR63600_ATTR_OCP_TRG_VOLT          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 42L)
#define CHR63600_ATTR_OCP_SPEC_L            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 43L)
#define CHR63600_ATTR_OCP_SPEC_H            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 44L)
#define CHR63600_ATTR_IR_IMAX               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 45L)
#define CHR63600_ATTR_IR_TON                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 46L)
#define CHR63600_ATTR_IR_TOFF               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 47L)
#define CHR63600_ATTR_IR_REPEAT             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 48L)
#define CHR63600_ATTR_IR_SMP_TIME           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 49L)
#define CHR63600_ATTR_IR_SMP_POINT          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 50L)
#define CHR63600_ATTR_IR_TRG_POINT          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 51L)
#define CHR63600_ATTR_DIGI_SMP_TIME         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 52L)
#define CHR63600_ATTR_DIGI_SMP_POINT        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 53L)
#define CHR63600_ATTR_DIGI_TRG_POINT        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 54L)
#define CHR63600_ATTR_DIGI_TRG_SOURCE       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 55L)
#define CHR63600_ATTR_SPEC_V_C              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 56L)
#define CHR63600_ATTR_SPEC_UNIT             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 57L)
#define CHR63600_ATTR_SPEC_V_H              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 58L)
#define CHR63600_ATTR_SPEC_V_L              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 59L)
#define CHR63600_ATTR_SPEC_I_C              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 60L)
#define CHR63600_ATTR_SPEC_I_H              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 61L)
#define CHR63600_ATTR_SPEC_I_L              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 62L)
#define CHR63600_ATTR_SPEC_P_C              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 63L)
#define CHR63600_ATTR_SPEC_P_H              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 64L)
#define CHR63600_ATTR_SPEC_P_L              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 65L)
#define CHR63600_ATTR_MEAS_INPUT            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 66L)
#define CHR63600_ATTR_STATUS_CHANNEL_ENABLE (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 67L)
#define CHR63600_ATTR_STATUS_CHANNEL_PTRansition (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 68L)
#define CHR63600_ATTR_STATUS_CHANNEL_NTRansition (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 69L)
#define CHR63600_ATTR_STATUS_CSUMMARY_ENABLE (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 70L)
#define CHR63600_ATTR_STATUS_QUESTIONABLE_ENABLE (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 71L)
#define CHR63600_ATTR_STATUS_QUESTIONABLE_PTRansition (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 72L)
#define CHR63600_ATTR_STATUS_QUESTIONABLE_NTRansition (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 73L)
#define CHR63600_ATTR_SHORT_KEY             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 74L)
#define CHR63600_ATTR_STATUS_SRE            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 75L)
#define CHR63600_ATTR_CHANNEL_ID            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 76L)
#define CHR63600_ATTR_CHANNEL_ACTIVE        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 77L)
#define CHR63600_ATTR_CONF_ALLRUN           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 78L)
#define CHR63600_ATTR_CONF_AUTO_ON          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 79L)
#define CHR63600_ATTR_CONF_EXT_WAVE         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 80L)
#define CHR63600_ATTR_CONF_SOUND            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 81L)
#define CHR63600_ATTR_CONF_VON_LATCH        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 82L)
#define CHR63600_ATTR_CONF_VOLT_SIGN        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 83L)
#define CHR63600_ATTR_CONF_WINDOW           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 84L)
#define CHR63600_ATTR_CONF_PARALLEL_TYPE    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 85L)
#define CHR63600_ATTR_CONF_PARALLEL_INIT    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 86L)

/****************************************************************************
 *------------------------ Attribute Value Defines -------------------------*
 ****************************************************************************/

        /* Instrument specific attribute value definitions */

/****************************************************************************
 *---------------- Instrument Driver Function Declarations -----------------*
 ****************************************************************************/

    /*- Init and Close Functions -------------------------------------------*/
ViStatus _VI_FUNC  chr63600_init (ViRsrc resourceName, ViBoolean IDQuery,
                                  ViBoolean resetDevice, ViSession *vi);
ViStatus _VI_FUNC  chr63600_InitWithOptions (ViRsrc resourceName, ViBoolean IDQuery,
                                             ViBoolean resetDevice, ViString optionString,
                                             ViSession *newVi);
ViStatus _VI_FUNC  chr63600_close (ViSession vi);

    /*- Coercion Info Functions --------------------------------------------*/
ViStatus _VI_FUNC  chr63600_GetNextCoercionRecord (ViSession vi,
                                                   ViInt32 bufferSize,
                                                   ViChar record[]);

    /*- Locking Functions --------------------------------------------------*/
ViStatus _VI_FUNC  chr63600_LockSession (ViSession vi, ViBoolean *callerHasLock);
ViStatus _VI_FUNC  chr63600_UnlockSession (ViSession vi, ViBoolean *callerHasLock);

    /*- Error Functions ----------------------------------------------------*/
ViStatus _VI_FUNC  chr63600_error_query (ViSession vi, ViInt32 *errorCode,
                                         ViChar errorMessage[]);

ViStatus _VI_FUNC  chr63600_GetError (ViSession vi, ViStatus *code, ViInt32 bufferSize, ViChar description[]);

ViStatus _VI_FUNC  chr63600_GetErrorInfo (ViSession vi, ViStatus *primaryError,
                                          ViStatus *secondaryError,
                                          ViChar errorElaboration[256]);
ViStatus _VI_FUNC  chr63600_ClearErrorInfo (ViSession vi);
ViStatus _VI_FUNC  chr63600_error_message (ViSession vi, ViStatus errorCode,
                                           ViChar errorMessage[256]);

ViStatus _VI_FUNC chr63600_FetchVIPAll (ViSession vi,
                                        ViInt32 v_I_PSelect, ViChar reading[]);

ViStatus _VI_FUNC chr63600_FetchTming (ViSession vi,
                                       ViInt32 AHWHTIME, ViReal64 *reading);

ViStatus _VI_FUNC chr63600_FetchStatus (ViSession vi,
                                        ViInt32 *status);

ViStatus _VI_FUNC chr63600_FetchReacRes (ViSession vi,
                                         ViInt32 reactanceResistance,
                                         ViReal64 *reading);

ViStatus _VI_FUNC chr63600_FetchFreqPara (ViSession vi,
                                          ViInt32 freqParameters,
                                          ViReal64 *reading);

ViStatus _VI_FUNC chr63600_FetchCurrPara (ViSession vi,
                                          ViInt32 currentParameters,
                                          ViReal64 *reading);

ViStatus _VI_FUNC chr63600_FetchVoltPara (ViSession vi,
                                          ViInt32 voltageParameters,
                                          ViReal64 *reading);

ViStatus _VI_FUNC chr63600_FetchPower (ViSession vi,
                                       ViReal64 *reading);


ViStatus _VI_FUNC chr63600_MeasInput (ViSession vi,
                                      ViBoolean input);

ViStatus _VI_FUNC chr63600_MeasVIP (ViSession vi,
                                    ViInt32 v_I_PSelect, ViReal64 *reading);

ViStatus _VI_FUNC chr63600_MeasVIPAll (ViSession vi,
                                       ViInt32 v_I_PSelect, ViChar reading[]);

    /*- Utility Functions --------------------------------------------------*/
ViStatus _VI_FUNC  chr63600_reset (ViSession vi);
ViStatus _VI_FUNC  chr63600_self_test (ViSession vi, ViInt16 *selfTestResult,
                                       ViChar selfTestMessage[]);
ViStatus _VI_FUNC  chr63600_revision_query (ViSession vi,
                                            ViChar instrumentDriverRevision[],
                                            ViChar firmwareRevision[]);
ViStatus _VI_FUNC  chr63600_WriteInstrData (ViSession vi, ViConstString writeBuffer);
ViStatus _VI_FUNC  chr63600_ReadInstrData  (ViSession vi, ViInt32 numBytes,
                                            ViChar rdBuf[], ViInt32 *bytesRead);

    /*- Set, Get, and Check Attribute Functions ----------------------------*/
ViStatus _VI_FUNC  chr63600_GetAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 *value);
ViStatus _VI_FUNC  chr63600_GetAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 *value);
ViStatus _VI_FUNC  chr63600_GetAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 bufSize, ViChar value[]);
ViStatus _VI_FUNC  chr63600_GetAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession *value);
ViStatus _VI_FUNC  chr63600_GetAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean *value);

ViStatus _VI_FUNC chr63600_SetChannel (ViSession vi,
                                       ViInt32 channel);

ViStatus _VI_FUNC chr63600_SetCC (ViSession vi,
                                  ViReal64 currentLevel, ViReal64 risingSlewRate,
                                  ViReal64 fallingSlewRate);

ViStatus _VI_FUNC chr63600_SetCR (ViSession vi,
                                  ViReal64 resistanceLevel);

ViStatus _VI_FUNC chr63600_SetCV (ViSession vi,
                                  ViReal64 voltageLevel, ViReal64 iLimit,
                                  ViInt32 response, ViBoolean CVType);

ViStatus _VI_FUNC chr63600_SetCP (ViSession vi,
                                  ViReal64 powerLevel, ViReal64 risingSlewRate,
                                  ViReal64 fallingSlewRate);

ViStatus _VI_FUNC chr63600_SetCZ (ViSession vi, ViReal64 CL,
                                  ViReal64 RL, ViReal64 ls, ViReal64 rs);

ViStatus _VI_FUNC chr63600_SetCCD (ViSession vi,
                                   ViReal64 currentLevel1,
                                   ViReal64 currentLevel2, ViReal64 t1,
                                   ViReal64 t2, ViReal64 risingSlewRate,
                                   ViReal64 fallingSlewRate, ViInt32 repeatTimes);

ViStatus _VI_FUNC chr63600_SetCCFS (ViSession vi, ViReal64 i_MAX,
                                    ViReal64 i_MIN, ViReal64 f_START,
                                    ViReal64 f_END, ViReal64 f_STEP,
                                    ViReal64 DWELL, ViReal64 dutyCycle,
                                    ViReal64 risingSlewRate,
                                    ViReal64 fallingSlewRate);

ViStatus _VI_FUNC chr63600_SetTIMING (ViSession vi, ViInt32 mode,
                                      ViReal64 value, ViReal64 risingSlewRate,
                                      ViReal64 fallingSlewRate,
                                      ViInt32 triggerMode, ViReal64 v_TRG_START,
                                      ViReal64 v_TRG_END, ViReal64 END_V,
                                      ViInt32 timeOut);

ViStatus _VI_FUNC chr63600_SetOCP (ViSession vi,
                                   ViReal64 startCurrent, ViReal64 endCurrent,
                                   ViInt32 step, ViReal64 dwell,
                                   ViReal64 triggerVoltage, ViReal64 spec_L,
                                   ViReal64 spec_H);

ViStatus _VI_FUNC chr63600_SetAllRun (ViSession vi,
                                      ViBoolean allRun);

ViStatus _VI_FUNC chr63600_SetAutoON (ViSession vi,
                                      ViBoolean autoLoadOn);

ViStatus _VI_FUNC chr63600_SetExtWave (ViSession vi,
                                       ViBoolean externalWaveform);

ViStatus _VI_FUNC chr63600_SetSound (ViSession vi, ViBoolean sound);

ViStatus _VI_FUNC chr63600_SetVonLatch (ViSession vi,
                                        ViBoolean latch);

ViStatus _VI_FUNC chr63600_SetSignV (ViSession vi,
                                     ViBoolean sign_ofVoltage);

ViStatus _VI_FUNC chr63600_SetWindowTime (ViSession vi,
                                          ViReal64 windowTime);

ViStatus _VI_FUNC chr63600_RstVonLatch (ViSession vi);

ViStatus _VI_FUNC chr63600_SetIR (ViSession vi,
                                  ViReal64 maximumCurrent, ViReal64 ONTime,
                                  ViReal64 OFFTime, ViInt32 repeat,
                                  ViReal64 samplingTime, ViInt32 samplingPoint,
                                  ViInt32 triggerPoint);

ViStatus _VI_FUNC chr63600_IRWaveCap (ViSession vi,
                                      ViChar status[]);

ViStatus _VI_FUNC chr63600_OCPResult (ViSession vi,
                                      ViChar OCPResult[]);

ViStatus _VI_FUNC chr63600_ProgSEQRemain (ViSession vi,
                                          ViInt32 *remain);

ViStatus _VI_FUNC chr63600_ProgSEQFail (ViSession vi,
                                        ViChar SEQ_ofFail[]);

ViStatus _VI_FUNC chr63600_ProgSEQClear (ViSession vi,
                                         ViInt32 programFile);

ViStatus _VI_FUNC chr63600_ProgState (ViSession vi, ViChar state[]);

ViStatus _VI_FUNC chr63600_ProgSave (ViSession vi);

ViStatus _VI_FUNC chr63600_ProgSelect (ViSession vi,
                                       ViInt32 programNumber);

ViStatus _VI_FUNC chr63600_ProgData (ViSession vi,
                                     ViChar programData[]);

ViStatus _VI_FUNC chr63600_ProgDataList (ViSession vi,
                                         ViChar programDataList[]);

ViStatus _VI_FUNC chr63600_ProgDataStep (ViSession vi,
                                         ViChar programDataStep[]);

ViStatus _VI_FUNC chr63600_SetSpecVolt (ViSession vi,
                                        ViReal64 center, ViReal64 high,
                                        ViReal64 low);

ViStatus _VI_FUNC chr63600_SelectUserWaveform (ViSession vi,
                                               ViInt32 number);

ViStatus _VI_FUNC chr63600_ConfigureUserWaveformData (ViSession vi,
                                                      ViReal64 interval,
                                                      ViInt32 repeat,
                                                      ViInt32 chain,
                                                      ViInt32 interpolation);

ViStatus _VI_FUNC chr63600_SetPointFromCSV (ViSession vi,
                                            ViChar path[]);

ViStatus _VI_FUNC chr63600_ConfigureUserWaveformPoint (ViSession vi,
                                                       ViChar point[]);

ViStatus _VI_FUNC chr63600_GetUserWaveformRemainPoint (ViSession vi,
                                                       ViInt32 *remain);

ViStatus _VI_FUNC chr63600_GetUserWaveformStatus (ViSession vi,
                                                  ViInt32 *executeStatus);

ViStatus _VI_FUNC chr63600_ClearUserWaveform (ViSession vi,
                                              ViInt32 *clearStatus);

ViStatus _VI_FUNC chr63600_SetSpecCurr (ViSession vi,
                                        ViReal64 center, ViReal64 high,
                                        ViReal64 low);

ViStatus _VI_FUNC chr63600_SetSpecPwr (ViSession vi,
                                       ViReal64 center, ViReal64 high,
                                       ViReal64 low);

ViStatus _VI_FUNC chr63600_QuerySpecVIP (ViSession vi,
                                         ViInt32 v_I_PSelect, ViChar result[]);

ViStatus _VI_FUNC chr63600_QuerySpecAll (ViSession vi,
                                         ViChar result[]);

ViStatus _VI_FUNC chr63600_SetSpecTest (ViSession vi,
                                        ViBoolean ON_OFF);

ViStatus _VI_FUNC chr63600_SetSpecUnit (ViSession vi,
                                        ViBoolean unit);

ViStatus _VI_FUNC chr63600_SetStatusCHANEnable (ViSession vi,
                                                ViInt32 registerValue);

ViStatus _VI_FUNC chr63600_SetStatusCHANPTR (ViSession vi,
                                             ViInt32 registerValue);

ViStatus _VI_FUNC chr63600_SetStatusCHANNTR (ViSession vi,
                                             ViInt32 registerValue);

ViStatus _VI_FUNC chr63600_SetStatusCSUMEnable (ViSession vi,
                                                ViInt32 registerValue);

ViStatus _VI_FUNC chr63600_SetStatusQUESEnable (ViSession vi,
                                                ViInt32 registerValue);

ViStatus _VI_FUNC chr63600_SetStatusQUESPTR (ViSession vi,
                                             ViInt32 registerValue);

ViStatus _VI_FUNC chr63600_SetStatusQUESNTR (ViSession vi,
                                             ViInt32 registerValue);

ViStatus _VI_FUNC chr63600_QueryCHANCond (ViSession vi,
                                          ViInt32 *returnValue);

ViStatus _VI_FUNC chr63600_QueryCHANEvnet (ViSession vi,
                                           ViInt32 *returnValue);

ViStatus _VI_FUNC chr63600_QueryCSUMEvnet (ViSession vi,
                                           ViInt32 *returnValue);

ViStatus _VI_FUNC chr63600_QueryQUESCond (ViSession vi,
                                          ViInt32 *returnValue);

ViStatus _VI_FUNC chr63600_QueryQUESEvent (ViSession vi,
                                           ViInt32 *returnValue);

ViStatus _VI_FUNC chr63600_SetCLS (ViSession vi);

ViStatus _VI_FUNC chr63600_SetESE (ViSession vi,
                                   ViInt32 enableRegister);

ViStatus _VI_FUNC chr63600_SetSRE (ViSession vi,
                                   ViInt32 enableRegister);

ViStatus _VI_FUNC chr63600_QueryESR (ViSession vi, ViInt32 *statusRegister);

ViStatus _VI_FUNC chr63600_QuerySTB (ViSession vi,
                                     ViInt32 *statusByteRegister);

ViStatus _VI_FUNC chr63600_SetOPC (ViSession vi);

ViStatus _VI_FUNC chr63600_QueryOPC (ViSession vi, ViInt32 *operationComplete);

ViStatus _VI_FUNC chr63600_QueryRDT (ViSession vi, ViChar type[]);

ViStatus _VI_FUNC chr63600_SetChannelActive (ViSession vi,
                                             ViBoolean ON_OFF);

ViStatus _VI_FUNC chr63600_QueryChanID (ViSession vi,
                                        ViChar channelID[]);

ViStatus _VI_FUNC chr63600_SetCCVRange (ViSession vi,
                                        ViInt32 voltageRange);

ViStatus _VI_FUNC chr63600_SetVon (ViSession vi, ViReal64 von);

ViStatus _VI_FUNC chr63600_SetVoff (ViSession vi, ViReal64 voff);

ViStatus _VI_FUNC chr63600_SetParalleType (ViSession vi,
                                           ViInt32 type);


ViStatus _VI_FUNC chr63600_SetParalleState (ViSession vi,
                                            ViBoolean enable);

ViStatus _VI_FUNC chr63600_SetSynchronousChannel (ViSession vi,
                                                  ViInt32 channel);

ViStatus _VI_FUNC chr63600_SetSynchronousType (ViSession vi,
                                               ViInt32 type);

ViStatus _VI_FUNC chr63600_SetSynchronousMode (ViSession vi,ViInt32 mode);

ViStatus _VI_FUNC chr63600_IRGetWave (ViSession vi,
                                      ViBoolean waveform, float returnedData[],
                                      ViInt32 *returnedCount);

ViStatus _VI_FUNC chr63600_SetDIGI (ViSession vi,
                                    ViReal64 samplingTime, ViInt32 samplingPoint,
                                    ViInt32 triggerSource, ViInt32 triggerPoint);

ViStatus _VI_FUNC chr63600_SetDIGIAbort (ViSession vi);

ViStatus _VI_FUNC chr63600_SetDIGIInit (ViSession vi);

ViStatus _VI_FUNC chr63600_DIGIWaveCap (ViSession vi,
                                        ViChar status[]);

ViStatus _VI_FUNC chr63600_DIGIGetWave (ViSession vi,
                                        ViBoolean waveform, float returnedData[],
                                        ViInt32 *returnedCount);

ViStatus _VI_FUNC chr63600_DIGISetTrig (ViSession vi,
                                        ViBoolean triggerState);

ViStatus _VI_FUNC chr63600_DIGIQueryTrig (ViSession vi,
                                          ViChar triggerState[]);

ViStatus _VI_FUNC chr63600_SetLoad (ViSession vi, ViBoolean ON_OFF);

ViStatus _VI_FUNC chr63600_QueryLoadState (ViSession vi,
                                           ViBoolean *loadState);

ViStatus _VI_FUNC chr63600_QueryLoadProt (ViSession vi,
                                          ViInt32 *loadProtection);

ViStatus _VI_FUNC chr63600_LoadProtClear (ViSession vi);

ViStatus _VI_FUNC chr63600_SetShort (ViSession vi,
                                     ViBoolean ON_OFF);

ViStatus _VI_FUNC chr63600_SetShortKey (ViSession vi,
                                        ViBoolean shortKey);

ViStatus _VI_FUNC chr63600_Run (ViSession vi);

ViStatus _VI_FUNC chr63600_Abort (ViSession vi);

ViStatus _VI_FUNC chr63600_SynchronousRun (ViSession vi,
                                           ViBoolean run);

ViStatus _VI_FUNC chr63600_SetMode (ViSession vi, ViInt32 mode);

ViStatus _VI_FUNC chr63600_SavePara (ViSession vi,
                                     ViInt32 memoryLocation);

ViStatus _VI_FUNC chr63600_RecallPara (ViSession vi,
                                       ViInt32 memoryLocation);

ViStatus _VI_FUNC  chr63600_SetAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value);
ViStatus _VI_FUNC  chr63600_SetAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value);
ViStatus _VI_FUNC  chr63600_SetAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value);
ViStatus _VI_FUNC  chr63600_SetAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value);
ViStatus _VI_FUNC  chr63600_SetAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value);

ViStatus _VI_FUNC  chr63600_CheckAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value);
ViStatus _VI_FUNC  chr63600_CheckAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value);
ViStatus _VI_FUNC  chr63600_CheckAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value);
ViStatus _VI_FUNC  chr63600_CheckAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value);
ViStatus _VI_FUNC  chr63600_CheckAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value);

    /*********************************************************
        Functions reserved for class driver use only.
        End-users should not call these functions.
     *********************************************************/
ViStatus _VI_FUNC  chr63600_IviInit (ViRsrc resourceName, ViBoolean IDQuery,
                                     ViBoolean reset, ViSession vi);
ViStatus _VI_FUNC  chr63600_IviClose (ViSession vi);

/****************************************************************************
 *------------------------ Error And Completion Codes ----------------------*
 ****************************************************************************/

#define CHR63600_ERROR_MODE  			(IVI_SPECIFIC_ERROR_BASE + 1)
#define CHR63600_CHANNEL_NOT_EXIST    	(IVI_SPECIFIC_ERROR_BASE + 2)
#define CHR63600_ERROR_OPER_MODE		(IVI_SPECIFIC_ERROR_BASE + 3)
#define CHR63600_ERROR_WAVEFORM_READ 	(IVI_SPECIFIC_ERROR_BASE + 4)
#define	CHR63600_ERROR_WFDATA_STATUS	(IVI_SPECIFIC_ERROR_BASE + 5)

/****************************************************************************
 *---------------------------- End Include File ----------------------------*
 ****************************************************************************/

#define CHR63600_VAL_MODE_CCL                                       0
#define CHR63600_VAL_MODE_CCM                                       1
#define CHR63600_VAL_MODE_CCH                                       2
#define CHR63600_VAL_MODE_CRL                                       3
#define CHR63600_VAL_MODE_CRM                                       4
#define CHR63600_VAL_MODE_CRH                                       5
#define CHR63600_VAL_MODE_CVL                                       6
#define CHR63600_VAL_MODE_CVM                                       7
#define CHR63600_VAL_MODE_CVH                                       8
#define CHR63600_VAL_MODE_CPL                                       9
#define CHR63600_VAL_MODE_CPM                                       10
#define CHR63600_VAL_MODE_CPH                                       11
#define CHR63600_VAL_MODE_CZL                                       12
#define CHR63600_VAL_MODE_CZM                                       13
#define CHR63600_VAL_MODE_CZH                                       14
#define CHR63600_VAL_MODE_CCDL                                      15
#define CHR63600_VAL_MODE_CCDM                                      16
#define CHR63600_VAL_MODE_CCDH                                      17
#define CHR63600_VAL_MODE_CCFSL                                     18
#define CHR63600_VAL_MODE_CCFSM                                     19
#define CHR63600_VAL_MODE_CCFSH                                     20
#define CHR63600_VAL_MODE_TIML                                      21
#define CHR63600_VAL_MODE_TIMM                                      22
#define CHR63600_VAL_MODE_TIMH                                      23
#define CHR63600_VAL_MODE_ACL                                       24
#define CHR63600_VAL_MODE_ACM                                       25
#define CHR63600_VAL_MODE_ACH                                       26
#define CHR63600_VAL_MODE_IRL                                       27
#define CHR63600_VAL_MODE_IRM                                       28
#define CHR63600_VAL_MODE_IRH                                       29
#define CHR63600_VAL_MODE_OCPL                                      30
#define CHR63600_VAL_MODE_OCPM                                      31
#define CHR63600_VAL_MODE_OCPH                                      32
#define CHR63600_VAL_MODE_PROG                                      33

#define CHR63600_VAL_VOLT_FAST                                      0
#define CHR63600_VAL_VOLT_NORMAL                                    1
#define CHR63600_VAL_VOLT_SLOW                                      2

#define CHR63600_VAL_CONG_VRANGE_LOW                                0
#define CHR63600_VAL_CONG_VRANGE_MIDDLE                             1
#define CHR63600_VAL_CONG_VRANGE_HIGH                               2

#define CHR63600_VAL_TIME_MODE_CC                                   0
#define CHR63600_VAL_TIME_MODE_CR                                   1
#define CHR63600_VAL_TIME_MODE_CP                                   2

#define CHR63600_VAL_TIME_TRG_FALL                                  0
#define CHR63600_VAL_TIME_TRG_RISE                                  1
#define CHR63600_VAL_TIME_TRG_HOLDUP                                2

#define CHR63600_VAL_DIGI_LOADON                                    0
#define CHR63600_VAL_DIGI_LOADOFF                                   1
#define CHR63600_VAL_DIGI_TTL                                       2
#define CHR63600_VAL_DIGI_SW                                        3
#define CHR63600_VAL_DIGI_FORCE                                     4

#define CHR63600_VAL_MODE_UDWL                                      34
#define CHR63600_VAL_MODE_UDWM                                      35
#define CHR63600_VAL_MODE_UDWH                                      36

#define CHR63600_VAL_NONE                                           0
#define CHR63600_VAL_MASTER                                         1
#define CHR63600_VAL_SLAVE                                          2

#define CHR63600_VAL_OFF                                            0
#define CHR63600_VAL_ON                                             1


#if defined(__cplusplus) || defined(__cplusplus__)
}
#endif
#endif /* __CHR63600_HEADER */
