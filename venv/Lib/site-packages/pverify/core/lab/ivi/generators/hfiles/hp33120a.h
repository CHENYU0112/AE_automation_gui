/****************************************************************************
 *                       Hewlett Packard 33120A
 *---------------------------------------------------------------------------
 * (c) 1998-2015, National Instruments, Corporation.  All Rights Reserved.
 *---------------------------------------------------------------------------
 *
 * Title:    hp33120a.h
 * Purpose:  Hewlett Packard 33120A
 *           instrument driver declarations.
 *
 ****************************************************************************/

#ifndef __HP33120A_HEADER
#define __HP33120A_HEADER

#include <ivi.h>
#include <ivifgen.h>

#if defined(__cplusplus) || defined(__cplusplus__)
extern "C" {
#endif

/****************************************************************************
 *--------------------- Instrument Driver Information ----------------------*
 ****************************************************************************/
#define HP33120A_MAJOR_VERSION                  6   /* Instrument driver major version   */
#define HP33120A_MINOR_VERSION                  7   /* Instrument driver minor version   */

#define HP33120A_CLASS_SPEC_MAJOR_VERSION       3   /* Class specification major version */
#define HP33120A_CLASS_SPEC_MINOR_VERSION       0   /* Class specification minor version */

#define HP33120A_SUPPORTED_INSTRUMENT_MODELS    "33120A,E1441A,33210A,33220A,33250A"

#define HP33120A_DRIVER_VENDOR                  "National Instruments"

#ifdef  _IVI_mswin64_
#define HP33120A_DRIVER_DESCRIPTION             "Hewlett-Packard 33120A Arbitrary Function Generator [Compiled for 64-bit.]"
#else
#define HP33120A_DRIVER_DESCRIPTION             "Hewlett-Packard 33120A Arbitrary Function Generator"
#endif

#define HP33120A_IO_SESSION_TYPE                "VISA"

/****************************************************************************
 *------------------------------ Useful Macros -----------------------------*
 ****************************************************************************/

#define HP33120A_WFM_HANDLE_FROM_INDEX(x)    (HP33120A_VAL_FIRST_WAVEFORM_HANDLE + x)
#define HP33120A_WFM_INDEX_FROM_HANDLE(x)    (x - HP33120A_VAL_FIRST_WAVEFORM_HANDLE)

/****************************************************************************
 *---------------------------- Attribute Defines ---------------------------*
 ****************************************************************************/

/*- IVI Inherent Instrument Attributes ---------------------------------*/

/* User Options */
#define HP33120A_ATTR_RANGE_CHECK                                 IVI_ATTR_RANGE_CHECK             /* ViBoolean */
#define HP33120A_ATTR_QUERY_INSTRUMENT_STATUS                     IVI_ATTR_QUERY_INSTRUMENT_STATUS /* ViBoolean */
#define HP33120A_ATTR_CACHE                                       IVI_ATTR_CACHE                   /* ViBoolean */
#define HP33120A_ATTR_SIMULATE                                    IVI_ATTR_SIMULATE                /* ViBoolean */
#define HP33120A_ATTR_RECORD_COERCIONS                            IVI_ATTR_RECORD_COERCIONS        /* ViBoolean */

#define HP33120A_ATTR_DRIVER_SETUP                                IVI_ATTR_DRIVER_SETUP
#define HP33120A_ATTR_INTERCHANGE_CHECK                           IVI_ATTR_INTERCHANGE_CHECK

/* Instrument Capabilities */
#define HP33120A_ATTR_CHANNEL_COUNT                               IVI_ATTR_CHANNEL_COUNT    /* ViInt32,  read-only  */

/* Driver Information  */
#define HP33120A_ATTR_GROUP_CAPABILITIES                          IVI_ATTR_GROUP_CAPABILITIES
#define HP33120A_ATTR_SPECIFIC_DRIVER_PREFIX                      IVI_ATTR_SPECIFIC_DRIVER_PREFIX                   /* ViString, read-only  */
#define HP33120A_ATTR_SUPPORTED_INSTRUMENT_MODELS                 IVI_ATTR_SUPPORTED_INSTRUMENT_MODELS              /* ViString, read-only  */
#define HP33120A_ATTR_INSTRUMENT_MANUFACTURER                     IVI_ATTR_INSTRUMENT_MANUFACTURER                  /* ViString, read-only  */
#define HP33120A_ATTR_INSTRUMENT_MODEL                            IVI_ATTR_INSTRUMENT_MODEL                         /* ViString, read-only  */
#define HP33120A_ATTR_INSTRUMENT_FIRMWARE_REVISION                IVI_ATTR_INSTRUMENT_FIRMWARE_REVISION             /* ViString, read-only  */
#define HP33120A_ATTR_SPECIFIC_DRIVER_REVISION                    IVI_ATTR_SPECIFIC_DRIVER_REVISION                 /* ViString, read-only  */
#define HP33120A_ATTR_SPECIFIC_DRIVER_VENDOR                      IVI_ATTR_SPECIFIC_DRIVER_VENDOR                   /* ViString, read-only  */
#define HP33120A_ATTR_SPECIFIC_DRIVER_DESCRIPTION                 IVI_ATTR_SPECIFIC_DRIVER_DESCRIPTION              /* ViString, read-only  */
#define HP33120A_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION    IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION /* ViInt32, read-only */
#define HP33120A_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION    IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION /* ViInt32, read-only */

/* Advanced Session Information */
#define HP33120A_ATTR_LOGICAL_NAME                                IVI_ATTR_LOGICAL_NAME           /* ViString, read-only  */
#define HP33120A_ATTR_IO_RESOURCE_DESCRIPTOR                      IVI_ATTR_IO_RESOURCE_DESCRIPTOR /* ViString, read-only  */
/*- Instrument-Specific Attributes -------------------------------------*/

/*- Basic Instrument Operation -----------------------------------------*/
#define HP33120A_ATTR_OPERATION_MODE      IVIFGEN_ATTR_OPERATION_MODE               /* ViInt32    multi-channel        */
#define HP33120A_ATTR_OUTPUT_MODE         IVIFGEN_ATTR_OUTPUT_MODE                  /* ViInt32                         */
#define HP33120A_ATTR_REF_CLOCK_SOURCE    IVIFGEN_ATTR_REF_CLOCK_SOURCE             /* ViReal64                        */
#define HP33120A_ATTR_OUTPUT_ENABLED      IVIFGEN_ATTR_OUTPUT_ENABLED               /* ViBoolean, multi-channel        */
#define HP33120A_ATTR_OUTPUT_IMPEDANCE    IVIFGEN_ATTR_OUTPUT_IMPEDANCE             /* ViReal64,  multi-channel, ohms  */

/*- Standard Waveform Generation ---------------------------------------*/

#define HP33120A_ATTR_FUNC_WAVEFORM           IVIFGEN_ATTR_FUNC_WAVEFORM            /* ViInt32,  multi-channel           */
#define HP33120A_ATTR_FUNC_AMPLITUDE          IVIFGEN_ATTR_FUNC_AMPLITUDE           /* ViReal64, multi-channel, volts    */
#define HP33120A_ATTR_FUNC_DC_OFFSET          IVIFGEN_ATTR_FUNC_DC_OFFSET           /* ViReal64, multi-channel, volts    */
#define HP33120A_ATTR_FUNC_FREQUENCY          IVIFGEN_ATTR_FUNC_FREQUENCY           /* ViReal64, multi-channel, hertz    */
#define HP33120A_ATTR_FUNC_START_PHASE        IVIFGEN_ATTR_FUNC_START_PHASE         /* ViReal64, multi-channel, degrees  */
#define HP33120A_ATTR_FUNC_DUTY_CYCLE_HIGH    IVIFGEN_ATTR_FUNC_DUTY_CYCLE_HIGH     /* ViReal64, multi-channel, percent  */

/*- Arbitrary Waveform Generation --------------------------------------*/

#define HP33120A_ATTR_ARB_WAVEFORM_HANDLE         IVIFGEN_ATTR_ARB_WAVEFORM_HANDLE  /* ViInt32,  multi-channel         */
#define HP33120A_ATTR_ARB_GAIN                    IVIFGEN_ATTR_ARB_GAIN             /* ViReal64, multi-channel         */
#define HP33120A_ATTR_ARB_OFFSET                  IVIFGEN_ATTR_ARB_OFFSET           /* ViReal64, multi-channel, volts  */
#define HP33120A_ATTR_ARB_SAMPLE_RATE             IVIFGEN_ATTR_ARB_SAMPLE_RATE      /* ViReal64, samples-per-second    */

#define HP33120A_ATTR_MAX_NUM_WAVEFORMS           IVIFGEN_ATTR_MAX_NUM_WAVEFORMS    /* ViInt32,  read-only             */
#define HP33120A_ATTR_WAVEFORM_QUANTUM            IVIFGEN_ATTR_WAVEFORM_QUANTUM     /* ViInt32,  read-only             */
#define HP33120A_ATTR_MIN_WAVEFORM_SIZE           IVIFGEN_ATTR_MIN_WAVEFORM_SIZE    /* ViInt32,  read-only             */
#define HP33120A_ATTR_MAX_WAVEFORM_SIZE           IVIFGEN_ATTR_MAX_WAVEFORM_SIZE    /* ViInt32,  read-only             */

/*- Arbitrary Waveform FREQUENCY --------------------------------------*/
#define HP33120A_ATTR_ARB_FREQUENCY               IVIFGEN_ATTR_ARB_FREQUENCY        /* ViReal64, multi-channel         */

/*- Arbitrary Waveform Info --------------------------------------*/
#define HP33120A_ATTR_ARB_USERWFM_CREST_FACTOR    IVI_SPECIFIC_PUBLIC_ATTR_BASE + 608L      /* ViReal64     */
#define HP33120A_ATTR_ARB_USERWFM_AVERAGE         IVI_SPECIFIC_PUBLIC_ATTR_BASE + 609L      /* ViReal64     */
#define HP33120A_ATTR_DATA_NVOLATILE_FREE         IVI_SPECIFIC_PUBLIC_ATTR_BASE + 610L      /* ViInt32 (read-only) */
#define HP33120A_ATTR_DATA_NVOLATILE_CATALOG      IVI_SPECIFIC_PUBLIC_ATTR_BASE + 611L      /* ViString (read-only) */

/*- Ampitude Modulation Generation -------------------------------------*/

#define HP33120A_ATTR_AM_ENABLED               IVIFGEN_ATTR_AM_ENABLED              /* ViBoolean, multi-channel */
#define HP33120A_ATTR_AM_SOURCE                IVIFGEN_ATTR_AM_SOURCE               /* ViInt32,   multi-channel */
#define HP33120A_ATTR_AM_INTERNAL_DEPTH        IVIFGEN_ATTR_AM_INTERNAL_DEPTH       /* ViReal64,  percent       */
#define HP33120A_ATTR_AM_INTERNAL_WAVEFORM     IVIFGEN_ATTR_AM_INTERNAL_WAVEFORM    /* ViInt32                  */
#define HP33120A_ATTR_AM_INTERNAL_FREQUENCY    IVIFGEN_ATTR_AM_INTERNAL_FREQUENCY   /* ViReal64,  hertz         */

/*- Frequency Modulation Generation ------------------------------------*/

#define HP33120A_ATTR_FM_ENABLED               IVIFGEN_ATTR_FM_ENABLED              /* ViBoolean, multi-channel */
#define HP33120A_ATTR_FM_SOURCE                IVIFGEN_ATTR_FM_SOURCE               /* ViInt32,   multi-channel */
#define HP33120A_ATTR_FM_INTERNAL_DEVIATION    IVIFGEN_ATTR_FM_INTERNAL_DEVIATION   /* ViReal64,  hertz         */
#define HP33120A_ATTR_FM_INTERNAL_WAVEFORM     IVIFGEN_ATTR_FM_INTERNAL_WAVEFORM    /* ViInt32                  */
#define HP33120A_ATTR_FM_INTERNAL_FREQUENCY    IVIFGEN_ATTR_FM_INTERNAL_FREQUENCY   /* ViReal64,  hertz         */

/*- Phase Modulation Generation ----------------------------------------*/

#define HP33120A_ATTR_PM_ENABLED               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 501L)  /* ViBoolean, multi-channel */
#define HP33120A_ATTR_PM_SOURCE                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 502L)  /* ViInt32,   multi-channel */
#define HP33120A_ATTR_PM_INTERNAL_DEVIATION    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 503L)  /* ViReal64,  degrees       */
#define HP33120A_ATTR_PM_INTERNAL_WAVEFORM     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 504L)  /* ViInt32                  */
#define HP33120A_ATTR_PM_INTERNAL_FREQUENCY    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 505L)  /* ViReal64,  hertz         */

/*- Pulse Width Modulation Generation ----------------------------------*/

#define HP33120A_ATTR_PWM_ENABLED                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 601L) /* ViBoolean, multi-channel */
#define HP33120A_ATTR_PWM_SOURCE                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 602L) /* ViInt32,   multi-channel */
#define HP33120A_ATTR_PWM_INTERNAL_DEVIATION      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 603L) /* ViReal64,  seconds       */
#define HP33120A_ATTR_PWM_INTERNAL_WAVEFORM       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 604L) /* ViInt32                  */
#define HP33120A_ATTR_PWM_INTERNAL_FREQUENCY      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 605L) /* ViReal64,  hertz         */
#define HP33120A_ATTR_PWM_DUTY_CYCLE_DEVIATION    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 606L) /* ViReal64,  percentages   */

#define HP33120A_ATTR_ID_QUERY_RESPONSE           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1L)   /* ViString (Read Only) */

/*- Frequency Shift Key Modulation Generation --------------------------*/

#define HP33120A_ATTR_FSK_ENABLED                         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 101L) /* ViBoolean, multi-channel */
#define HP33120A_ATTR_FSK_HOP_FREQUENCY                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 102L) /* ViReal64,  multi-channel */
#define HP33120A_ATTR_FSK_SOURCE                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 103L) /* ViInt32,   multi-channel */
#define HP33120A_ATTR_FSK_INTERNAL_RATE                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 104L) /* ViReal64,  multi-channel */

/*- Frequency Sweep Generation -----------------------------------------*/
#define HP33120A_ATTR_SWEEP_START_FREQ                    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 202L) /* ViReal64,  multi-channel */
#define HP33120A_ATTR_SWEEP_STOP_FREQ                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 203L) /* ViReal64,  multi-channel */
#define HP33120A_ATTR_SWEEP_SPACING                       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 204L) /* ViInt32,   multi-channel */
#define HP33120A_ATTR_SWEEP_TIME                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 205L) /* ViReal64,  multi-channel */
#define HP33120A_ATTR_SWEEP_MARKER_FREQ                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 206L) /* ViReal64,  multi-channel */
#define HP33120A_ATTR_SWEEP_FREQ_SPAN                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 207L) /* ViReal64,  multi-channel */
#define HP33120A_ATTR_SWEEP_CENTER_FREQ                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 208L) /* ViReal64,  multi-channel */
#define HP33120A_ATTR_SWEEP_MARKER_ENABLED                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 410L)

/*- Burst Modulation Generation ----------------------------------------*/
#define HP33120A_ATTR_BURST_COUNT                         IVIFGEN_ATTR_BURST_COUNT               /* ViInt32,   multi-channel */
#define HP33120A_ATTR_INTERNAL_TRIGGER_RATE               IVIFGEN_ATTR_INTERNAL_TRIGGER_RATE     /* ViReal64                 */
#define HP33120A_ATTR_BURST_GATE_POLARITY                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 411L) /* ViInt32,   multi-channel */
#define HP33120A_ATTR_BURST_PHASE                         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 305L) /* ViReal64,  multi-channel */
#define HP33120A_ATTR_BURST_MODE                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 506L) /* ViInt32,   multi-channel */
#define HP33120A_ATTR_TRIGGER_SOURCE                      IVIFGEN_ATTR_TRIGGER_SOURCE

/*- TTL lines available on VXIbus backplane of HPE1441A ----------------*/
#define HP33120A_ATTR_TTL1_ENABLED                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 306L) /* ViBoolean */
#define HP33120A_ATTR_TTL2_ENABLED                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 307L) /* ViBoolean */
#define HP33120A_ATTR_TTL3_ENABLED                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 308L) /* ViBoolean */
#define HP33120A_ATTR_TTL4_ENABLED                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 309L) /* ViBoolean */
#define HP33120A_ATTR_TTL5_ENABLED                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 310L) /* ViBoolean */
#define HP33120A_ATTR_TTL6_ENABLED                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 311L) /* ViBoolean */
#define HP33120A_ATTR_TTL7_ENABLED                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 312L) /* ViBoolean */
#define HP33120A_ATTR_TTL0_ENABLED                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 313L) /* ViBoolean */

/*- VXI Phase synchronization ------------------------------------------*/
#define HP33120A_ATTR_PHASE_REF                           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 314L) /* ViReal64 */
#define HP33120A_ATTR_PHASE_ADJUST                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 315L) /* ViReal64 */

/*- Polarity -----------------------------------------------------------*/
#define HP33120A_ATTR_OUTPUT_POLARITY                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 401L) /* ViInt32,   multi-channel */

/*- Pulse --------------------------------------------------------------*/
#define HP33120A_ATTR_PULSE_PERIOD                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 402L) /* ViReal64,   multi-channel */
#define HP33120A_ATTR_PULSE_WIDTH                         (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 403L) /* ViReal64,   multi-channel */
#define HP33120A_ATTR_PULSE_TRANSITION                    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 404L) /* ViReal64,   multi-channel */
#define HP33120A_ATTR_PULSE_DUTY_CYCLE                    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 415L) /* ViReal64 */
#define HP33120A_ATTR_PULSE_HOLD                          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 416L) /* ViInt32  */

/*- Output Trigger -----------------------------------------------------*/
#define HP33120A_ATTR_OUTPUT_TRIGGER_ENABLED              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 405L) /* ViBoolean */
#define HP33120A_ATTR_OUTPUT_TRIGGER_SLOPE                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 407L) /* ViInt32   */

/*- Ramp Symmetry ------------------------------------------------------*/
#define HP33120A_ATTR_RAMP_SYMMETRY                       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 406L) /* ViReal64 */

/*- Trigger ------------------------------------------------------------*/
#define HP33120A_ATTR_TRIGGER_SLOPE                       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 408L) /* ViInt32  */
#define HP33120A_ATTR_TRIGGER_DELAY                       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 409L) /* ViReal64 */

/*- Phase unlock error state -------------------------------------------*/
#define HP33120A_ATTR_PHASE_UNLOCK_ERROR_STATE_ENABLED    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 412L) /* ViBoolean */

/*- Voltage autoranging ------------------------------------------------*/
#define HP33120A_ATTR_VOLT_RANGE_AUTO                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 413L) /* ViBoolean */

/*- Sync Signal Enabled ------------------------------------------------*/
#define HP33120A_ATTR_SYNC_SIGNAL_ENABLED                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 414L) /* ViBoolean */

/*- State Storage Group Attributes -------------------------------------*/
#define HP33120A_ATTR_MEMORY_STATE_NAME                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 507L) /* ViString      */
#define HP33120A_ATTR_MEMORY_CATALOG                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 508L) /* ViString      */
#define HP33120A_ATTR_MEMORY_AVAILABLE_SLOTS              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 509L) /* ViInt32       */
#define HP33120A_ATTR_MEMORY_VALID_STATE                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 510L) /* ViBoolean     */
#define HP33120A_ATTR_MEMORY_AUTO_RECALL_ENABLED          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 511L) /* ViBoolean, multi-channel */

/*- Miscellaneous Attributes -------------------------------------------*/
#define HP33120A_ATTR_LEARN_STRING                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 512L) /* ViString (read-only) */

/****************************************************************************
 *------------------------ Attribute Value Defines -------------------------*
 ****************************************************************************/

/*- Defined values for attribute HP33120A_ATTR_FUNCTION --------------*/

#define HP33120A_VAL_OUTPUT_FUNC    IVIFGEN_VAL_OUTPUT_FUNC
#define HP33120A_VAL_OUTPUT_ARB     IVIFGEN_VAL_OUTPUT_ARB

/*- Defined values for attribute HP33120A_ATTR_REF_CLOCK_SOURCE ------*/

#define HP33120A_VAL_REF_CLOCK_INTERNAL    IVIFGEN_VAL_REF_CLOCK_INTERNAL
#define HP33120A_VAL_REF_CLOCK_EXTERNAL    IVIFGEN_VAL_REF_CLOCK_EXTERNAL

/*- Defined values for attribute HP33120A_ATTR_REF_CLOCK_SOURCE ------*/

#define HP33120A_VAL_PULSE_HOLD_WIDTH     (0L)
#define HP33120A_VAL_PULSE_HOLD_DCYCLE    (1L)

/*- Defined values for attribute HP33120A_ATTR_FUNC_WAVEFORM ---------*/
#define HP33120A_VAL_WFM_SINE             IVIFGEN_VAL_WFM_SINE
#define HP33120A_VAL_WFM_SQUARE           IVIFGEN_VAL_WFM_SQUARE
#define HP33120A_VAL_WFM_TRIANGLE         IVIFGEN_VAL_WFM_TRIANGLE
#define HP33120A_VAL_WFM_RAMP_UP          IVIFGEN_VAL_WFM_RAMP_UP
#define HP33120A_VAL_WFM_DC               IVIFGEN_VAL_WFM_DC
#define HP33120A_VAL_WFM_RAMP_DOWN        IVIFGEN_VAL_WFM_RAMP_DOWN
#define HP33120A_VAL_WFM_NOISE            (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 1)
#define HP33120A_VAL_WFM_PULSE            (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 2)
#define HP33120A_VAL_WFM_USER             (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 3)
#define HP33120A_VAL_WFM_RAMP             (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 4)

/*- Defined values for Arbitrary Waveform Handles ---------------------------------*/
#define HP33120A_VAL_ALL_WAVEFORMS        IVIFGEN_VAL_ALL_WAVEFORMS

/*- Defined values for attribute HP33120A_ATTR_AM_SOURCE -*/
#define HP33120A_VAL_AM_EXTERNAL          IVIFGEN_VAL_AM_EXTERNAL
#define HP33120A_VAL_AM_INTERNAL          IVIFGEN_VAL_AM_INTERNAL


/*- Defined values for attribute HP33120A_ATTR_AM_INTERNAL_WAVEFORM -*/
#define HP33120A_VAL_AM_INTERNAL_SINE           IVIFGEN_VAL_AM_INTERNAL_SINE
#define HP33120A_VAL_AM_INTERNAL_SQUARE         IVIFGEN_VAL_AM_INTERNAL_SQUARE
#define HP33120A_VAL_AM_INTERNAL_TRIANGLE       IVIFGEN_VAL_AM_INTERNAL_TRIANGLE
#define HP33120A_VAL_AM_INTERNAL_RAMP_UP        IVIFGEN_VAL_AM_INTERNAL_RAMP_UP
#define HP33120A_VAL_AM_INTERNAL_NOISE          (IVIFGEN_VAL_AM_SOURCE_SPECIFIC_EXT_BASE + 1L)
#define HP33120A_VAL_AM_INTERNAL_ARBITRARY      (IVIFGEN_VAL_AM_SOURCE_SPECIFIC_EXT_BASE + 2L)
#define HP33120A_VAL_AM_INTERNAL_RAMP_DOWN      IVIFGEN_VAL_AM_INTERNAL_RAMP_DOWN

/*- Defined values for attribute HP33120A_ATTR_FM_SOURCE -*/
#define HP33120A_VAL_FM_INTERNAL                IVIFGEN_VAL_FM_INTERNAL
#define HP33120A_VAL_FM_EXTERNAL                IVIFGEN_VAL_FM_EXTERNAL

/*- Defined values for attribute HP33120A_ATTR_FM_INTERNAL_WAVEFORM -*/
#define HP33120A_VAL_FM_INTERNAL_SINE           IVIFGEN_VAL_FM_INTERNAL_SINE
#define HP33120A_VAL_FM_INTERNAL_SQUARE         IVIFGEN_VAL_FM_INTERNAL_SQUARE
#define HP33120A_VAL_FM_INTERNAL_TRIANGLE       IVIFGEN_VAL_FM_INTERNAL_TRIANGLE
#define HP33120A_VAL_FM_INTERNAL_RAMP_UP        IVIFGEN_VAL_FM_INTERNAL_RAMP_UP
#define HP33120A_VAL_FM_INTERNAL_NOISE          (IVIFGEN_VAL_FM_SOURCE_SPECIFIC_EXT_BASE + 1L)
#define HP33120A_VAL_FM_INTERNAL_ARBITRARY      (IVIFGEN_VAL_FM_SOURCE_SPECIFIC_EXT_BASE + 2L)
#define HP33120A_VAL_FM_INTERNAL_RAMP_DOWN      IVIFGEN_VAL_FM_INTERNAL_RAMP_DOWN

/*- Defined values for attribute HP33120A_ATTR_FM_SOURCE -*/
#define HP33120A_VAL_PM_INTERNAL                IVIFGEN_VAL_FM_INTERNAL
#define HP33120A_VAL_PM_EXTERNAL                IVIFGEN_VAL_FM_EXTERNAL

/*- Defined values for attribute HP33120A_ATTR_PM_INTERNAL_WAVEFORM -*/
#define HP33120A_VAL_PM_INTERNAL_SINE           IVIFGEN_VAL_FM_INTERNAL_SINE
#define HP33120A_VAL_PM_INTERNAL_SQUARE         IVIFGEN_VAL_FM_INTERNAL_SQUARE
#define HP33120A_VAL_PM_INTERNAL_TRIANGLE       IVIFGEN_VAL_FM_INTERNAL_TRIANGLE
#define HP33120A_VAL_PM_INTERNAL_RAMP_UP        IVIFGEN_VAL_FM_INTERNAL_RAMP_UP
#define HP33120A_VAL_PM_INTERNAL_NOISE          (IVIFGEN_VAL_FM_SOURCE_SPECIFIC_EXT_BASE + 1L)
#define HP33120A_VAL_PM_INTERNAL_ARBITRARY      (IVIFGEN_VAL_FM_SOURCE_SPECIFIC_EXT_BASE + 2L)
#define HP33120A_VAL_PM_INTERNAL_RAMP_DOWN      IVIFGEN_VAL_FM_INTERNAL_RAMP_DOWN

/*- Defined values for attribute HP33120A_ATTR_FM_SOURCE -*/
#define HP33120A_VAL_PWM_INTERNAL               IVIFGEN_VAL_FM_INTERNAL
#define HP33120A_VAL_PWM_EXTERNAL               IVIFGEN_VAL_FM_EXTERNAL

/*- Defined values for attribute HP33120A_ATTR_PM_INTERNAL_WAVEFORM -*/
#define HP33120A_VAL_PWM_INTERNAL_SINE          IVIFGEN_VAL_FM_INTERNAL_SINE
#define HP33120A_VAL_PWM_INTERNAL_SQUARE        IVIFGEN_VAL_FM_INTERNAL_SQUARE
#define HP33120A_VAL_PWM_INTERNAL_TRIANGLE      IVIFGEN_VAL_FM_INTERNAL_TRIANGLE
#define HP33120A_VAL_PWM_INTERNAL_RAMP_UP       IVIFGEN_VAL_FM_INTERNAL_RAMP_UP
#define HP33120A_VAL_PWM_INTERNAL_NOISE         (IVIFGEN_VAL_FM_SOURCE_SPECIFIC_EXT_BASE + 1L)
#define HP33120A_VAL_PWM_INTERNAL_ARBITRARY     (IVIFGEN_VAL_FM_SOURCE_SPECIFIC_EXT_BASE + 2L)
#define HP33120A_VAL_PWM_INTERNAL_RAMP_DOWN     IVIFGEN_VAL_FM_INTERNAL_RAMP_DOWN

/*- Defined values for attribute HP33120A_ATTR_TRIGGER_SOURCE ----------*/
#define HP33120A_VAL_INTERNAL_TRIGGER           IVIFGEN_VAL_INTERNAL_TRIGGER
#define HP33120A_VAL_EXTERNAL                   IVIFGEN_VAL_EXTERNAL
#define HP33120A_VAL_SOFTWARE_TRIG              IVIFGEN_VAL_SOFTWARE_TRIG
#define HP33120A_VAL_TTL0                       IVIFGEN_VAL_TTL0
#define HP33120A_VAL_TTL1                       IVIFGEN_VAL_TTL1
#define HP33120A_VAL_TTL2                       IVIFGEN_VAL_TTL2
#define HP33120A_VAL_TTL3                       IVIFGEN_VAL_TTL3
#define HP33120A_VAL_TTL4                       IVIFGEN_VAL_TTL4
#define HP33120A_VAL_TTL5                       IVIFGEN_VAL_TTL5
#define HP33120A_VAL_TTL6                       IVIFGEN_VAL_TTL6
#define HP33120A_VAL_TTL7                       IVIFGEN_VAL_TTL7

/*- Defined values for attribute HP33120A_ATTR_SWEEP_SPACING ---------*/
#define HP33120A_VAL_LINEAR                     (1L)
#define HP33120A_VAL_LOGARITHMIC                (2L)

/*- Define values for atttribute HP33120A_ATTR_BURST_COUNT -----------*/
#define HP33120A_VAL_GENERATE_CONTINUOUS        (-1L)

/*- Define values for atttribute HP33120A_ATTR_OPERATION_MODE-----------*/
#define HP33120A_VAL_OPERATE_CONTINUOUS         IVIFGEN_VAL_OPERATE_CONTINUOUS
#define HP33120A_VAL_OPERATE_BURST              IVIFGEN_VAL_OPERATE_BURST
#define HP33120A_VAL_OPERATE_GATE               (IVIFGEN_VAL_OP_MODE_SPECIFIC_EXT_BASE + 1L)
#define HP33120A_VAL_OPERATE_SWEEP              (IVIFGEN_VAL_OP_MODE_SPECIFIC_EXT_BASE + 2L)

/*- Define values for attribute HP33120A_ATTR_OUTPUT_POLARITY-----------*/
#define HP33120A_VAL_POLARITY_NORMAL            (IVIFGEN_VAL_OP_MODE_SPECIFIC_EXT_BASE + 3L)
#define HP33120A_VAL_POLARITY_INVERTED          (IVIFGEN_VAL_OP_MODE_SPECIFIC_EXT_BASE + 4L)

/*- Define values for attribute HP33120A_ATTR_OUTPUT_TRIGGER_ENABLED----*/
#define HP33120A_VAL_OUTPUT_TRIGGER_NEGATIVE    (IVIFGEN_VAL_TRIG_SRC_SPECIFIC_EXT_BASE + 1000L)
#define HP33120A_VAL_OUTPUT_TRIGGER_POSITIVE    (IVIFGEN_VAL_TRIG_SRC_SPECIFIC_EXT_BASE + 1001L)

/*- Define values for attribute HP33120A_ATTR_TRIGGER_SLOPE-------------*/
#define HP33120A_VAL_TRIGGER_NEGATIVE           (IVIFGEN_VAL_TRIG_SRC_SPECIFIC_EXT_BASE + 1002L)
#define HP33120A_VAL_TRIGGER_POSITIVE           (IVIFGEN_VAL_TRIG_SRC_SPECIFIC_EXT_BASE + 1003L)

/*- Define values for attribute HP33120A_ATTR_BURST_GATE_POLARITY-------*/
#define HP33120A_VAL_BURST_GATE_NORMAL          1
#define HP33120A_VAL_BURST_GATE_INVERTED        2

/*- Defined values for attribute HP33120A_ATTR_BURST_MODE -*/
#define HP33120A_VAL_BURST_MODE_TRIGGERED       1
#define HP33120A_VAL_BURST_MODE_GATED           2

/*- Define values for attribute HP33120A_ATTR_VOLT_RANGE_AUTO-----------*/
#define HP33120A_VAL_RANGE_AUTO_ON              0
#define HP33120A_VAL_RANGE_AUTO_OFF             1

/*- Define values for attribute HP33120A_ATTR_FSK_SOURCE-----------*/
#define HP33120A_VAL_FSK_INTERNAL               0
#define HP33120A_VAL_FSK_EXTERNAL               1

/*- Define values for attribute HP33120A_ATTR_BURST_SOURCE-----------*/
#define HP33120A_VAL_BURST_INTERNAL             0
#define HP33120A_VAL_BURST_EXTERNAL             1

/*- Define values for attribute HP33120A_ATTR_MEMORY_AUTO_RECALL_ENALBED------------*/
#define HP33120A_VAL_MEMORY_AUTO_RECALL_ON      0
#define HP33120A_VAL_MEMORY_AUTO_RECALL_OFF     1


/****************************************************************************
 *---------------- Instrument Driver Function Declarations -----------------*
 ****************************************************************************/

/*- Init and Close Functions -------------------------------------------*/

ViStatus _VI_FUNC  hp33120a_init (ViRsrc resourceName, ViBoolean IDQuery,
                                  ViBoolean resetDevice, ViSession *vi);
ViStatus _VI_FUNC  hp33120a_InitWithOptions (ViRsrc resourceName, ViBoolean IDQuery,
                                             ViBoolean resetDevice, ViConstString optionString,
                                             ViSession *newVi);
ViStatus _VI_FUNC  hp33120a_close (ViSession vi);

/*- Coercion Functions --------------------------------------------------*/
ViStatus _VI_FUNC  hp33120a_GetNextCoercionRecord (ViSession vi, ViInt32 bufferSize, ViChar record[]);

/*- Locking Functions --------------------------------------------------*/

ViStatus _VI_FUNC  hp33120a_LockSession (ViSession vi, ViBoolean *callerHasLock);
ViStatus _VI_FUNC  hp33120a_UnlockSession (ViSession vi, ViBoolean *callerHasLock);

/*- Basic Instrument Operation -----------------------------------------*/

ViStatus _VI_FUNC hp33120a_ConfigureSyncSignal (ViSession vi, ViBoolean enable);

ViStatus _VI_FUNC hp33120a_ConfigureOutputPolarity (ViSession vi,
                                                    ViConstString channelName,
                                                    ViInt32 polarity);

ViStatus _VI_FUNC hp33120a_ConfigureVoltAutoRanging (ViSession vi, ViInt32 autoRange);

ViStatus _VI_FUNC hp33120a_PhaseUnlockErrorState (ViSession vi, ViBoolean lock);

ViStatus _VI_FUNC hp33120a_ConfigureOperationMode (ViSession vi,
                                                   ViConstString channelName,
                                                   ViInt32 operationMode);

ViStatus _VI_FUNC hp33120a_ConfigureOutputMode (ViSession vi, ViInt32 outputMode);

ViStatus _VI_FUNC hp33120a_ConfigureRefClockSource (ViSession vi,
                                                    ViInt32 refClockSource);

ViStatus _VI_FUNC hp33120a_ConfigureOutputImpedance (ViSession vi,
                                                     ViConstString channelName,
                                                     ViReal64 outputImpedance);

ViStatus _VI_FUNC hp33120a_InitiateGeneration (ViSession vi);

ViStatus _VI_FUNC hp33120a_AbortGeneration (ViSession vi);


ViStatus _VI_FUNC hp33120a_ConfigureOutputEnabled (ViSession vi,
                                                   ViChar channelName[],
                                                   ViBoolean outputEnabled);

/*- Standard Function Output --------------------------------------------*/

ViStatus _VI_FUNC hp33120a_ConfigureRampSymmetry (ViSession vi,
                                                  ViConstString channelName,
                                                  ViReal64 rampSymmetry);

ViStatus _VI_FUNC hp33120a_ConfigurePulse (ViSession vi,
                                           ViConstString channelName,
                                           ViReal64 pulsePeriod,
                                           ViReal64 pulseWidth,
                                           ViReal64 pulseTransition);

ViStatus _VI_FUNC hp33120a_ConfigureSquareDutyCycle (ViSession vi,
                                                     ViConstString channelName,
                                                     ViReal64 dutyCycle);

ViStatus _VI_FUNC hp33120a_ConfigureStandardWaveform (ViSession vi,
                                                      ViConstString channelName,
                                                      ViInt32 waveform,
                                                      ViReal64 amplitude,
                                                      ViReal64 dcOffset,
                                                      ViReal64 frequency,
                                                      ViReal64 startPhase);

ViStatus _VI_FUNC hp33120a_ConfigurePulseHold (ViSession vi,
                                               ViInt32 hold);

ViStatus _VI_FUNC hp33120a_ConfigurePulseDutyCycle (ViSession vi,
                                                    ViReal64 dutyCycle);


/*- Arbitrary Waveform Output -------------------------------------------*/

ViStatus _VI_FUNC hp33120a_QueryArbWfmCapabilities (ViSession vi,
                                                    ViInt32 *maxNumWfms,
                                                    ViInt32 *wfmQuantum,
                                                    ViInt32 *minWfmSize,
                                                    ViInt32 *maxWfmSize);

ViStatus _VI_FUNC hp33120a_QueryArbWfmProperties (ViSession vi,
                                                  ViInt32 wfmHandle,
                                                  ViReal64* average,
                                                  ViReal64* crestFactor);

ViStatus _VI_FUNC  hp33120a_CreateArbWaveform (ViSession vi,
                                               ViInt32 wfmSize,
                                               ViReal64 wfmData[],
                                               ViInt32 *wfmHandle);

ViStatus _VI_FUNC  hp33120a_ConfigureSampleRate (ViSession vi, ViReal64 sampleRate);

ViStatus _VI_FUNC  hp33120a_ConfigureArbWaveform (ViSession vi,
                                                  ViConstString channelName,
                                                  ViInt32 wfmHandle,
                                                  ViReal64 arbGain,
                                                  ViReal64 arbOffset);

ViStatus _VI_FUNC  hp33120a_ClearArbWaveform (ViSession vi, ViInt32 wfmHandle);

ViStatus _VI_FUNC hp33120a_GetWfmNameFromHandle (ViSession vi, ViInt32 wfmHandle,
                                                 ViInt32 arraySize, ViChar wfmName[]);
ViStatus _VI_FUNC hp33120a_GetWfmHandleFromName (ViSession vi, ViConstString wfmName,
                                                 ViInt32 *wfmHandle);
ViStatus _VI_FUNC hp33120a_GetWfmNames (ViSession vi, ViInt32 arraySize, ViChar wfmNames[]);

/*- Arbitrary Frequency -------------------------------------------------*/

ViStatus _VI_FUNC hp33120a_ConfigureArbFrequency (ViSession vi,
                                                  ViConstString channelName,
                                                  ViReal64 frequency);

/*- Amplitude Modulation ------------------------------------------------*/

ViStatus _VI_FUNC hp33120a_ConfigureAMEnabled (ViSession vi,
                                               ViConstString channelName,
                                               ViBoolean enabled);

ViStatus _VI_FUNC hp33120a_ConfigureAMSource (ViSession vi,
                                              ViConstString channelName,
                                              ViInt32 source);

ViStatus _VI_FUNC  hp33120a_ConfigureAMInternal (ViSession vi, ViReal64 amDepth,
                                                 ViInt32 amWaveform, ViReal64 amFrequency);

/*- Frequency Modulation ------------------------------------------------*/

ViStatus _VI_FUNC hp33120a_ConfigureFMEnabled (ViSession vi,
                                               ViConstString channelName,
                                               ViBoolean FMEnabled);

ViStatus _VI_FUNC hp33120a_ConfigureFMSource (ViSession vi,
                                              ViConstString channelName,
                                              ViInt32 source);

ViStatus _VI_FUNC  hp33120a_ConfigureFMInternal (ViSession vi,
                                                 ViReal64 fmDeviation,
                                                 ViInt32 fmWaveform,
                                                 ViReal64 fmFrequency);

/*- Phase Modulation --------------------------------------------------*/

ViStatus _VI_FUNC hp33120a_ConfigurePMEnabled (ViSession vi,
                                               ViConstString channelName,
                                               ViBoolean PMEnabled);

ViStatus _VI_FUNC hp33120a_ConfigurePMSource (ViSession vi,
                                              ViConstString channelName,
                                              ViInt32 source);

ViStatus _VI_FUNC  hp33120a_ConfigurePMInternal (ViSession vi,
                                                 ViReal64 pmDeviation,
                                                 ViInt32 pmWaveform,
                                                 ViReal64 pmFrequency);

/*- Pulse Width Modulation ---------------------------------------------*/

ViStatus _VI_FUNC hp33120a_ConfigurePWMEnabled (ViSession vi,
                                                ViConstString channelName,
                                                ViBoolean PWMEnabled);

ViStatus _VI_FUNC hp33120a_ConfigurePWMSource (ViSession vi,
                                               ViConstString channelName,
                                               ViInt32 source);

ViStatus _VI_FUNC  hp33120a_ConfigurePWMInternal (ViSession vi,
                                                  ViReal64 pwmDeviation,
                                                  ViInt32 pwmWaveform,
                                                  ViReal64 pwmFrequency,
                                                  ViReal64 pwmDutyCycleDev);

/*- Frequency Shift Key Modulation -------------------------------------*/

ViStatus _VI_FUNC hp33120a_ConfigureFSKEnabled (ViSession vi,
                                                ViConstString channelName,
                                                ViBoolean FSKEnabled);

ViStatus _VI_FUNC hp33120a_ConfigureFSKSource (ViSession vi,
                                               ViConstString channelName,
                                               ViInt32 source);

ViStatus _VI_FUNC hp33120a_ConfigureFSKHopFrequency (ViSession vi,
                                                     ViReal64 hopFrequency);

ViStatus _VI_FUNC hp33120a_ConfigureFSKInternal (ViSession vi, ViReal64 fskRate);


/*- Frequency Sweep -----------------------------------------*/

ViStatus _VI_FUNC hp33120a_ConfigureSweep (ViSession vi,
                                           ViInt32 sweepSpacing, ViReal64 startFreq,
                                           ViReal64 stopFreq, ViReal64 sweepTime);

ViStatus _VI_FUNC hp33120a_ConfigureSweepCenterSpan (ViSession instrumentHandle,
                                                     ViInt32 spacing, ViReal64 centerFrequency_Hz,
                                                     ViReal64 frequencySpan_Hz, ViReal64 sweepTime_s);

ViStatus _VI_FUNC hp33120a_SweepMarkerEnabled (ViSession vi, ViConstString channelName, ViBoolean sweepMark);


ViStatus _VI_FUNC hp33120a_ConfigureSweepMarkerFreq (ViSession vi,
                                                     ViConstString channelName,
                                                     ViReal64 markerFreq);

/*- Burst ---------------------------------------------------*/

ViStatus _VI_FUNC hp33120a_ConfigureBurstCount (ViSession vi,
                                                ViConstString channelName,
                                                ViInt32 burstCount);

ViStatus _VI_FUNC hp33120a_ConfigureBurstPhase (ViSession vi, ViReal64 phase);

ViStatus _VI_FUNC hp33120a_ConfigureBurstGatePolarity (ViSession vi, ViConstString channelName, ViInt32 gatePolarity);

ViStatus _VI_FUNC hp33120a_ConfigureBurstMode (ViSession instrumentHandle,
                                               ViConstString channelName,
                                               ViInt32 mode);

/*- Triggering -----------------------------------------------*/

ViStatus _VI_FUNC hp33120a_ConfigureTriggerSource (ViSession vi,
                                                   ViConstString channelName,
                                                   ViInt32 source);
ViStatus _VI_FUNC hp33120a_ConfigureOutputTriggerSlope (ViSession vi,
                                                        ViInt32 slope);

ViStatus _VI_FUNC hp33120a_ConfigureTriggerSlope (ViSession vi,
                                                  ViConstString channelName,
                                                  ViInt32 slope);

ViStatus _VI_FUNC hp33120a_ConfigureTriggerDelay (ViSession vi,
                                                  ViConstString channelName,
                                                  ViReal64 delay);

ViStatus _VI_FUNC hp33120a_OutputTriggerEnabled (ViSession vi, ViBoolean outputTrig);

ViStatus _VI_FUNC hp33120a_ConfigureInternalTriggerRate (ViSession vi, ViReal64 rate);

/*- Synchronizing HPE1441A instrument with other instrument --*/

ViStatus _VI_FUNC hp33120a_ConfigureTTLLineEnabled (ViSession vi,
                                                    ViInt32 Line, ViBoolean state);

ViStatus _VI_FUNC hp33120a_ConfigurePhaseRef (ViSession instrumentHandle,
                                              ViReal64 phaseReference);

ViStatus _VI_FUNC hp33120a_ConfigurePhaseAdjust (ViSession instrumentHandle,
                                                 ViReal64 phaseAdjust);

/*- Error Functions ----------------------------------------------------*/
ViStatus _VI_FUNC  hp33120a_error_query (ViSession vi, ViInt32 *errorCode,
                                         ViChar errorMessage[]);
ViStatus _VI_FUNC hp33120a_error_message (ViSession vi, ViStatus errorCode,
                                          ViChar errorMessage[256]);
ViStatus _VI_FUNC hp33120a_GetError (ViSession vi,
                                     ViStatus *errorCode,
                                     ViInt32 bufferSize,
                                     ViChar description[]);
ViStatus _VI_FUNC  hp33120a_ClearError (ViSession vi);

/*- Channel Info Functions ---------------------------------------------*/
ViStatus _VI_FUNC hp33120a_GetChannelName (ViSession vi, ViInt32 index,
                                           ViInt32 bufferSize,
                                           ViChar name[]);

/*- Interchangeability Checking Functions ------------------------------*/
ViStatus _VI_FUNC hp33120a_GetNextInterchangeWarning (ViSession vi,
                                                      ViInt32 bufferSize,
                                                      ViChar warnString[]);
ViStatus _VI_FUNC hp33120a_ResetInterchangeCheck (ViSession vi);
ViStatus _VI_FUNC hp33120a_ClearInterchangeWarnings (ViSession vi);

/*- Utility Functions --------------------------------------------------*/
ViStatus _VI_FUNC hp33120a_VoltAutoRangingOnce (ViSession vi);
ViStatus _VI_FUNC hp33120a_InvalidateAllAttributes (ViSession vi);
ViStatus _VI_FUNC hp33120a_ResetWithDefaults (ViSession vi);
ViStatus _VI_FUNC hp33120a_Disable (ViSession vi);
ViStatus _VI_FUNC hp33120a_SendSoftwareTrigger (ViSession vi);
ViStatus _VI_FUNC hp33120a_SendExternalTrigger (ViSession vi);
ViStatus _VI_FUNC hp33120a_reset (ViSession vi);
ViStatus _VI_FUNC hp33120a_self_test (ViSession vi, ViInt16 *selfTestResult,
                                      ViChar selfTestMessage[]);
ViStatus _VI_FUNC hp33120a_revision_query (ViSession vi,
                                           ViChar instrumentDriverRevision[],
                                           ViChar firmwareRevision[]);
/*- System Functions ----------------------------------------------------*/
ViStatus _VI_FUNC hp33120a_viWrite (ViSession vi, ViByte buffer[], ViInt64 count, ViInt64 *returnCount);
ViStatus _VI_FUNC hp33120a_viRead (ViSession vi, ViInt64 bufferSize, ViByte buffer[], ViInt64 *returnCount);
/*- State Storage Functions --------------------------------------------------*/
ViStatus _VI_FUNC hp33120a_AutoRecallEnabled (ViSession instrumentHandle,
                                              ViConstString channelName,
                                              ViInt32 enabled);

ViStatus _VI_FUNC hp33120a_SetMemoryStateName (ViSession vi,
                                               ViConstString locationNum,
                                               ViChar stateName[]);
ViStatus _VI_FUNC hp33120a_SaveInstrState (ViSession vi,
                                           ViConstString locationNum);
ViStatus _VI_FUNC hp33120a_RecallInstrState (ViSession vi,
                                             ViConstString locationNum);
ViStatus _VI_FUNC hp33120a_DeleteMemoryStateContent (ViSession vi,
                                                     ViConstString locationNum);
ViStatus _VI_FUNC hp33120a_QueryMemoryValidState (ViSession vi,
                                                  ViConstString locationNum,
                                                  ViInt32 *validState);
ViStatus _VI_FUNC hp33120a_QueryMemoryInfo (ViSession vi,
                                            ViInt32* availableSlots,
                                            ViChar stateCatalog[]);
ViStatus _VI_FUNC hp33120a_QueryArbWfmMemoryInfo (ViSession vi,
                                                  ViInt32* freeSlotsNum,
                                                  ViChar wfmCatalog[]);
ViStatus _VI_FUNC hp33120a_QuerySCPISettings (ViSession vi,
                                              ViChar learnString[]);

/*- Set, Get, and Check Attribute Functions ----------------------------*/

ViStatus _VI_FUNC  hp33120a_GetAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 *value);
ViStatus _VI_FUNC  hp33120a_GetAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 *value);
ViStatus _VI_FUNC  hp33120a_GetAttributeViString (ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 bufSize, ViChar value[]);
ViStatus _VI_FUNC  hp33120a_GetAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession *value);
ViStatus _VI_FUNC  hp33120a_GetAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean *value);

ViStatus _VI_FUNC  hp33120a_SetAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 value);
ViStatus _VI_FUNC  hp33120a_SetAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 value);
ViStatus _VI_FUNC  hp33120a_SetAttributeViString (ViSession vi, ViConstString channelName, ViAttr attributeId, ViConstString value);
ViStatus _VI_FUNC  hp33120a_SetAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession value);
ViStatus _VI_FUNC  hp33120a_SetAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean value);

ViStatus _VI_FUNC  hp33120a_CheckAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 value);
ViStatus _VI_FUNC  hp33120a_CheckAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 value);
ViStatus _VI_FUNC  hp33120a_CheckAttributeViString (ViSession vi, ViConstString channelName, ViAttr attributeId, ViConstString value);
ViStatus _VI_FUNC  hp33120a_CheckAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession value);
ViStatus _VI_FUNC  hp33120a_CheckAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean value);

/*********************************************************
 *  Functions reserved for class driver use only.
 *  End-users should not call these functions.
 *********************************************************/
ViStatus _VI_FUNC  hp33120a_IviInit (ViRsrc resourceName, ViBoolean IDQuery,
                                     ViBoolean reset, ViSession vi);
ViStatus _VI_FUNC  hp33120a_IviClose (ViSession vi);


/****************************************************************************
 *------------------------ Error And Completion Codes ----------------------*
 ****************************************************************************/

#define HP33120A_ERROR_NO_WFMS_AVAILABLE       IVIFGEN_ERROR_NO_WFMS_AVAILABLE
#define HP33120A_ERROR_WFM_IN_USE              IVIFGEN_ERROR_WFM_IN_USE
#define HP33120A_ERROR_TRIGGER_NOT_SOFTWARE    IVIFGEN_ERROR_TRIGGER_NOT_SOFTWARE
#define HP33120A_ERROR_INVALID_WAVEFORM        (IVI_SPECIFIC_ERROR_BASE + 1L)
#define HP33120A_ERROR_INVALID_MODE            (IVI_SPECIFIC_ERROR_BASE + 2L)
#define HP33120A_ERROR_INVALID_WFM_LENGTH      (IVI_SPECIFIC_ERROR_BASE + 3L)
#define HP33120A_ERROR_INVALID_WFM_ELEMENT     (IVI_SPECIFIC_ERROR_BASE + 4L)


/****************************************************************************
 *--------- Obsolete Inherent Instrument Attributes and functions ----------*
 ****************************************************************************/
/*- These attributes and functions have been deprecated and may not
 *  be supported in future versions of this driver. -*/

/* Driver Information  */
#define HP33120A_ATTR_SPECIFIC_DRIVER_MAJOR_VERSION    IVI_ATTR_SPECIFIC_DRIVER_MAJOR_VERSION /* ViInt32,  read-only  */
#define HP33120A_ATTR_SPECIFIC_DRIVER_MINOR_VERSION    IVI_ATTR_SPECIFIC_DRIVER_MINOR_VERSION /* ViInt32,  read-only  */

/* Error Info */
#define HP33120A_ATTR_PRIMARY_ERROR                    IVI_ATTR_PRIMARY_ERROR               /* ViInt32   */
#define HP33120A_ATTR_SECONDARY_ERROR                  IVI_ATTR_SECONDARY_ERROR             /* ViInt32   */
#define HP33120A_ATTR_ERROR_ELABORATION                IVI_ATTR_ERROR_ELABORATION           /* ViString  */

/* Advanced Session Information */
#define HP33120A_ATTR_IO_SESSION_TYPE                  IVI_ATTR_IO_SESSION_TYPE             /* ViString, read-only  */
#define HP33120A_ATTR_IO_SESSION                       IVI_ATTR_IO_SESSION                  /* ViSession, read-only */

/*- Deprecated Attribute Identifiers for Renamed Attributes -*/
#define HP33120A_ATTR_NUM_CHANNELS                     HP33120A_ATTR_CHANNEL_COUNT           /* ViInt32,  read-only  */
#define HP33120A_ATTR_QUERY_INSTR_STATUS               HP33120A_ATTR_QUERY_INSTRUMENT_STATUS /* ViBoolean */
#define HP33120A_ATTR_RESOURCE_DESCRIPTOR              HP33120A_ATTR_IO_RESOURCE_DESCRIPTOR  /* ViString, read-only  */

/*- Deprecated Error Information functions -*/

ViStatus _VI_FUNC hp33120a_GetErrorInfo (ViSession vi, ViStatus * primaryError,
                                         ViStatus * secondaryError,
                                         ViChar errorElaboration[256]);
ViStatus _VI_FUNC  hp33120a_ClearErrorInfo (ViSession vi);

/*- Obsolete Direct IO Functions ---------------------------------------*/
ViStatus _VI_FUNC hp33120a_WriteInstrData (ViSession vi, ViConstString writeBuffer);
ViStatus _VI_FUNC hp33120a_ReadInstrData (ViSession vi, ViInt32 numBytes,
                                          ViChar rdBuf[], ViInt32 *bytesRead);

/****************************************************************************
 *---------------------------- End Include File ----------------------------*
 ****************************************************************************/
#if defined(__cplusplus) || defined(__cplusplus__)
}
#endif
#endif /* __HP33120A_HEADER */
