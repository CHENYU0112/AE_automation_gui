/******************************************************************************
 *
 * Copyright Keysight Technologies 2005-2014
 *
 *****************************************************************************/

#ifndef __AG34410_HEADER
#define __AG34410_HEADER

#include <ivivisatype.h>

#if defined(__cplusplus) || defined(__cplusplus__)
extern "C" {
#endif

/****************************************************************************
 *---------------------------- Attribute Defines ---------------------------*
 ****************************************************************************/
#ifndef IVI_ATTR_BASE
#define IVI_ATTR_BASE                 1000000
#endif

#ifndef IVI_INHERENT_ATTR_BASE
#define IVI_INHERENT_ATTR_BASE        (IVI_ATTR_BASE +  50000)   /* base for inherent capability attributes */
#endif

#ifndef IVI_CLASS_ATTR_BASE
#define IVI_CLASS_ATTR_BASE           (IVI_ATTR_BASE + 250000)   /* base for IVI-defined class attributes */
#endif

#ifndef IVI_LXISYNC_ATTR_BASE
#define IVI_LXISYNC_ATTR_BASE         (IVI_ATTR_BASE + 950000)   /* base for IviLxiSync attributes */
#endif

#ifndef IVI_SPECIFIC_ATTR_BASE
#define IVI_SPECIFIC_ATTR_BASE        (IVI_ATTR_BASE + 150000)   /* base for attributes of specific drivers */
#endif


/*===== IVI Inherent Instrument Attributes ==============================*/

/*- Driver Identification */

#define AG34410_ATTR_SPECIFIC_DRIVER_DESCRIPTION              (IVI_INHERENT_ATTR_BASE + 514L)  /* ViString, read-only */
#define AG34410_ATTR_SPECIFIC_DRIVER_PREFIX                   (IVI_INHERENT_ATTR_BASE + 302L)  /* ViString, read-only */
#define AG34410_ATTR_SPECIFIC_DRIVER_VENDOR                   (IVI_INHERENT_ATTR_BASE + 513L)  /* ViString, read-only */
#define AG34410_ATTR_SPECIFIC_DRIVER_REVISION                 (IVI_INHERENT_ATTR_BASE + 551L)  /* ViString, read-only */
#define AG34410_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION (IVI_INHERENT_ATTR_BASE + 515L)  /* ViInt32, read-only */
#define AG34410_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION (IVI_INHERENT_ATTR_BASE + 516L)  /* ViInt32, read-only */

/*- User Options */

#define AG34410_ATTR_RANGE_CHECK                            (IVI_INHERENT_ATTR_BASE + 2L)  /* ViBoolean, read-write */
#define AG34410_ATTR_QUERY_INSTRUMENT_STATUS                (IVI_INHERENT_ATTR_BASE + 3L)  /* ViBoolean, read-write */
#define AG34410_ATTR_CACHE                                  (IVI_INHERENT_ATTR_BASE + 4L)  /* ViBoolean, read-write */
#define AG34410_ATTR_SIMULATE                               (IVI_INHERENT_ATTR_BASE + 5L)  /* ViBoolean, read-write */
#define AG34410_ATTR_RECORD_COERCIONS                       (IVI_INHERENT_ATTR_BASE + 6L)  /* ViBoolean, read-write */
#define AG34410_ATTR_INTERCHANGE_CHECK                      (IVI_INHERENT_ATTR_BASE + 21L)  /* ViBoolean, read-write */

/*- Advanced Session Information */

#define AG34410_ATTR_LOGICAL_NAME                           (IVI_INHERENT_ATTR_BASE + 305L)  /* ViString, read-only */
#define AG34410_ATTR_IO_RESOURCE_DESCRIPTOR                 (IVI_INHERENT_ATTR_BASE + 304L)  /* ViString, read-only */
#define AG34410_ATTR_DRIVER_SETUP                           (IVI_INHERENT_ATTR_BASE + 7L)  /* ViString, read-only */

/*- Driver Capabilities */

#define AG34410_ATTR_GROUP_CAPABILITIES                     (IVI_INHERENT_ATTR_BASE + 401L)  /* ViString, read-only */
#define AG34410_ATTR_SUPPORTED_INSTRUMENT_MODELS            (IVI_INHERENT_ATTR_BASE + 327L)  /* ViString, read-only */

/*- Instrument Identification */

#define AG34410_ATTR_INSTRUMENT_FIRMWARE_REVISION           (IVI_INHERENT_ATTR_BASE + 510L)  /* ViString, read-only */
#define AG34410_ATTR_INSTRUMENT_MANUFACTURER                (IVI_INHERENT_ATTR_BASE + 511L)  /* ViString, read-only */
#define AG34410_ATTR_INSTRUMENT_MODEL                       (IVI_INHERENT_ATTR_BASE + 512L)  /* ViString, read-only */


/*===== Instrument-Specific Attributes =====================================*/

/*- Basic Operation */

#define AG34410_ATTR_FUNCTION                               (IVI_CLASS_ATTR_BASE + 1L)  /* ViInt32, read-write */
#define AG34410_ATTR_RANGE                                  (IVI_CLASS_ATTR_BASE + 2L)  /* ViReal64, read-write */
#define AG34410_ATTR_RESOLUTION_ABSOLUTE                    (IVI_CLASS_ATTR_BASE + 8L)  /* ViReal64, read-write */

/*- AC Measurements */

#define AG34410_ATTR_AC_MAX_FREQ                            (IVI_CLASS_ATTR_BASE + 7L)  /* ViReal64, read-write */
#define AG34410_ATTR_AC_MIN_FREQ                            (IVI_CLASS_ATTR_BASE + 6L)  /* ViReal64, read-write */

/*- Configuration Information */

#define AG34410_ATTR_APERTURE_TIME                          (IVI_CLASS_ATTR_BASE + 321L)  /* ViReal64, read-only */
#define AG34410_ATTR_APERTURE_TIME_UNITS                    (IVI_CLASS_ATTR_BASE + 322L)  /* ViInt32, read-only */

/*- Measurement Operation Options */

#define AG34410_ATTR_AUTO_ZERO                              (IVI_CLASS_ATTR_BASE + 332L)  /* ViInt32, read-write */
#define AG34410_ATTR_POWERLINE_FREQ                         (IVI_CLASS_ATTR_BASE + 333L)  /* ViReal64, read-write */

/*- Frequency Measurements */

#define AG34410_ATTR_FREQ_VOLTAGE_RANGE                     (IVI_CLASS_ATTR_BASE + 101L)  /* ViReal64, read-write */

/*- Multi-Point Acquisition */

#define AG34410_ATTR_TRIGGER_COUNT                          (IVI_CLASS_ATTR_BASE + 304L)  /* ViInt32, read-write */
#define AG34410_ATTR_MEAS_COMPLETE_DEST                     (IVI_CLASS_ATTR_BASE + 305L)  /* ViInt32, read-write */
#define AG34410_ATTR_SAMPLE_COUNT                           (IVI_CLASS_ATTR_BASE + 301L)  /* ViInt32, read-write */
#define AG34410_ATTR_SAMPLE_INTERVAL                        (IVI_CLASS_ATTR_BASE + 303L)  /* ViReal64, read-write */
#define AG34410_ATTR_SAMPLE_TRIGGER                         (IVI_CLASS_ATTR_BASE + 302L)  /* ViInt32, read-write */

/*- Temperature Measurements */

#define AG34410_ATTR_TEMP_TRANSDUCER_TYPE                   (IVI_CLASS_ATTR_BASE + 201L)  /* ViInt32, read-write */

/*- Resistance Temperature Device */

#define AG34410_ATTR_TEMP_RTD_ALPHA                         (IVI_CLASS_ATTR_BASE + 241L)  /* ViReal64, read-write */
#define AG34410_ATTR_TEMP_RTD_RES                           (IVI_CLASS_ATTR_BASE + 242L)  /* ViReal64, read-write */

/*- Thermistor */

#define AG34410_ATTR_TEMP_THERMISTOR_RES                    (IVI_CLASS_ATTR_BASE + 251L)  /* ViReal64, read-write */

/*- Trigger */

#define AG34410_ATTR_TRIGGER_DELAY                          (IVI_CLASS_ATTR_BASE + 5L)  /* ViReal64, read-write */
#define AG34410_ATTR_TRIGGER_SLOPE                          (IVI_CLASS_ATTR_BASE + 334L)  /* ViInt32, read-write */
#define AG34410_ATTR_TRIGGER_SOURCE                         (IVI_CLASS_ATTR_BASE + 4L)  /* ViInt32, read-write */

/*- Limits */

#define AG34410_ATTR_LOWER_LIMIT                            (IVI_SPECIFIC_ATTR_BASE + 1L)  /* ViReal64, read-write */
#define AG34410_ATTR_UPPER_LIMIT                            (IVI_SPECIFIC_ATTR_BASE + 3L)  /* ViReal64, read-write */

/*- Math */

#define AG34410_ATTR_RELATIVE_REFERENCE_MATH                (IVI_SPECIFIC_ATTR_BASE + 5L)  /* ViReal64, read-write */
#define AG34410_ATTR_REFERENCE_VALUE_MATH                   (IVI_SPECIFIC_ATTR_BASE + 7L)  /* ViInt32, read-write */
#define AG34410_ATTR_NULL_VALUE_MATH                        (IVI_SPECIFIC_ATTR_BASE + 9L)  /* ViReal64, read-write */
#define AG34410_ATTR_FUNCTION_MATH                          (IVI_SPECIFIC_ATTR_BASE + 11L)  /* ViInt32, read-write */
#define AG34410_ATTR_ENABLE_MATH                            (IVI_SPECIFIC_ATTR_BASE + 13L)  /* ViBoolean, read-write */

/*- Statistics */

#define AG34410_ATTR_AVERAGE                                (IVI_SPECIFIC_ATTR_BASE + 15L)  /* ViReal64, read-only */
#define AG34410_ATTR_COUNT                                  (IVI_SPECIFIC_ATTR_BASE + 17L)  /* ViReal64, read-only */
#define AG34410_ATTR_MAX_VALUE                              (IVI_SPECIFIC_ATTR_BASE + 19L)  /* ViReal64, read-only */
#define AG34410_ATTR_MIN_VALUE                              (IVI_SPECIFIC_ATTR_BASE + 21L)  /* ViReal64, read-only */
#define AG34410_ATTR_PT_PEAK                                (IVI_SPECIFIC_ATTR_BASE + 23L)  /* ViReal64, read-only */
#define AG34410_ATTR_STANDARD_DEVIATION                     (IVI_SPECIFIC_ATTR_BASE + 25L)  /* ViReal64, read-only */

/*- Calibration */

#define AG34410_ATTR_COUNT_CAL                              (IVI_SPECIFIC_ATTR_BASE + 27L)  /* ViInt32, read-only */
#define AG34410_ATTR_POWER_LINE_REFERENCE_FREQUENCY_CAL     (IVI_SPECIFIC_ATTR_BASE + 29L)  /* ViInt32, read-write */
#define AG34410_ATTR_CODE                                   (IVI_SPECIFIC_ATTR_BASE + 31L)  /* ViString, write-only */
#define AG34410_ATTR_SECURITY_STATE                         (IVI_SPECIFIC_ATTR_BASE + 33L)  /* ViBoolean, read-only */
#define AG34410_ATTR_MESSAGE                                (IVI_SPECIFIC_ATTR_BASE + 35L)  /* ViString, read-write */
#define AG34410_ATTR_VALUE                                  (IVI_SPECIFIC_ATTR_BASE + 37L)  /* ViReal64, read-write */
#define AG34410_ATTR_CALIBRATION_POWER_LINE_FREQUENCY       (IVI_SPECIFIC_ATTR_BASE + 39L)  /* ViReal64, read-only */

/*- Capacitance */

#define AG34410_ATTR_NULL_STATE_CAP                         (IVI_SPECIFIC_ATTR_BASE + 41L)  /* ViBoolean, read-write */
#define AG34410_ATTR_NULL_VALUE_CAP                         (IVI_SPECIFIC_ATTR_BASE + 43L)  /* ViReal64, read-write */
#define AG34410_ATTR_AUTO_RANGE_CAP                         (IVI_SPECIFIC_ATTR_BASE + 45L)  /* ViInt32, read-write */
#define AG34410_ATTR_RANGE_CAP                              (IVI_SPECIFIC_ATTR_BASE + 47L)  /* ViReal64, read-write */

/*- ACCurrent */

#define AG34410_ATTR_NULL_STATE_AC_CURR                     (IVI_SPECIFIC_ATTR_BASE + 49L)  /* ViBoolean, read-write */
#define AG34410_ATTR_NULL_VALUE_AC_CURR                     (IVI_SPECIFIC_ATTR_BASE + 51L)  /* ViReal64, read-write */
#define AG34410_ATTR_BANDWIDTH_AC_CURR                      (IVI_SPECIFIC_ATTR_BASE + 53L)  /* ViReal64, read-write */
#define AG34410_ATTR_AUTO_RANGE_AC_CURR                     (IVI_SPECIFIC_ATTR_BASE + 55L)  /* ViInt32, read-write */
#define AG34410_ATTR_RANGE_AC_CURR                          (IVI_SPECIFIC_ATTR_BASE + 57L)  /* ViReal64, read-write */

/*- DCCurrent */

#define AG34410_ATTR_NULL_STATE_DC_CURR                     (IVI_SPECIFIC_ATTR_BASE + 59L)  /* ViBoolean, read-write */
#define AG34410_ATTR_NULL_VALUE_DC_CURR                     (IVI_SPECIFIC_ATTR_BASE + 61L)  /* ViReal64, read-write */
#define AG34410_ATTR_AUTO_RANGE_DC_CURR                     (IVI_SPECIFIC_ATTR_BASE + 63L)  /* ViInt32, read-write */
#define AG34410_ATTR_APERTURE_DC_CURR                       (IVI_SPECIFIC_ATTR_BASE + 65L)  /* ViReal64, read-write */
#define AG34410_ATTR_APERTURE_TIME_MODE_DC_CURR             (IVI_SPECIFIC_ATTR_BASE + 67L)  /* ViBoolean, read-only */
#define AG34410_ATTR_NPLC_DC_CURR                           (IVI_SPECIFIC_ATTR_BASE + 69L)  /* ViReal64, read-write */
#define AG34410_ATTR_RANGE_DC_CURR                          (IVI_SPECIFIC_ATTR_BASE + 71L)  /* ViReal64, read-write */
#define AG34410_ATTR_RESOLUTION_DC_CURR                     (IVI_SPECIFIC_ATTR_BASE + 73L)  /* ViReal64, read-write */
#define AG34410_ATTR_AUTO_ZERO_DC_CURR                      (IVI_SPECIFIC_ATTR_BASE + 75L)  /* ViInt32, read-write */
#define AG34410_ATTR_CURRENT_DCCURRENT_MAX_PEAK_DC_CURR     (IVI_SPECIFIC_ATTR_BASE + 77L)  /* ViReal64, read-only */
#define AG34410_ATTR_CURRENT_DCCURRENT_MIN_PEAK_DC_CURR     (IVI_SPECIFIC_ATTR_BASE + 79L)  /* ViReal64, read-only */
#define AG34410_ATTR_CURRENT_DCCURRENT_PEAK_STATE_DC_CURR   (IVI_SPECIFIC_ATTR_BASE + 81L)  /* ViBoolean, read-write */
#define AG34410_ATTR_CURRENT_DCCURRENT_PEAK_TO_PEAK_DC_CURR (IVI_SPECIFIC_ATTR_BASE + 83L)  /* ViReal64, read-only */

/*- Frequency */

#define AG34410_ATTR_NULL_STATE_FREQ                        (IVI_SPECIFIC_ATTR_BASE + 85L)  /* ViBoolean, read-write */
#define AG34410_ATTR_NULL_VALUE_FREQ                        (IVI_SPECIFIC_ATTR_BASE + 87L)  /* ViReal64, read-write */
#define AG34410_ATTR_AUTO_RANGE_FREQ                        (IVI_SPECIFIC_ATTR_BASE + 89L)  /* ViInt32, read-write */
#define AG34410_ATTR_APERTURE_FREQ                          (IVI_SPECIFIC_ATTR_BASE + 91L)  /* ViReal64, read-write */
#define AG34410_ATTR_LOW_RANGE_FREQ                         (IVI_SPECIFIC_ATTR_BASE + 93L)  /* ViReal64, read-write */
#define AG34410_ATTR_VOLTAGE_RANGE_FREQ                     (IVI_SPECIFIC_ATTR_BASE + 95L)  /* ViReal64, read-write */

/*- Period */

#define AG34410_ATTR_NULL_STATE_PERIOD                      (IVI_SPECIFIC_ATTR_BASE + 97L)  /* ViBoolean, read-write */
#define AG34410_ATTR_NULL_VALUE_PERIOD                      (IVI_SPECIFIC_ATTR_BASE + 99L)  /* ViReal64, read-write */
#define AG34410_ATTR_AUTO_RANGE_PERIOD                      (IVI_SPECIFIC_ATTR_BASE + 101L)  /* ViInt32, read-write */
#define AG34410_ATTR_APERTURE_PERIOD                        (IVI_SPECIFIC_ATTR_BASE + 103L)  /* ViReal64, read-write */
#define AG34410_ATTR_LOW_RANGE_PERIOD                       (IVI_SPECIFIC_ATTR_BASE + 105L)  /* ViReal64, read-write */
#define AG34410_ATTR_VOLTAGE_RANGE_PERIOD                   (IVI_SPECIFIC_ATTR_BASE + 107L)  /* ViReal64, read-write */

/*- Resistance */

#define AG34410_ATTR_NULL_STATE_RES                         (IVI_SPECIFIC_ATTR_BASE + 109L)  /* ViBoolean, read-write */
#define AG34410_ATTR_NULL_VALUE_RES                         (IVI_SPECIFIC_ATTR_BASE + 111L)  /* ViReal64, read-write */
#define AG34410_ATTR_AUTO_RANGE_RES                         (IVI_SPECIFIC_ATTR_BASE + 113L)  /* ViInt32, read-write */
#define AG34410_ATTR_AUTO_ZERO_RES                          (IVI_SPECIFIC_ATTR_BASE + 115L)  /* ViInt32, read-write */
#define AG34410_ATTR_APERTURE_RES                           (IVI_SPECIFIC_ATTR_BASE + 117L)  /* ViReal64, read-write */
#define AG34410_ATTR_APERTURE_TIME_MODE_RES                 (IVI_SPECIFIC_ATTR_BASE + 119L)  /* ViBoolean, read-only */
#define AG34410_ATTR_NPLC_RES                               (IVI_SPECIFIC_ATTR_BASE + 121L)  /* ViReal64, read-write */
#define AG34410_ATTR_O_COMPENSATED_RES                      (IVI_SPECIFIC_ATTR_BASE + 123L)  /* ViBoolean, read-write */
#define AG34410_ATTR_RANGE_RES                              (IVI_SPECIFIC_ATTR_BASE + 125L)  /* ViReal64, read-write */
#define AG34410_ATTR_RESOLUTION_RES                         (IVI_SPECIFIC_ATTR_BASE + 127L)  /* ViReal64, read-write */

/*- Temperature */

#define AG34410_ATTR_NULL_STATE                             (IVI_SPECIFIC_ATTR_BASE + 129L)  /* ViBoolean, read-write */
#define AG34410_ATTR_NULL_VALUE                             (IVI_SPECIFIC_ATTR_BASE + 131L)  /* ViReal64, read-write */
#define AG34410_ATTR_AUTO_ZERO_TEMP                         (IVI_SPECIFIC_ATTR_BASE + 133L)  /* ViInt32, read-write */
#define AG34410_ATTR_APERTURE                               (IVI_SPECIFIC_ATTR_BASE + 135L)  /* ViReal64, read-write */
#define AG34410_ATTR_APERTURE_TIME_MODE                     (IVI_SPECIFIC_ATTR_BASE + 137L)  /* ViBoolean, read-only */
#define AG34410_ATTR_NPLC                                   (IVI_SPECIFIC_ATTR_BASE + 139L)  /* ViReal64, read-write */
#define AG34410_ATTR_TEMPERATURE_TRANSDUCER_TYPE            (IVI_SPECIFIC_ATTR_BASE + 141L)  /* ViInt32, read-write */
#define AG34410_ATTR_READING_UNITS                          (IVI_SPECIFIC_ATTR_BASE + 143L)  /* ViInt32, read-write */

/*- RTD */

#define AG34410_ATTR_O_COMPENSATED_RTD                      (IVI_SPECIFIC_ATTR_BASE + 183L)  /* ViBoolean, read-write */
#define AG34410_ATTR_RESISTANCE_RTD                         (IVI_SPECIFIC_ATTR_BASE + 185L)  /* ViReal64, read-write */

/*- FRTD */

#define AG34410_ATTR_O_COMPENSATED_FRTD                     (IVI_SPECIFIC_ATTR_BASE + 187L)  /* ViBoolean, read-write */
#define AG34410_ATTR_RESISTANCE_FRTD                        (IVI_SPECIFIC_ATTR_BASE + 189L)  /* ViReal64, read-write */

/*- Thermistor */

#define AG34410_ATTR_TYPE_THERM                             (IVI_SPECIFIC_ATTR_BASE + 191L)  /* ViInt32, read-write */

/*- FThermistor */

#define AG34410_ATTR_TYPE_FTHERM                            (IVI_SPECIFIC_ATTR_BASE + 278L)  /* ViInt32, read-write */

/*- ACVoltage */

#define AG34410_ATTR_AUTO_RANGE_AC_VOLT                     (IVI_SPECIFIC_ATTR_BASE + 145L)  /* ViInt32, read-write */
#define AG34410_ATTR_BANDWIDTH_AC_VOLT                      (IVI_SPECIFIC_ATTR_BASE + 147L)  /* ViReal64, read-write */
#define AG34410_ATTR_NULL_STATE_AC_VOLT                     (IVI_SPECIFIC_ATTR_BASE + 149L)  /* ViBoolean, read-write */
#define AG34410_ATTR_NULL_VALUE_AC_VOLT                     (IVI_SPECIFIC_ATTR_BASE + 151L)  /* ViReal64, read-write */
#define AG34410_ATTR_RANGE_AC_VOLT                          (IVI_SPECIFIC_ATTR_BASE + 153L)  /* ViReal64, read-write */

/*- DCVoltage */

#define AG34410_ATTR_NULL_STATE_DC_VOLT                     (IVI_SPECIFIC_ATTR_BASE + 155L)  /* ViBoolean, read-write */
#define AG34410_ATTR_NULL_VALUE_DC_VOLT                     (IVI_SPECIFIC_ATTR_BASE + 157L)  /* ViReal64, read-write */
#define AG34410_ATTR_AUTO_RANGE_DC_VOLT                     (IVI_SPECIFIC_ATTR_BASE + 159L)  /* ViInt32, read-write */
#define AG34410_ATTR_AUTO_IMPEDANCE_DC_VOLT                 (IVI_SPECIFIC_ATTR_BASE + 161L)  /* ViBoolean, read-write */
#define AG34410_ATTR_APERTURE_TIME_MODE_DC_VOLT             (IVI_SPECIFIC_ATTR_BASE + 163L)  /* ViBoolean, read-only */
#define AG34410_ATTR_NPLC_DC_VOLT                           (IVI_SPECIFIC_ATTR_BASE + 165L)  /* ViReal64, read-write */
#define AG34410_ATTR_RANGE_DC_VOLT                          (IVI_SPECIFIC_ATTR_BASE + 167L)  /* ViReal64, read-write */
#define AG34410_ATTR_RESOLUTION_DC_VOLT                     (IVI_SPECIFIC_ATTR_BASE + 169L)  /* ViReal64, read-write */
#define AG34410_ATTR_AUTO_ZERO_DC_VOLT                      (IVI_SPECIFIC_ATTR_BASE + 171L)  /* ViInt32, read-write */
#define AG34410_ATTR_APERTURE_DC_VOLT                       (IVI_SPECIFIC_ATTR_BASE + 173L)  /* ViReal64, read-write */
#define AG34410_ATTR_VOLTAGE_DCVOLTAGE_MAX_PEAK_DC_VOLT     (IVI_SPECIFIC_ATTR_BASE + 175L)  /* ViReal64, read-only */
#define AG34410_ATTR_VOLTAGE_DCVOLTAGE_MIN_PEAK_DC_VOLT     (IVI_SPECIFIC_ATTR_BASE + 177L)  /* ViReal64, read-only */
#define AG34410_ATTR_VOLTAGE_DCVOLTAGE_PEAK_STATE_DC_VOLT   (IVI_SPECIFIC_ATTR_BASE + 179L)  /* ViBoolean, read-write */
#define AG34410_ATTR_VOLTAGE_DCVOLTAGE_PEAK_TO_PEAK_DC_VOLT (IVI_SPECIFIC_ATTR_BASE + 181L)  /* ViReal64, read-only */

/*- Measurement */

#define AG34410_ATTR_MEASUREMENT_FUNCTION                   (IVI_SPECIFIC_ATTR_BASE + 194L)  /* ViInt32, read-write */
#define AG34410_ATTR_BANDWIDTH_MEAS                         (IVI_SPECIFIC_ATTR_BASE + 196L)  /* ViReal64, read-write */
#define AG34410_ATTR_AUTO_ZERO_MEAS                         (IVI_SPECIFIC_ATTR_BASE + 198L)  /* ViInt32, read-write */

/*- System */

#define AG34410_ATTR_READING_THRESHOLD                      (IVI_SPECIFIC_ATTR_BASE + 200L)  /* ViInt32, read-write */
#define AG34410_ATTR_BEEPER_STATE                           (IVI_SPECIFIC_ATTR_BASE + 202L)  /* ViBoolean, read-write */
#define AG34410_ATTR_ACTUAL_POWER_LINE_FREQUENCY            (IVI_SPECIFIC_ATTR_BASE + 204L)  /* ViReal64, read-only */
#define AG34410_ATTR_POWER_LINE_REFERENCE_FREQUENCY         (IVI_SPECIFIC_ATTR_BASE + 206L)  /* ViReal64, read-only */
#define AG34410_ATTR_LOCK_OWNER                             (IVI_SPECIFIC_ATTR_BASE + 210L)  /* ViString, read-only */
#define AG34410_ATTR_SERIAL_NUMBER                          (IVI_SPECIFIC_ATTR_BASE + 212L)  /* ViString, read-only */
#define AG34410_ATTR_TIMEOUT_MILLISECONDS                   (IVI_SPECIFIC_ATTR_BASE + 214L)  /* ViInt32, read-write */
#define AG34410_ATTR_SCPI_VERSION                           (IVI_SPECIFIC_ATTR_BASE + 216L)  /* ViString, read-only */
#define AG34410_ATTR_SYSTEM_COMPATIBILITY_MODE              (IVI_SPECIFIC_ATTR_BASE + 218L)  /* ViInt32, read-write */

/*- Display */

#define AG34410_ATTR_DISPLAY_FEED                           (IVI_SPECIFIC_ATTR_BASE + 222L)  /* ViInt32, read-write */

/*- DataFormat */

#define AG34410_ATTR_DATA_FORMAT                            (IVI_SPECIFIC_ATTR_BASE + 224L)  /* ViInt32, read-write */

/*- FResistance */

#define AG34410_ATTR_NULL_STATE_FRRES                       (IVI_SPECIFIC_ATTR_BASE + 228L)  /* ViBoolean, read-write */
#define AG34410_ATTR_NULL_VALUE_FRRES                       (IVI_SPECIFIC_ATTR_BASE + 230L)  /* ViReal64, read-write */
#define AG34410_ATTR_AUTO_RANGE_FRRES                       (IVI_SPECIFIC_ATTR_BASE + 232L)  /* ViInt32, read-write */
#define AG34410_ATTR_APERTURE_FRRES                         (IVI_SPECIFIC_ATTR_BASE + 234L)  /* ViReal64, read-write */
#define AG34410_ATTR_APERTURE_TIME_MODE_FRRES               (IVI_SPECIFIC_ATTR_BASE + 236L)  /* ViBoolean, read-only */
#define AG34410_ATTR_NPLC_FRRES                             (IVI_SPECIFIC_ATTR_BASE + 238L)  /* ViReal64, read-write */
#define AG34410_ATTR_O_COMPENSATED_FRRES                    (IVI_SPECIFIC_ATTR_BASE + 240L)  /* ViBoolean, read-write */
#define AG34410_ATTR_RANGE_FRRES                            (IVI_SPECIFIC_ATTR_BASE + 242L)  /* ViReal64, read-write */
#define AG34410_ATTR_RESOLUTION_FRRES                       (IVI_SPECIFIC_ATTR_BASE + 244L)  /* ViReal64, read-write */

/*- Memory */

#define AG34410_ATTR_NUM_STATES                             (IVI_SPECIFIC_ATTR_BASE + 246L)  /* ViInt32, read-only */
#define AG34410_ATTR_CATALOG                                (IVI_SPECIFIC_ATTR_BASE + 248L)  /* ViString, read-only */
#define AG34410_ATTR_AUTO_RECALL                            (IVI_SPECIFIC_ATTR_BASE + 250L)  /* ViBoolean, read-write */
#define AG34410_ATTR_AUTO_RECALL_STATE                      (IVI_SPECIFIC_ATTR_BASE + 252L)  /* ViInt32, read-write */

/*- Trigger */

#define AG34410_ATTR_SAMPLE_COUNT_TRIG                      (IVI_SPECIFIC_ATTR_BASE + 254L)  /* ViInt32, read-write */
#define AG34410_ATTR_SAMPLE_SOURCE_TRIG                     (IVI_SPECIFIC_ATTR_BASE + 256L)  /* ViInt32, read-write */
#define AG34410_ATTR_SAMPLE_INTERVAL_TRIG                   (IVI_SPECIFIC_ATTR_BASE + 258L)  /* ViReal64, read-write */
#define AG34410_ATTR_TRIGGER_COUNT_TRIG                     (IVI_SPECIFIC_ATTR_BASE + 260L)  /* ViInt32, read-write */
#define AG34410_ATTR_TRIGGER_DELAY_TRIG                     (IVI_SPECIFIC_ATTR_BASE + 262L)  /* ViReal64, read-write */
#define AG34410_ATTR_TRIGGER_DELAY_AUTO_TRIG                (IVI_SPECIFIC_ATTR_BASE + 264L)  /* ViBoolean, read-write */
#define AG34410_ATTR_TRIGGER_SLOPE_TRIG                     (IVI_SPECIFIC_ATTR_BASE + 266L)  /* ViInt32, read-write */
#define AG34410_ATTR_TRIGGER_SOURCE_TRIG                    (IVI_SPECIFIC_ATTR_BASE + 268L)  /* ViInt32, read-write */
#define AG34410_ATTR_TRIGGER_PRE_TRIGGER_COUNT              (IVI_SPECIFIC_ATTR_BASE + 270L)  /* ViInt32, read-write */
#define AG34410_ATTR_TRIGGER_TRIGGER_LEVEL_TRIG             (IVI_SPECIFIC_ATTR_BASE + 272L)  /* ViReal64, read-write */
#define AG34410_ATTR_TRIGGER_OUTPUT_TRIGGER_SLOPE           (IVI_SPECIFIC_ATTR_BASE + 274L)  /* ViInt32, read-write */

/*- Status */

#define AG34410_ATTR_SERIAL_POLL                            (IVI_SPECIFIC_ATTR_BASE + 276L)  /* ViInt32, read-only */

/*- System */

#define AG34410_ATTR_SYSTEM_IO_TIMEOUT                      (IVI_SPECIFIC_ATTR_BASE + 279L)  /* ViInt32, read-write */


/****************************************************************************
 *------------------------ Attribute Value Defines -------------------------*
 ****************************************************************************/

/*- Defined values for
	attribute AG34410_ATTR_FUNCTION
	parameter Function in function Ag34410_ConfigureMeasurement */

#define AG34410_VAL_DC_VOLTS                                1
#define AG34410_VAL_AC_VOLTS                                2
#define AG34410_VAL_DC_CURRENT                              3
#define AG34410_VAL_AC_CURRENT                              4
#define AG34410_VAL_2_WIRE_RES                              5
#define AG34410_VAL_4_WIRE_RES                              101
#define AG34410_VAL_FREQ                                    104
#define AG34410_VAL_PERIOD                                  105
#define AG34410_VAL_AC_PLUS_DC_VOLTS                        106
#define AG34410_VAL_AC_PLUS_DC_CURRENT                      107
#define AG34410_VAL_TEMPERATURE                             108

/*- Defined values for
	attribute AG34410_ATTR_APERTURE_TIME_UNITS
	parameter ApertureTimeUnits in function Ag34410_GetApertureTimeInfo */

#define AG34410_VAL_SECONDS                                 0
#define AG34410_VAL_POWER_LINE_CYCLES                       1

/*- Defined values for
	attribute AG34410_ATTR_AUTO_ZERO
	parameter AutoZeroMode in function Ag34410_ConfigureAutoZeroMode */

#define AG34410_VAL_AUTO_ZERO_OFF                           0
#define AG34410_VAL_AUTO_ZERO_ON                            1
#define AG34410_VAL_AUTO_ZERO_ONCE                          2

/*- Defined values for
	attribute AG34410_ATTR_TEMP_TRANSDUCER_TYPE
	parameter TransducerType in function Ag34410_ConfigureTransducerType */

#define AG34410_VAL_THERMISTOR                              2
#define AG34410_VAL_2_WIRE_RTD                              3
#define AG34410_VAL_4_WIRE_RTD                              4

/*- Defined values for */

#define AG34410_VAL_TEMP_TC_B                               1
#define AG34410_VAL_TEMP_TC_C                               2
#define AG34410_VAL_TEMP_TC_D                               3
#define AG34410_VAL_TEMP_TC_E                               4
#define AG34410_VAL_TEMP_TC_G                               5
#define AG34410_VAL_TEMP_TC_J                               6
#define AG34410_VAL_TEMP_TC_K                               7
#define AG34410_VAL_TEMP_TC_N                               8
#define AG34410_VAL_TEMP_TC_R                               9
#define AG34410_VAL_TEMP_TC_S                               10
#define AG34410_VAL_TEMP_TC_T                               11
#define AG34410_VAL_TEMP_TC_U                               12
#define AG34410_VAL_TEMP_TC_V                               13

/*- Defined values for */

#define AG34410_VAL_TEMP_REF_JUNC_INTERNAL                  1
#define AG34410_VAL_TEMP_REF_JUNC_FIXED                     2

/*- Defined values for
	attribute AG34410_ATTR_TRIGGER_SOURCE
	parameter TriggerSource in function Ag34410_ConfigureTrigger */

#define AG34410_VAL_IMMEDIATE                               1
#define AG34410_VAL_EXTERNAL                                2
#define AG34410_VAL_SOFTWARE_TRIG                           3

/*- Defined values for
	attribute AG34410_ATTR_TRIGGER_SLOPE
	parameter Polarity in function Ag34410_ConfigureTriggerSlope */

#define AG34410_VAL_POSITIVE                                0
#define AG34410_VAL_NEGATIVE                                1

/*- Defined values for
	attribute AG34410_ATTR_SAMPLE_TRIGGER
	parameter SampleTrigger in function Ag34410_ConfigureMultiPoint */

#define AG34410_VAL_IMMEDIATE                               1
#define AG34410_VAL_INTERVAL                                10

/*- Defined values for
	attribute AG34410_ATTR_MEAS_COMPLETE_DEST
	parameter MeasCompleteDest in function Ag34410_ConfigureMeasCompleteDest */

#define AG34410_VAL_EXTERNAL                                2

/*- Defined values for */

#define AG34410_VAL_AUTO_RANGE_ONCE                         -3
#define AG34410_VAL_AUTO_RANGE_OFF                          -2
#define AG34410_VAL_AUTO_RANGE_ON                           -1

/*- Defined values for */

#define AG34410_VAL_AUTO_RANGE_OFF                          -2
#define AG34410_VAL_AUTO_RANGE_ON                           -1

/*- Defined values for */

#define AG34410_VAL_MAX_TIME_IMMEDIATE                      0
#define AG34410_VAL_MAX_TIME_INFINITE                       -1

/*- Defined values for */

#define AG34410_VAL_AUTO_DELAY_OFF                          -2
#define AG34410_VAL_AUTO_DELAY_ON                           -1

/*- Defined values for
	attribute AG34410_ATTR_REFERENCE_VALUE_MATH */

#define AG34410_VAL_REFERENCE_LEVEL_OHMS50                  0
#define AG34410_VAL_REFERENCE_LEVEL_OHMS75                  1
#define AG34410_VAL_REFERENCE_LEVEL_OHMS93                  2
#define AG34410_VAL_REFERENCE_LEVEL_OHMS110                 3
#define AG34410_VAL_REFERENCE_LEVEL_OHMS124                 4
#define AG34410_VAL_REFERENCE_LEVEL_OHMS125                 5
#define AG34410_VAL_REFERENCE_LEVEL_OHMS135                 6
#define AG34410_VAL_REFERENCE_LEVEL_OHMS150                 7
#define AG34410_VAL_REFERENCE_LEVEL_OHMS250                 8
#define AG34410_VAL_REFERENCE_LEVEL_OHMS300                 9
#define AG34410_VAL_REFERENCE_LEVEL_OHMS500                 10
#define AG34410_VAL_REFERENCE_LEVEL_OHMS600                 11
#define AG34410_VAL_REFERENCE_LEVEL_OHMS800                 12
#define AG34410_VAL_REFERENCE_LEVEL_OHMS900                 13
#define AG34410_VAL_REFERENCE_LEVEL_OHMS1000                14
#define AG34410_VAL_REFERENCE_LEVEL_OHMS1200                15
#define AG34410_VAL_REFERENCE_LEVEL_OHMS8000                16

/*- Defined values for
	attribute AG34410_ATTR_FUNCTION_MATH */

#define AG34410_VAL_MATH_FUNCTION_AVERAGE                   0
#define AG34410_VAL_MATH_FUNCTIOND_B                        1
#define AG34410_VAL_MATH_FUNCTIOND_BM                       2
#define AG34410_VAL_MATH_FUNCTION_LIMIT                     3
#define AG34410_VAL_MATH_FUNCTION_NULL                      4

/*- Defined values for
	attribute AG34410_ATTR_POWER_LINE_REFERENCE_FREQUENCY_CAL */

#define AG34410_VAL_POWER_LINE_REFERENCE_FREQUENCY50        0
#define AG34410_VAL_POWER_LINE_REFERENCE_FREQUENCY60        1

/*- Defined values for
	parameter Resolution in function Ag34410_MeasureCap
	parameter Resolution in function Ag34410_ConfigureCap
	parameter Resolution in function Ag34410_ConfigureACCurr
	parameter Resolution in function Ag34410_MeasureACCurr
	parameter Resolution in function Ag34410_ConfigureDCCurr
	parameter Resolution in function Ag34410_MeasureDCCurr
	parameter Resolution in function Ag34410_ConfigureFreq
	parameter Resolution in function Ag34410_MeasureFreq
	parameter Resolution in function Ag34410_ConfigurePeriod
	parameter Resolution in function Ag34410_MeasurePeriod
	parameter Resolution in function Ag34410_ConfigureRes
	parameter Resolution in function Ag34410_MeasureRes
	parameter Resolution in function Ag34410_MeasureRTD1
	parameter Resolution in function Ag34410_ConfigureRTD1
	parameter Resolution in function Ag34410_MeasureFRTD
	parameter Resolution in function Ag34410_ConfigureFRTD
	parameter Resolution in function Ag34410_MeasureTherm
	parameter Resolution in function Ag34410_ConfigureTherm
	parameter Resolution in function Ag34410_ConfigureFTherm
	parameter Resolution in function Ag34410_MeasureFTherm
	parameter Resolution in function Ag34410_MeasureACVolt
	parameter Resolution in function Ag34410_ConfigureACVolt
	parameter Resolution in function Ag34410_MeasureDCVolt
	parameter Resolution in function Ag34410_ConfigureDCVolt
	parameter Resolution in function Ag34410_MeasureFRes
	parameter Resolution in function Ag34410_ConfigureFRes */

#define AG34410_VAL_RESOLUTION_LEAST                        0
#define AG34410_VAL_RESOLUTION_DEFAULT                      1
#define AG34410_VAL_RESOLUTION_BEST                         2

/*- Defined values for
	attribute AG34410_ATTR_DATA_FORMAT */

#define AG34410_VAL_DATA_FORMAT_ASCII                       0
#define AG34410_VAL_DATA_FORMAT_REAL                        1
#define AG34410_VAL_DATA_FORMAT_REAL64                      2

/*- Defined values for
	attribute AG34410_ATTR_TYPE_THERM
	attribute AG34410_ATTR_TYPE_FTHERM
	parameter Type in function Ag34410_MeasureTherm
	parameter Type in function Ag34410_ConfigureTherm
	parameter Type in function Ag34410_ConfigureFTherm
	parameter Type in function Ag34410_MeasureFTherm */

#define AG34410_VAL_THERMISTOR_TYPE2252                     0
#define AG34410_VAL_THERMISTOR_TYPE5000                     1
#define AG34410_VAL_THERMISTOR_TYPE10000                    2

/*- Defined values for
	attribute AG34410_ATTR_AUTO_RECALL_STATE
	parameter LocationNum in function Ag34410_SetLocationName
	parameter LocationNum in function Ag34410_GetLocationName
	parameter LocationNum in function Ag34410_Delete
	parameter LocationNum in function Ag34410_IsValidState
	parameter LocationNum in function Ag34410_MemorySaveState
	parameter LocationNum in function Ag34410_MemoryRecallState */

#define AG34410_VAL_MEMORY_LOCATION0                        0
#define AG34410_VAL_MEMORY_LOCATION1                        1
#define AG34410_VAL_MEMORY_LOCATION2                        2
#define AG34410_VAL_MEMORY_LOCATION3                        3
#define AG34410_VAL_MEMORY_LOCATION4                        4

/*- Defined values for
	attribute AG34410_ATTR_SAMPLE_SOURCE_TRIG */

#define AG34410_VAL_SAMPLE_SOURCE_AUTO                      0
#define AG34410_VAL_SAMPLE_SOURCE_TIMER                     1

/*- Defined values for
	attribute AG34410_ATTR_TRIGGER_SLOPE_TRIG
	attribute AG34410_ATTR_TRIGGER_OUTPUT_TRIGGER_SLOPE */

#define AG34410_VAL_TRIGGER_SLOPE_POSITIVE                  0
#define AG34410_VAL_TRIGGER_SLOPE_NEGATIVE                  1

/*- Defined values for
	attribute AG34410_ATTR_TRIGGER_SOURCE_TRIG */

#define AG34410_VAL_TRIGGER_SOURCE_BUS                      0
#define AG34410_VAL_TRIGGER_SOURCE_IMMEDIATE                1
#define AG34410_VAL_TRIGGER_SOURCE_EXTERNAL                 2
#define AG34410_VAL_TRIGGER_SOURCE_INTERNAL                 3

/*- Defined values for
	attribute AG34410_ATTR_MEASUREMENT_FUNCTION */

#define AG34410_VAL_MEASUREMENT_FUNCTION_AC_CURRENT         2
#define AG34410_VAL_MEASUREMENT_FUNCTION_AC_VOLTAGE         9
#define AG34410_VAL_MEASUREMENT_FUNCTION_CAPACITANCE        0
#define AG34410_VAL_MEASUREMENT_FUNCTION_CONTINUITY         1
#define AG34410_VAL_MEASUREMENT_FUNCTION_DC_CURRENT         3
#define AG34410_VAL_MEASUREMENT_FUNCTION_DC_VOLTAGE         10
#define AG34410_VAL_MEASUREMENT_FUNCTION_DIODE              4
#define AG34410_VAL_MEASUREMENT_FUNCTION_FREQUENCY          5
#define AG34410_VAL_MEASUREMENT_FUNCTION_F_RESISTANCE       6
#define AG34410_VAL_MEASUREMENT_FUNCTION_PERIOD             7
#define AG34410_VAL_MEASUREMENT_FUNCTION_RESISTANCE         8
#define AG34410_VAL_MEASUREMENT_FUNCTION_TEMPERATURE        11

/*- Defined values for
	attribute AG34410_ATTR_TEMPERATURE_TRANSDUCER_TYPE */

#define AG34410_VAL_TRANSDUCER_TYPE_RTD                     0
#define AG34410_VAL_TRANSDUCER_TYPE_FRTD                    1
#define AG34410_VAL_TRANSDUCER_TYPE_THERMISTOR              2

/*- Defined values for
	attribute AG34410_ATTR_READING_UNITS */

#define AG34410_VAL_TEMPERATURE_UNITS_CELCIUS               0
#define AG34410_VAL_TEMPERATURE_UNITS_FAHRENHEIT            1
#define AG34410_VAL_TEMPERATURE_UNITS_KELVIN                2

/*- Defined values for
	parameter Reason in function Ag34410_ConfigureServiceRequest */

#define AG34410_VAL_SRQ_REASON_STB_MAV                      1
#define AG34410_VAL_SRQ_REASON_STB_ERROR_QUE                2
#define AG34410_VAL_SRQ_REASON_ESR_OPC                      4
#define AG34410_VAL_SRQ_REASON_ESR_QUERY_ERROR              8
#define AG34410_VAL_SRQ_REASON_ESR_DEVICE_ERROR             16
#define AG34410_VAL_SRQ_REASON_ESR_EXECUTION_ERROR          32
#define AG34410_VAL_SRQ_REASON_ESR_COMMAND_ERROR            64
#define AG34410_VAL_SRQ_REASON_ESR_POWER_ON                 128
#define AG34410_VAL_SRQ_REASON_QUES_VOLTAGE                 256
#define AG34410_VAL_SRQ_REASON_QUES_CURRENT                 512
#define AG34410_VAL_SRQ_REASON_QUES_SAMPLE_TIMING_VIOLATION 1024
#define AG34410_VAL_SRQ_REASON_QUES_TEMPERATURE             2048
#define AG34410_VAL_SRQ_REASON_QUES_FREQUENCY               4096
#define AG34410_VAL_SRQ_REASON_QUES_CALIBRATION             8192
#define AG34410_VAL_SRQ_REASON_QUES_RESISTANCE              16384
#define AG34410_VAL_SRQ_REASON_QUES_CAPACITANCE             32768
#define AG34410_VAL_SRQ_REASON_QUES_MEMORY                  65536
#define AG34410_VAL_SRQ_REASON_OPER_CALIBRATING             131072
#define AG34410_VAL_SRQ_REASON_OPER_MEASURING               262144
#define AG34410_VAL_SRQ_REASON_OPER_WAITING_FOR_TRIGGER     524288
#define AG34410_VAL_SRQ_REASON_OPER_CONFIG_CHANGE           1048576
#define AG34410_VAL_SRQ_REASON_OPER_MEMORY_THRESHOLD        2097152
#define AG34410_VAL_SRQ_REASON_OPER_INSTRUMENT_LOCKED       4194304
#define AG34410_VAL_SRQ_REASON_OPER_UPPER_LIMIT_FAILED      8388608
#define AG34410_VAL_SRQ_REASON_OPER_LOWER_LIMIT_FAILED      16777216

/*- Defined values for
	parameter HardwareInterface in function Ag34410_EnableInterface
	parameter HardwareInterface in function Ag34410_DisableInterface
	parameter HardwareInterface in function Ag34410_IsInterfaceEnabled */

#define AG34410_VAL_HARDWARE_INTERFACE_GPIB                 0
#define AG34410_VAL_HARDWARE_INTERFACE_USB                  1
#define AG34410_VAL_HARDWARE_INTERFACE_LAN                  2
#define AG34410_VAL_HARDWARE_INTERFACE_SOCKETS              3
#define AG34410_VAL_HARDWARE_INTERFACE_TELNET               4
#define AG34410_VAL_HARDWARE_INTERFACE_VXI11                5
#define AG34410_VAL_HARDWARE_INTERFACE_WEB                  6

/*- Defined values for
	parameter Register in function Ag34410_GetRegister
	parameter Register in function Ag34410_SetRegister */

#define AG34410_VAL_STATUS_REGISTER_STATUS_BYTE             0
#define AG34410_VAL_STATUS_REGISTER_STANDARD_EVENT          1
#define AG34410_VAL_STATUS_REGISTER_OPERATION               2
#define AG34410_VAL_STATUS_REGISTER_QUESTIONABLE            3

/*- Defined values for
	parameter SubRegister in function Ag34410_GetRegister
	parameter SubRegister in function Ag34410_SetRegister */

#define AG34410_VAL_STATUS_SUB_REGISTER_CONDITION           0
#define AG34410_VAL_STATUS_SUB_REGISTER_EVENT               1
#define AG34410_VAL_STATUS_SUB_REGISTER_ENABLE              2
#define AG34410_VAL_                                        3
#define AG34410_VAL_STATUS_SUB_REGISTER_POSITIVE_TRANSITION 4

/*- Defined values for
	attribute AG34410_ATTR_DISPLAY_FEED */

#define AG34410_VAL_DISPLAY_FEED_AVERAGE                    0
#define AG34410_VAL_DISPLAY_FEED_MINIMUM                    1
#define AG34410_VAL_DISPLAY_FEED_MAXIMUM                    2
#define AG34410_VAL_DISPLAY_FEED_STANDARD_DEVIATION         3
#define AG34410_VAL_DISPLAY_FEED_COUNT                      4
#define AG34410_VAL_DISPLAY_FEED_VOLTAGEAC_PEAK_TO_PEAK     5
#define AG34410_VAL_DISPLAY_FEED_VOLTAGE_PEAK_HI            6
#define AG34410_VAL_DISPLAY_FEED_VOLTAGE_PEAK_LOW           7
#define AG34410_VAL_DISPLAY_FEED_VOLTAGE_PEAK_TO_PEAK       8
#define AG34410_VAL_DISPLAY_FEED_CURRENT_PEAK_HI            9
#define AG34410_VAL_DISPLAY_FEED_CURRENT_PEAK_LO            10
#define AG34410_VAL_DISPLAY_FEED_CURRENT_PEAK_TO_PEAK       11
#define AG34410_VAL_DISPLAY_FEED_AC_VOLTAGE                 12
#define AG34410_VAL_DISPLAY_FEED_RESISTANCE                 13
#define AG34410_VAL_DISPLAY_FEED_F_RESISTANCE               14
#define AG34410_VAL_DISPLAY_FEED_CURRENTAC_PEAK_TO_PEAK     15

/*- Defined values for
	attribute AG34410_ATTR_SYSTEM_COMPATIBILITY_MODE */

#define AG34410_VAL_COMPATIBILITY_MODE34401A                0
#define AG34410_VAL_COMPATIBILITY_MODE34410A                1
#define AG34410_VAL_COMPATIBILITY_MODE34411A                2

/*- Defined values for
	parameter MemoryType in function Ag34410_READING_COUNT */

#define AG34410_VAL_MEMORY_TYPE_READING_MEMORY              0
#define AG34410_VAL_MEMORY_TYPE_NON_VOLATILE_MEMORY         1

/*- Defined values for
	attribute AG34410_ATTR_AUTO_ZERO_DC_CURR
	attribute AG34410_ATTR_AUTO_ZERO_RES
	attribute AG34410_ATTR_AUTO_ZERO_TEMP
	attribute AG34410_ATTR_AUTO_ZERO_DC_VOLT
	attribute AG34410_ATTR_AUTO_ZERO_MEAS */

#define AG34410_VAL_AUTO_ZERO_OFF                           0
#define AG34410_VAL_AUTO_ZERO_ON                            1
#define AG34410_VAL_AUTO_ZERO_ONCE                          2

/*- Defined values for
	attribute AG34410_ATTR_AUTO_RANGE_CAP
	attribute AG34410_ATTR_AUTO_RANGE_AC_CURR
	attribute AG34410_ATTR_AUTO_RANGE_DC_CURR
	attribute AG34410_ATTR_AUTO_RANGE_FREQ
	attribute AG34410_ATTR_AUTO_RANGE_PERIOD
	attribute AG34410_ATTR_AUTO_RANGE_RES
	attribute AG34410_ATTR_AUTO_RANGE_AC_VOLT
	attribute AG34410_ATTR_AUTO_RANGE_DC_VOLT
	attribute AG34410_ATTR_AUTO_RANGE_FRRES */

#define AG34410_VAL_AUTO_RANGE_OFF                          -2
#define AG34410_VAL_AUTO_RANGE_ON                           -1
#define AG34410_VAL_AUTO_RANGE_ONCE                         -3


/****************************************************************************
 *---------------- Instrument Driver Function Declarations -----------------*
 ****************************************************************************/

/*- Agilent34410 */

ViStatus _VI_FUNC Ag34410_init ( ViRsrc ResourceName, ViBoolean IdQuery, ViBoolean Reset, ViSession* Vi );
ViStatus _VI_FUNC Ag34410_close ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_InitWithOptions ( ViRsrc ResourceName, ViBoolean IdQuery, ViBoolean Reset, ViConstString OptionsString, ViSession* Vi );

/*- Utility */

ViStatus _VI_FUNC Ag34410_revision_query ( ViSession Vi, ViChar DriverRev[], ViChar InstrRev[] );
ViStatus _VI_FUNC Ag34410_error_message ( ViSession Vi, ViStatus ErrorCode, ViChar ErrorMessage[] );
ViStatus _VI_FUNC Ag34410_GetError ( ViSession Vi, ViStatus* ErrorCode, ViInt32 ErrorDescriptionBufferSize, ViChar ErrorDescription[] );
ViStatus _VI_FUNC Ag34410_ClearError ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_ClearInterchangeWarnings ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_GetNextCoercionRecord ( ViSession Vi, ViInt32 CoercionRecordBufferSize, ViChar CoercionRecord[] );
ViStatus _VI_FUNC Ag34410_GetNextInterchangeWarning ( ViSession Vi, ViInt32 InterchangeWarningBufferSize, ViChar InterchangeWarning[] );
ViStatus _VI_FUNC Ag34410_InvalidateAllAttributes ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_ResetInterchangeCheck ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_Disable ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_error_query ( ViSession Vi, ViInt32* ErrorCode, ViChar ErrorMessage[] );
ViStatus _VI_FUNC Ag34410_LockSession ( ViSession Vi, ViBoolean* CallerHasLock );
ViStatus _VI_FUNC Ag34410_reset ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_ResetWithDefaults ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_self_test ( ViSession Vi, ViInt16* TestResult, ViChar TestMessage[] );
ViStatus _VI_FUNC Ag34410_UnlockSession ( ViSession Vi, ViBoolean* CallerHasLock );

/*- Attribute Accessors */

ViStatus _VI_FUNC Ag34410_GetAttributeViInt32 ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt32* AttributeValue );
ViStatus _VI_FUNC Ag34410_GetAttributeViInt64 ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt64* AttributeValue );
ViStatus _VI_FUNC Ag34410_GetAttributeViReal64 ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViReal64* AttributeValue );
ViStatus _VI_FUNC Ag34410_GetAttributeViBoolean ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViBoolean* AttributeValue );
ViStatus _VI_FUNC Ag34410_GetAttributeViSession ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViSession* AttributeValue );
ViStatus _VI_FUNC Ag34410_GetAttributeViString ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt32 AttributeValueBufferSize, ViChar AttributeValue[] );
ViStatus _VI_FUNC Ag34410_SetAttributeViInt32 ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt32 AttributeValue );
ViStatus _VI_FUNC Ag34410_SetAttributeViInt64 ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViInt64 AttributeValue );
ViStatus _VI_FUNC Ag34410_SetAttributeViReal64 ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViReal64 AttributeValue );
ViStatus _VI_FUNC Ag34410_SetAttributeViBoolean ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViBoolean AttributeValue );
ViStatus _VI_FUNC Ag34410_SetAttributeViSession ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViSession AttributeValue );
ViStatus _VI_FUNC Ag34410_SetAttributeViString ( ViSession Vi, ViConstString RepCapIdentifier, ViAttr AttributeID, ViConstString AttributeValue );

/*- Configuration */

ViStatus _VI_FUNC Ag34410_ConfigureMeasurement ( ViSession Vi, ViInt32 Function, ViReal64 Range, ViReal64 Resolution );

/*- Specific Measurements */

ViStatus _VI_FUNC Ag34410_ConfigureFrequencyVoltageRange ( ViSession Vi, ViReal64 FrequencyVoltageRange );
ViStatus _VI_FUNC Ag34410_ConfigureACBandwidth ( ViSession Vi, ViReal64 MinFreq, ViReal64 MaxFreq );

/*- Temperature */

ViStatus _VI_FUNC Ag34410_ConfigureTransducerType ( ViSession Vi, ViInt32 TransducerType );
ViStatus _VI_FUNC Ag34410_ConfigureThermistor ( ViSession Vi, ViReal64 Resistance );
ViStatus _VI_FUNC Ag34410_ConfigureRTD ( ViSession Vi, ViReal64 Alpha, ViReal64 Resistance );

/*- Trigger */

ViStatus _VI_FUNC Ag34410_ConfigureTriggerSlope ( ViSession Vi, ViInt32 Polarity );
ViStatus _VI_FUNC Ag34410_ConfigureTrigger ( ViSession Vi, ViInt32 TriggerSource, ViReal64 TriggerDelay );

/*- Configuration Information */

ViStatus _VI_FUNC Ag34410_GetApertureTimeInfo ( ViSession Vi, ViReal64* ApertureTime, ViInt32* ApertureTimeUnits );

/*- Measurement Operation Options */

ViStatus _VI_FUNC Ag34410_ConfigureAutoZeroMode ( ViSession Vi, ViInt32 AutoZeroMode );

/*- MultiPoint */

ViStatus _VI_FUNC Ag34410_ConfigureMeasCompleteDest ( ViSession Vi, ViInt32 MeasCompleteDest );
ViStatus _VI_FUNC Ag34410_ConfigureMultiPoint ( ViSession Vi, ViInt32 TriggerCount, ViInt32 SampleCount, ViInt32 SampleTrigger, ViReal64 SampleInterval );

/*- Measurement */

ViStatus _VI_FUNC Ag34410_Read ( ViSession Vi, ViInt32 MaxTimeMilliseconds, ViReal64* Reading );
ViStatus _VI_FUNC Ag34410_ReadMultiPoint ( ViSession Vi, ViInt32 MaxTimeMilliseconds, ViInt32 ArraySize, ViReal64 ReadingArray[], ViInt32* ActualPts );

/*- Low Level Measurement */

ViStatus _VI_FUNC Ag34410_Abort ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_Fetch ( ViSession Vi, ViInt32 MaxTimeMilliseconds, ViReal64* Reading );
ViStatus _VI_FUNC Ag34410_FetchMultiPoint ( ViSession Vi, ViInt32 MaxTimeMilliseconds, ViInt32 ArraySize, ViReal64 ReadingArray[], ViInt32* ActualPts );
ViStatus _VI_FUNC Ag34410_Initiate ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_IsOverRange ( ViSession Vi, ViReal64 MeasurementValue, ViBoolean* IsOverRange );
ViStatus _VI_FUNC Ag34410_SendSoftwareTrigger ( ViSession Vi );

/*- Statistics */

ViStatus _VI_FUNC Ag34410_ClearStatistics ( ViSession Vi );

/*- Calibration */

ViStatus _VI_FUNC Ag34410_PerformCalibration ( ViSession Vi, ViBoolean* RetVal );
ViStatus _VI_FUNC Ag34410_SecurityEnable ( ViSession Vi, ViBoolean Enable, ViConstString Code );
ViStatus _VI_FUNC Ag34410_CalibrationPerformADCCalibration ( ViSession Vi, ViBoolean* RetVal );
ViStatus _VI_FUNC Ag34410_CalibrationStoreCalibrationConstants ( ViSession Vi );

/*- Capacitance */

ViStatus _VI_FUNC Ag34410_MeasureCap ( ViSession Vi, ViReal64 Range, ViInt32 Resolution, ViReal64* RetVal );
ViStatus _VI_FUNC Ag34410_ConfigureCap ( ViSession Vi, ViReal64 Range, ViInt32 Resolution );

/*- Continuity */

ViStatus _VI_FUNC Ag34410_MeasureCon ( ViSession Vi, ViReal64* RetVal );
ViStatus _VI_FUNC Ag34410_ConfigureCon ( ViSession Vi );

/*- ACCurrent */

ViStatus _VI_FUNC Ag34410_ConfigureACCurr ( ViSession Vi, ViReal64 Range, ViInt32 Resolution );
ViStatus _VI_FUNC Ag34410_MeasureACCurr ( ViSession Vi, ViReal64 Range, ViInt32 Resolution, ViReal64* RetVal );

/*- DCCurrent */

ViStatus _VI_FUNC Ag34410_ConfigureDCCurr ( ViSession Vi, ViReal64 Range, ViInt32 Resolution );
ViStatus _VI_FUNC Ag34410_MeasureDCCurr ( ViSession Vi, ViReal64 Range, ViInt32 Resolution, ViReal64* RetVal );

/*- Diode */

ViStatus _VI_FUNC Ag34410_MeasureDiode ( ViSession Vi, ViReal64* RetVal );
ViStatus _VI_FUNC Ag34410_ConfigureDiode ( ViSession Vi );

/*- Frequency */

ViStatus _VI_FUNC Ag34410_ConfigureFreq ( ViSession Vi, ViReal64 Range, ViInt32 Resolution );
ViStatus _VI_FUNC Ag34410_MeasureFreq ( ViSession Vi, ViReal64 Range, ViInt32 Resolution, ViReal64* RetVal );

/*- Period */

ViStatus _VI_FUNC Ag34410_ConfigurePeriod ( ViSession Vi, ViReal64 Range, ViInt32 Resolution );
ViStatus _VI_FUNC Ag34410_MeasurePeriod ( ViSession Vi, ViReal64 Range, ViInt32 Resolution, ViReal64* RetVal );

/*- Resistance */

ViStatus _VI_FUNC Ag34410_ConfigureRes ( ViSession Vi, ViReal64 Range, ViInt32 Resolution );
ViStatus _VI_FUNC Ag34410_MeasureRes ( ViSession Vi, ViReal64 Range, ViInt32 Resolution, ViReal64* RetVal );

/*- RTD */

ViStatus _VI_FUNC Ag34410_MeasureRTD1 ( ViSession Vi, ViInt32 Resolution, ViReal64* RetVal );
ViStatus _VI_FUNC Ag34410_ConfigureRTD1 ( ViSession Vi, ViInt32 Resolution );

/*- FRTD */

ViStatus _VI_FUNC Ag34410_MeasureFRTD ( ViSession Vi, ViInt32 Resolution, ViReal64* RetVal );
ViStatus _VI_FUNC Ag34410_ConfigureFRTD ( ViSession Vi, ViInt32 Resolution );

/*- Thermistor */

ViStatus _VI_FUNC Ag34410_MeasureTherm ( ViSession Vi, ViInt32 Type, ViInt32 Resolution, ViReal64* RetVal );
ViStatus _VI_FUNC Ag34410_ConfigureTherm ( ViSession Vi, ViInt32 Type, ViInt32 Resolution );

/*- FThermistor */

ViStatus _VI_FUNC Ag34410_ConfigureFTherm ( ViSession Vi, ViInt32 Type, ViInt32 Resolution );
ViStatus _VI_FUNC Ag34410_MeasureFTherm ( ViSession Vi, ViInt32 Type, ViInt32 Resolution, ViReal64* RetVal );

/*- ACVoltage */

ViStatus _VI_FUNC Ag34410_MeasureACVolt ( ViSession Vi, ViReal64 Range, ViInt32 Resolution, ViReal64* RetVal );
ViStatus _VI_FUNC Ag34410_ConfigureACVolt ( ViSession Vi, ViReal64 Range, ViInt32 Resolution );

/*- DCVoltage */

ViStatus _VI_FUNC Ag34410_MeasureDCVolt ( ViSession Vi, ViReal64 Range, ViInt32 Resolution, ViReal64* RetVal );
ViStatus _VI_FUNC Ag34410_ConfigureDCVolt ( ViSession Vi, ViReal64 Range, ViInt32 Resolution );

/*- Measurement */

ViStatus _VI_FUNC Ag34410_CopyReadingsMeas ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_DeleteReadingsMeas ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_QueryLastMeas ( ViSession Vi, ViReal64* RetVal );
ViStatus _VI_FUNC Ag34410_RemoveReadingsMeas ( ViSession Vi, ViInt32 NumReadings, ViInt32 RetValBufferSize, ViReal64 RetVal[], ViInt32* RetValActualSize );
ViStatus _VI_FUNC Ag34410_DestructiveReadMeas ( ViSession Vi, ViInt32 MaxCount, ViInt32 RetValBufferSize, ViReal64 RetVal[], ViInt32* RetValActualSize );
ViStatus _VI_FUNC Ag34410_ReadMeas ( ViSession Vi, ViInt32 RetValBufferSize, ViReal64 RetVal[], ViInt32* RetValActualSize );
ViStatus _VI_FUNC Ag34410_InitiateMeas ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_FetchMeas ( ViSession Vi, ViInt32 RetValBufferSize, ViReal64 RetVal[], ViInt32* RetValActualSize );
ViStatus _VI_FUNC Ag34410_AbortMeas ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_MeasurementQueryAllMeas ( ViSession Vi, ViInt32 RetValBufferSize, ViReal64 RetVal[], ViInt32* RetValActualSize );
ViStatus _VI_FUNC Ag34410_READING_COUNT ( ViSession Vi, ViInt32 MemoryType, ViInt32* RetVal );

/*- System */

ViStatus _VI_FUNC Ag34410_Beeper ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_LockKeyboard ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_UnlockKeyboard ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_EnableInterface ( ViSession Vi, ViInt32 HardwareInterface );
ViStatus _VI_FUNC Ag34410_LockRelease ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_LockRequest ( ViSession Vi, ViBoolean* RetVal );
ViStatus _VI_FUNC Ag34410_WaitForOperationComplete ( ViSession Vi, ViInt32 MaxTimeMilliseconds );
ViStatus _VI_FUNC Ag34410_DisableInterface ( ViSession Vi, ViInt32 HardwareInterface );
ViStatus _VI_FUNC Ag34410_IsInterfaceEnabled ( ViSession Vi, ViInt32 HardwareInterface, ViBoolean* RetVal );
ViStatus _VI_FUNC Ag34410_SystemWrite ( ViSession Vi, ViConstString CommandString );
ViStatus _VI_FUNC Ag34410_SystemRead ( ViSession Vi, ViInt32 Size, ViChar Value[], ViInt32* ActualSize );

/*- Display */

ViStatus _VI_FUNC Ag34410_ClearDisplay ( ViSession Vi, ViInt32 DisplayLine );
ViStatus _VI_FUNC Ag34410_DisplayEnabledGet ( ViSession Vi, ViInt32 DisplayLine, ViBoolean* RetVal );
ViStatus _VI_FUNC Ag34410_DisplayEnabledSet ( ViSession Vi, ViInt32 DisplayLine, ViBoolean Val );
ViStatus _VI_FUNC Ag34410_DisplayTextGet ( ViSession Vi, ViInt32 DisplayLine, ViInt32 RetValBufferSize, ViChar RetVal[] );
ViStatus _VI_FUNC Ag34410_DisplayTextSet ( ViSession Vi, ViInt32 DisplayLine, ViConstString Val );

/*- FResistance */

ViStatus _VI_FUNC Ag34410_MeasureFRes ( ViSession Vi, ViReal64 Range, ViInt32 Resolution, ViReal64* RetVal );
ViStatus _VI_FUNC Ag34410_ConfigureFRes ( ViSession Vi, ViReal64 Range, ViInt32 Resolution );

/*- Memory */

ViStatus _VI_FUNC Ag34410_SetLocationName ( ViSession Vi, ViInt32 LocationNum, ViConstString LocationName );
ViStatus _VI_FUNC Ag34410_GetLocationName ( ViSession Vi, ViInt32 LocationNum, ViInt32 RetValBufferSize, ViChar RetVal[] );
ViStatus _VI_FUNC Ag34410_Delete ( ViSession Vi, ViInt32 LocationNum );
ViStatus _VI_FUNC Ag34410_DeleteAll ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_IsValidState ( ViSession Vi, ViInt32 LocationNum, ViBoolean* RetVal );
ViStatus _VI_FUNC Ag34410_MemorySaveState ( ViSession Vi, ViInt32 LocationNum );
ViStatus _VI_FUNC Ag34410_MemoryRecallState ( ViSession Vi, ViInt32 LocationNum );

/*- Status */

ViStatus _VI_FUNC Ag34410_ClearStatus ( ViSession Vi );
ViStatus _VI_FUNC Ag34410_ConfigureServiceRequest ( ViSession Vi, ViInt32 Reason );
ViStatus _VI_FUNC Ag34410_GetRegister ( ViSession Vi, ViInt32 Register, ViInt32 SubRegister, ViInt32* RetVal );
ViStatus _VI_FUNC Ag34410_SetRegister ( ViSession Vi, ViInt32 Register, ViInt32 SubRegister, ViInt32 Val );
ViStatus _VI_FUNC Ag34410_Preset ( ViSession Vi );

/*- System */

ViStatus _VI_FUNC Ag34410_viRead ( ViSession Vi, ViInt64 BufferSize, ViChar Buffer[], ViInt64* ReturnCount );
ViStatus _VI_FUNC Ag34410_SystemReadString ( ViSession Vi, ViInt32 ValBufferSize, ViChar Val[] );
ViStatus _VI_FUNC Ag34410_viWrite ( ViSession Vi, ViInt64 Count, ViChar Buffer[], ViInt64* ReturnCount );
ViStatus _VI_FUNC Ag34410_SystemWriteString ( ViSession Vi, ViConstString Data );


/****************************************************************************
 *----------------- Instrument Error And Completion Codes ------------------*
 ****************************************************************************/
#ifndef _IVIC_ERROR_BASE_DEFINES_
#define _IVIC_ERROR_BASE_DEFINES_

#define IVIC_WARN_BASE                           (0x3FFA0000L)
#define IVIC_CROSS_CLASS_WARN_BASE               (IVIC_WARN_BASE + 0x1000)
#define IVIC_CLASS_WARN_BASE                     (IVIC_WARN_BASE + 0x2000)
#define IVIC_SPECIFIC_WARN_BASE                  (IVIC_WARN_BASE + 0x4000)

#define IVIC_ERROR_BASE                          (0xBFFA0000L)
#define IVIC_CROSS_CLASS_ERROR_BASE              (IVIC_ERROR_BASE + 0x1000)
#define IVIC_CLASS_ERROR_BASE                    (IVIC_ERROR_BASE + 0x2000)
#define IVIC_SPECIFIC_ERROR_BASE                 (IVIC_ERROR_BASE + 0x4000)
#define IVIC_LXISYNC_ERROR_BASE                  (IVIC_ERROR_BASE + 0x2000)

#endif


#define AG34410_ERROR_CANNOT_RECOVER                        (IVIC_ERROR_BASE + 0x0000)
#define AG34410_ERROR_INSTRUMENT_STATUS                     (IVIC_ERROR_BASE + 0x0001)
#define AG34410_ERROR_CANNOT_OPEN_FILE                      (IVIC_ERROR_BASE + 0x0002)
#define AG34410_ERROR_READING_FILE                          (IVIC_ERROR_BASE + 0x0003)
#define AG34410_ERROR_WRITING_FILE                          (IVIC_ERROR_BASE + 0x0004)
#define AG34410_ERROR_INVALID_PATHNAME                      (IVIC_ERROR_BASE + 0x000B)
#define AG34410_ERROR_INVALID_VALUE                         (IVIC_ERROR_BASE + 0x0010)
#define AG34410_ERROR_FUNCTION_NOT_SUPPORTED                (IVIC_ERROR_BASE + 0x0011)
#define AG34410_ERROR_ATTRIBUTE_NOT_SUPPORTED               (IVIC_ERROR_BASE + 0x0012)
#define AG34410_ERROR_VALUE_NOT_SUPPORTED                   (IVIC_ERROR_BASE + 0x0013)
#define AG34410_ERROR_NOT_INITIALIZED                       (IVIC_ERROR_BASE + 0x001D)
#define AG34410_ERROR_UNKNOWN_CHANNEL_NAME                  (IVIC_ERROR_BASE + 0x0020)
#define AG34410_ERROR_TOO_MANY_OPEN_FILES                   (IVIC_ERROR_BASE + 0x0023)
#define AG34410_ERROR_CHANNEL_NAME_REQUIRED                 (IVIC_ERROR_BASE + 0x0044)
#define AG34410_ERROR_MISSING_OPTION_NAME                   (IVIC_ERROR_BASE + 0x0049)
#define AG34410_ERROR_MISSING_OPTION_VALUE                  (IVIC_ERROR_BASE + 0x004A)
#define AG34410_ERROR_BAD_OPTION_NAME                       (IVIC_ERROR_BASE + 0x004B)
#define AG34410_ERROR_BAD_OPTION_VALUE                      (IVIC_ERROR_BASE + 0x004C)
#define AG34410_ERROR_OUT_OF_MEMORY                         (IVIC_ERROR_BASE + 0x0056)
#define AG34410_ERROR_OPERATION_PENDING                     (IVIC_ERROR_BASE + 0x0057)
#define AG34410_ERROR_NULL_POINTER                          (IVIC_ERROR_BASE + 0x0058)
#define AG34410_ERROR_UNEXPECTED_RESPONSE                   (IVIC_ERROR_BASE + 0x0059)
#define AG34410_ERROR_FILE_NOT_FOUND                        (IVIC_ERROR_BASE + 0x005B)
#define AG34410_ERROR_INVALID_FILE_FORMAT                   (IVIC_ERROR_BASE + 0x005C)
#define AG34410_ERROR_STATUS_NOT_AVAILABLE                  (IVIC_ERROR_BASE + 0x005D)
#define AG34410_ERROR_ID_QUERY_FAILED                       (IVIC_ERROR_BASE + 0x005E)
#define AG34410_ERROR_RESET_FAILED                          (IVIC_ERROR_BASE + 0x005F)
#define AG34410_ERROR_RESOURCE_UNKNOWN                      (IVIC_ERROR_BASE + 0x0060)
#define AG34410_ERROR_ALREADY_INITIALIZED                   (IVIC_ERROR_BASE + 0x0061)
#define AG34410_ERROR_CANNOT_CHANGE_SIMULATION_STATE        (IVIC_ERROR_BASE + 0x0062)
#define AG34410_ERROR_INVALID_NUMBER_OF_LEVELS_IN_SELECTOR  (IVIC_ERROR_BASE + 0x0063)
#define AG34410_ERROR_INVALID_RANGE_IN_SELECTOR             (IVIC_ERROR_BASE + 0x0064)
#define AG34410_ERROR_UNKOWN_NAME_IN_SELECTOR               (IVIC_ERROR_BASE + 0x0065)
#define AG34410_ERROR_BADLY_FORMED_SELECTOR                 (IVIC_ERROR_BASE + 0x0066)
#define AG34410_ERROR_UNKNOWN_PHYSICAL_IDENTIFIER           (IVIC_ERROR_BASE + 0x0067)
#define AG34410_ERROR_INVALID_ATTRIBUTE                     (IVIC_ERROR_BASE + 0x000C)
#define AG34410_ERROR_TYPES_DO_NOT_MATCH                    (IVIC_ERROR_BASE + 0x0015)
#define AG34410_ERROR_IVI_ATTR_NOT_WRITABLE                 (IVIC_ERROR_BASE + 0x000D)
#define AG34410_ERROR_IVI_ATTR_NOT_READABLE                 (IVIC_ERROR_BASE + 0x000E)
#define AG34410_ERROR_INVALID_SESSION_HANDLE                (IVIC_ERROR_BASE + 0x1190)



#define AG34410_SUCCESS                                     0
#define AG34410_WARN_NSUP_ID_QUERY                          (IVIC_WARN_BASE + 0x0065)
#define AG34410_WARN_NSUP_RESET                             (IVIC_WARN_BASE + 0x0066)
#define AG34410_WARN_NSUP_SELF_TEST                         (IVIC_WARN_BASE + 0x0067)
#define AG34410_WARN_NSUP_ERROR_QUERY                       (IVIC_WARN_BASE + 0x0068)
#define AG34410_WARN_NSUP_REV_QUERY                         (IVIC_WARN_BASE + 0x0069)



#define AG34410_ERROR_MAX_TIME_EXCEEDED                     (IVIC_CLASS_ERROR_BASE + 0x0003)
#define AG34410_ERROR_TRIGGER_NOT_SOFTWARE                  (IVIC_CROSS_CLASS_ERROR_BASE + 0x0001)
#define AG34410_ERROR_PERSONALITY_NOT_ACTIVE                (IVIC_SPECIFIC_ERROR_BASE + 0x0211)
#define AG34410_ERROR_PERSONALITY_NOT_INSTALLED             (IVIC_SPECIFIC_ERROR_BASE + 0x0212)
#define AG34410_ERROR_PERSONALITY_NOT_LICENSED              (IVIC_SPECIFIC_ERROR_BASE + 0x0213)
#define AG34410_ERROR_IO_GENERAL                            (IVIC_SPECIFIC_ERROR_BASE + 0x0214)
#define AG34410_ERROR_IO_TIMEOUT                            (IVIC_SPECIFIC_ERROR_BASE + 0x0215)
#define AG34410_ERROR_MODEL_NOT_SUPPORTED                   (IVIC_SPECIFIC_ERROR_BASE + 0x0216)
#define AG34410_ERROR_WRAPPED_DRIVER_ERROR                  (IVIC_SPECIFIC_ERROR_BASE + 0x0218)



#define AG34410_WARN_OVER_RANGE                             (IVIC_CLASS_WARN_BASE + 0x0001)


/****************************************************************************
 *---------------------------- End Include File ----------------------------*
 ****************************************************************************/
#if defined(__cplusplus) || defined(__cplusplus__)
}
#endif
#endif // __AG34410_HEADER
