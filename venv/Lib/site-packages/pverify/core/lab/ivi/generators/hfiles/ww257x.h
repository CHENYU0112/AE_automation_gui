/****************************************************************************
 *                           WW257X
 *---------------------------------------------------------------------------
 *   Copyright (C) 2005-2014 Tabor Electronics Ltd.  All Rights Reserved.
 *---------------------------------------------------------------------------
 *
 * Title:    ww257x.h
 * Purpose:  ww257x Class declarations for the models: WW2571,WW2572,
 *                                                     WW2571A,WW2572A,
 *                                                     WW2074,WW1074,WW5064,
 *                                                     TE5351,PM8571,PM8572,
 *                                                     PM8571A,PM8572A,
 *                                                     WS8101,WS8102
 *
 ****************************************************************************/

#ifndef __WW257X_HEADER
#define __WW257X_HEADER

#define NIVISA_PXI

#include <ivi.h>
#include <ivifgen.h>

#if defined(__cplusplus) || defined(__cplusplus__)
extern "C" {
#endif

/****************************************************************************
 *----------------- Instrument Driver Revision Information -----------------*
 ****************************************************************************/
#define WW257X_MAJOR_VERSION                   2     /* Instrument driver major version   */
#define WW257X_MINOR_VERSION                   3     /* Instrument driver minor version   */

#define WW257X_CLASS_SPEC_MAJOR_VERSION        3     /* Class specification major version */
#define WW257X_CLASS_SPEC_MINOR_VERSION        0     /* Class specification minor version */


#ifdef _TE5351_SUPPORT
#define WW257X_SUPPORTED_INSTRUMENT_MODELS     "WW2571,WW2572,WW2571A,WW2572A,WW2074,WW1074,WW5064,TE5351,PM8571,PM8572,PM8571A,PM8572A,WS8101,WS8102"
#else
#define WW257X_SUPPORTED_INSTRUMENT_MODELS     "WW2571,WW2572,WW2571A,WW2572A,WW2074,WW1074,WW5064,PM8571,PM8572,PM8571A,PM8572A,WS8101,WS8102"
#endif

#define WW257X_DRIVER_VENDOR                   "Tabor Electronics Ltd."
#define WW257X_DRIVER_DESCRIPTION              "ww257x Waveform Generator"

#define WW257X_SUPPORTED_SESSION_TYPE	       "NI-VISA"


/****************************************************************************
 *------------------------------ Useful Macros -----------------------------*
 ****************************************************************************/

#define WW257X_CHAN_A                          "CHAN_A"
#define WW257X_CHAN_B                          "CHAN_B"
#define WW257X_CHAN_C                          "CHAN_C"
#define WW257X_CHAN_D                          "CHAN_D"

#define WW257X_CHAN_M1                          "CHAN_M1"
#define WW257X_CHAN_M2                          "CHAN_M2"
#define WW257X_CHAN_M3                          "CHAN_M3"
#define WW257X_CHAN_M4                          "CHAN_M4"
#define WW257X_CHAN_M5                          "CHAN_M5"
#define WW257X_CHAN_M6                          "CHAN_M6"
#define WW257X_CHAN_M7                          "CHAN_M7"
#define WW257X_CHAN_M8                          "CHAN_M8"
#define WW257X_CHAN_M9                          "CHAN_M9"
#define WW257X_CHAN_M10                         "CHAN_M10"
#define WW257X_CHAN_M11                         "CHAN_M11"
#define WW257X_CHAN_M12                         "CHAN_M12"
#define WW257X_CHAN_M13                         "CHAN_M13"
#define WW257X_CHAN_M14                         "CHAN_M14"
#define WW257X_CHAN_M15                         "CHAN_M15"
#define WW257X_CHAN_M16                         "CHAN_M16"
#define WW257X_CHAN_M17                         "CHAN_M17"
#define WW257X_CHAN_M18                         "CHAN_M18"
#define WW257X_CHAN_M19                         "CHAN_M19"
#define WW257X_CHAN_M20                         "CHAN_M20"
#define WW257X_CHAN_M21                         "CHAN_M21"
#define WW257X_CHAN_M22                         "CHAN_M22"
#define WW257X_CHAN_M23                         "CHAN_M23"
#define WW257X_CHAN_M24                         "CHAN_M24"
#define WW257X_CHAN_M25                         "CHAN_M25"
#define WW257X_CHAN_M26                         "CHAN_M26"
#define WW257X_CHAN_M27                         "CHAN_M27"
#define WW257X_CHAN_M28                         "CHAN_M28"
#define WW257X_CHAN_M29                         "CHAN_M29"
#define WW257X_CHAN_M30                         "CHAN_M30"
#define WW257X_CHAN_M31                         "CHAN_M31"
#define WW257X_CHAN_M32                         "CHAN_M32"


#define WW257X_WFM_HANDLE_FROM_INDEX(x)        (WW257X_VAL_FIRST_WAVEFORM_HANDLE_CHAN_A + x)
#define WW257X_WFM_INDEX_FROM_HANDLE(x)        (x - WW257X_VAL_FIRST_WAVEFORM_HANDLE_CHAN_A)

#define WW257X_SEQ_HANDLE_FROM_INDEX(y)        (WW257X_VAL_FIRST_SEQUENCE_HANDLE_CHAN_A + y)
#define WW257X_SEQ_INDEX_FROM_HANDLE(y)        (y - WW257X_VAL_FIRST_SEQUENCE_HANDLE_CHAN_A)


/****************************************************************************
 *---------------------------- Attribute Defines ---------------------------*
 ****************************************************************************/

    /*- IVI Inherent Instrument Attributes ---------------------------------*/

        /* User Options */
#define WW257X_ATTR_RANGE_CHECK                     IVI_ATTR_RANGE_CHECK                    /* ViBoolean */
#define WW257X_ATTR_QUERY_INSTRUMENT_STATUS         IVI_ATTR_QUERY_INSTR_STATUS             /* ViBoolean */
#define WW257X_ATTR_CACHE                           IVI_ATTR_CACHE                          /* ViBoolean */
#define WW257X_ATTR_SIMULATE                        IVI_ATTR_SIMULATE                       /* ViBoolean */
#define WW257X_ATTR_RECORD_COERCIONS                IVI_ATTR_RECORD_COERCIONS               /* ViBoolean */

        /*- Instrument Capabilities ----------------------------------------*/
#define WW257X_ATTR_CHANNEL_COUNT                   IVI_ATTR_NUM_CHANNELS                   /* ViInt32,  read-only  */
#define WW257X_ATTR_INTERCHANGE_CHECK               IVI_ATTR_INTERCHANGE_CHECK

        /*- Specific Driver Information, Read-only -------------------------*/
#define WW257X_ATTR_SPECIFIC_DRIVER_DESCRIPTION     IVI_ATTR_SPECIFIC_DRIVER_DESCRIPTION    /* ViString, read-only  */
#define WW257X_ATTR_SPECIFIC_DRIVER_PREFIX          IVI_ATTR_SPECIFIC_DRIVER_PREFIX         /* ViString, read-only  */
#define WW257X_ATTR_SPECIFIC_DRIVER_VENDOR          IVI_ATTR_SPECIFIC_DRIVER_VENDOR         /* ViString, read-only  */

        /*- Instrument Information, Read-only ------------------------------*/
#define WW257X_ATTR_INSTRUMENT_MANUFACTURER         IVI_ATTR_INSTRUMENT_MANUFACTURER        /* ViString, read-only  */
#define WW257X_ATTR_INSTRUMENT_MODEL                IVI_ATTR_INSTRUMENT_MODEL               /* ViString, read-only  */
#define WW257X_ATTR_INSTRUMENT_FIRMWARE_REVISION    IVI_ATTR_FIRMWARE_REVISION              /* ViString, read-only  */
#define WW257X_ATTR_SUPPORTED_INSTRUMENT_MODELS     IVI_ATTR_SUPPORTED_INSTRUMENT_MODELS    /* ViString, read-only  */
#define WW257X_ATTR_GROUP_CAPABILITIES              IVI_ATTR_GROUP_CAPABILITIES             /* ViString, read-only  */

        /*- Version Information, Read-only ---------------------------------*/
#define WW257X_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION /* ViInt32, read-only */
#define WW257X_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION /* ViInt32, read-only */
#define WW257X_ATTR_SPECIFIC_DRIVER_REVISION                 IVI_ATTR_SPECIFIC_DRIVER_REVISION                 /* ViString, read-only  */

        /* Advanced Session Information */
#define WW257X_ATTR_LOGICAL_NAME                    IVI_ATTR_LOGICAL_NAME               /* ViString, read-only  */
#define WW257X_ATTR_IO_RESOURCE_DESCRIPTOR          IVI_ATTR_RESOURCE_DESCRIPTOR        /* ViString, read-only  */
#define WW257X_ATTR_DRIVER_SETUP                    IVI_ATTR_DRIVER_SETUP				 /* ViString, read-only  */

   /*- Basic Instrument Operation -----------------------------------------*/
#define WW257X_ATTR_OUTPUT_MODE              	    IVIFGEN_ATTR_OUTPUT_MODE            /* ViInt32                        */
#define WW257X_ATTR_REF_CLOCK_SOURCE         	    IVIFGEN_ATTR_REF_CLOCK_SOURCE       /* ViInt32                        */
#define WW257X_ATTR_OUTPUT_ENABLED           	    IVIFGEN_ATTR_OUTPUT_ENABLED         /* ViBoolean, multi-channel       */
#define WW257X_ATTR_OUTPUT_IMPEDANCE         	    IVIFGEN_ATTR_OUTPUT_IMPEDANCE       /* ViReal64,  multi-channel, ohms */
#define WW257X_ATTR_OPERATION_MODE           	    IVIFGEN_ATTR_OPERATION_MODE         /* ViInt32,   multi-channel       */

    /*- Standard Waveform Generation ---------------------------------------*/
#define WW257X_ATTR_FUNC_WAVEFORM            	    IVIFGEN_ATTR_FUNC_WAVEFORM          /* ViInt32,  multi-channel           */
#define WW257X_ATTR_FUNC_AMPLITUDE           	    IVIFGEN_ATTR_FUNC_AMPLITUDE         /* ViReal64, multi-channel, volts    */
#define WW257X_ATTR_FUNC_DC_OFFSET           	    IVIFGEN_ATTR_FUNC_DC_OFFSET         /* ViReal64, multi-channel, volts    */
#define WW257X_ATTR_FUNC_FREQUENCY           	    IVIFGEN_ATTR_FUNC_FREQUENCY         /* ViReal64, multi-channel, hertz    */
#define WW257X_ATTR_FUNC_START_PHASE         	    IVIFGEN_ATTR_FUNC_START_PHASE       /* ViReal64, multi-channel, degrees  */
#define WW257X_ATTR_FUNC_DUTY_CYCLE_HIGH     	    IVIFGEN_ATTR_FUNC_DUTY_CYCLE_HIGH   /* ViReal64, multi-channel, percent  */

  /*- Arbitrary Waveform Generation --------------------------------------*/
#define WW257X_ATTR_ARB_WAVEFORM_HANDLE       	    IVIFGEN_ATTR_ARB_WAVEFORM_HANDLE    /* ViInt32,  multi-channel         */
#define WW257X_ATTR_ARB_GAIN                  	    IVIFGEN_ATTR_ARB_GAIN               /* ViReal64, multi-channel         */
#define WW257X_ATTR_ARB_OFFSET                	    IVIFGEN_ATTR_ARB_OFFSET             /* ViReal64, multi-channel, volts  */
#define WW257X_ATTR_ARB_SAMPLE_RATE           	    IVIFGEN_ATTR_ARB_SAMPLE_RATE        /* ViReal64, samples-per-second    */
#define WW257X_ATTR_ARB_SAMPLE_RATE_SOURCE          (IVI_CLASS_PUBLIC_ATTR_BASE + 216L)

#define WW257X_ATTR_MAX_NUM_WAVEFORMS         	    IVIFGEN_ATTR_MAX_NUM_WAVEFORMS      /* ViInt32,  read-only             */
#define WW257X_ATTR_WAVEFORM_QUANTUM          	    IVIFGEN_ATTR_WAVEFORM_QUANTUM       /* ViInt32,  read-only             */
#define WW257X_ATTR_MIN_WAVEFORM_SIZE         	    IVIFGEN_ATTR_MIN_WAVEFORM_SIZE      /* ViInt32,  read-only             */
#define WW257X_ATTR_MAX_WAVEFORM_SIZE         	    IVIFGEN_ATTR_MAX_WAVEFORM_SIZE      /* ViInt32,  read-only             */

#define WW257X_ATTR_ACTIVE_SEGMENT                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1116L)

    /*- Arbitrary Sequence Generation --------------------------------------*/
#define WW257X_ATTR_ARB_SEQUENCE_HANDLE       	    IVIFGEN_ATTR_ARB_SEQUENCE_HANDLE    /* ViInt32,  multi-channel         */
#define WW257X_ATTR_MAX_NUM_SEQUENCES         	    IVIFGEN_ATTR_MAX_NUM_SEQUENCES      /* ViInt32,  read-only             */
#define WW257X_ATTR_MIN_SEQUENCE_LENGTH       	    IVIFGEN_ATTR_MIN_SEQUENCE_LENGTH    /* ViInt32,  read-only             */
#define WW257X_ATTR_MAX_SEQUENCE_LENGTH       	    IVIFGEN_ATTR_MAX_SEQUENCE_LENGTH    /* ViInt32,  read-only             */
#define WW257X_ATTR_MAX_LOOP_COUNT            	    IVIFGEN_ATTR_MAX_LOOP_COUNT         /* ViInt32,  read-only             */
#define WW257X_ATTR_SEQUENCE_ADVANCE                (IVI_CLASS_PUBLIC_ATTR_BASE + 218L)

     /*- Frequency Modulation Generation ------------------------------------*/
#define WW257X_ATTR_FM_ENABLED                      IVIFGEN_ATTR_FM_ENABLED             /* ViBoolean, multi-channel */
#define WW257X_ATTR_FM_SOURCE                       IVIFGEN_ATTR_FM_SOURCE              /* ViInt32,   multi-channel */
#define WW257X_ATTR_FM_INTERNAL_DEVIATION           IVIFGEN_ATTR_FM_INTERNAL_DEVIATION  /* ViReal64,  hertz         */
#define WW257X_ATTR_FM_INTERNAL_FREQUENCY           IVIFGEN_ATTR_FM_INTERNAL_FREQUENCY  /* ViReal64,  hertz         */
#define WW257X_ATTR_FM_INTERNAL_WAVEFORM   		    IVIFGEN_ATTR_FM_INTERNAL_WAVEFORM
#define WW257X_ATTR_FM_ARB_SAMPLE_RATE              (IVI_CLASS_PUBLIC_ATTR_BASE + 506L)
#define WW257X_ATTR_FM_MARKER_FREQUENCY             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 530L)

    /*- Trigger Configuration ----------------------------------------------*/
#define WW257X_ATTR_TRIGGER_SOURCE            	    IVIFGEN_ATTR_TRIGGER_SOURCE         /* ViInt32, multi-channel */
#define WW257X_ATTR_TRIGGER_SLOPE            	    (IVI_CLASS_PUBLIC_ATTR_BASE + 303L)
#define WW257X_ATTR_TRIGGER_LEVEL                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 682L)
#define WW257X_ATTR_TRIGGER_DELAY                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 690L)
#define WW257X_ATTR_TRIGGER_DELAY_ENABLED           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 698L)

    /*- ReTrigger Configuration ----------------------------------------------*/
#define WW257X_ATTR_RETRIGGER_TIME                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 706L)
#define WW257X_ATTR_RETRIGGER_ENABLED               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 714L)

   /*- Burst Configuration ------------------------------------------------*/
#define WW257X_ATTR_BURST_COUNT               	    IVIFGEN_ATTR_BURST_COUNT            /* ViInt32, multi-channel */

/*****************************************************************************
*-------------- Instrument Specific Attributes -------------------------------
*****************************************************************************/

#define WW257X_ATTR_ID_QUERY_RESPONSE         	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1L) /* ViString (Read Only) */

    /*- Standard Waveform Generation, additional waveforms -----------------*/
#define WW257X_ATTR_FUNC_RAMP_RISE_TIME       	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 102L)
#define WW257X_ATTR_FUNC_RAMP_FALL_TIME       	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 103L)
#define WW257X_ATTR_FUNC_RAMP_DELAY                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 796L)
#define WW257X_ATTR_FUNC_PULSE_DELAY          	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 104L)
#define WW257X_ATTR_FUNC_PULSE_WIDTH          	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 105L)
#define WW257X_ATTR_FUNC_PULSE_RISE_TIME      	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 106L)
#define WW257X_ATTR_FUNC_PULSE_FALL_TIME      	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 107L)
#define WW257X_ATTR_SINC_CYCLES_COUNT  		 	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 108L)
#define WW257X_ATTR_FUNC_GAUSSIAN_EXPONENTIAL 	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 109L)
#define WW257X_ATTR_FUNC_EXPONENTIAL_EXPONENTIAL    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 110L)
#define WW257X_ATTR_FUNC_DC_LEVEL                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 111L)

    /*- Frequency Shift Key Modulation Generation --------------------------*/
#define WW257X_ATTR_FSK_ENABLED                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 201L)
#define WW257X_ATTR_FSK_SHIFT_FREQUENCY             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 557L)
#define WW257X_ATTR_FSK_HOP_FREQUENCY               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 203L)
#define WW257X_ATTR_FSK_MARKER_FREQUENCY            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 566L)

    /*- Amplitude Modulation Generation -------------------------------------*/
#define WW257X_ATTR_AM_ENABLED                      IVIFGEN_ATTR_AM_ENABLED
#define WW257X_ATTR_AM_SOURCE                       IVIFGEN_ATTR_AM_SOURCE
#define WW257X_ATTR_AM_INTERNAL_DEPTH               IVIFGEN_ATTR_AM_INTERNAL_DEPTH
#define WW257X_ATTR_AM_INTERNAL_FREQUENCY           IVIFGEN_ATTR_AM_INTERNAL_FREQUENCY
#define WW257X_ATTR_AM_INTERNAL_WAVEFORM            IVIFGEN_ATTR_AM_INTERNAL_WAVEFORM

    /*- Frequency Sweep Generation -----------------------------------------*/
#define WW257X_ATTR_SWEEP_ENABLED           	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 251L)
#define WW257X_ATTR_SWEEP_START_FREQ 		        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 252L)
#define WW257X_ATTR_SWEEP_STOP_FREQ 			    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 253L)
#define WW257X_ATTR_SWEEP_TIME              	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 254L)
#define WW257X_ATTR_SWEEP_PROGRESSION       	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 255L)
#define WW257X_ATTR_SWEEP_DIRECTION         	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 256L)
#define WW257X_ATTR_SWEEP_MARKER            	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 258L)

    /*- Hopping Modulation Generation --------------------------------------------------*/
#define WW257X_ATTR_HOP_ENABLED                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 521L)
#define WW257X_ATTR_HOP_DWELL_MODE                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 575L)
#define WW257X_ATTR_HOP_DWELL_TIME                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 584L)
#define WW257X_ATTR_HOP_MARKER_INDEX                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 593L)

   /*- Phase Shift Key Modulation Generation --------------------------------------------------*/
#define WW257X_ATTR_PSK_ENABLED                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 750L)
#define WW257X_ATTR_PSK_START_PHASE                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 791L)
#define WW257X_ATTR_PSK_SHIFT_PHASE                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 762L)
#define WW257X_ATTR_PSK_MARKER                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 768L)
#define WW257X_ATTR_PSK_RATE                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 774L)
#define WW257X_ATTR_PSK_BAUD                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 861L)
#define WW257X_ATTR_PSK_TYPE                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 866L)
#define WW257X_ATTR_PSK_CW_ENABLED                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 871L)

   /*- 3D Modulation Generation --------------------------------------------------*/
#define WW257X_ATTR_3D_ENABLED                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 801L)
#define WW257X_ATTR_3D_MARKER                       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 806L)
#define WW257X_ATTR_3D_SAMPLE_RATE                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 811L)

  /*- ASK Modulation Generation --------------------------------------------------*/
#define WW257X_ATTR_ASK_ENABLED                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 821L)
#define WW257X_ATTR_ASK_START_AMPLITUDE             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 826L)
#define WW257X_ATTR_ASK_SHIFT_AMPLITUDE             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 831L)
#define WW257X_ATTR_ASK_MARKER                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 836L)
#define WW257X_ATTR_ASK_BAUD                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 841L)

  /*- Ampl. Hopping Modulation Generation --------------------------------------------------*/
#define WW257X_ATTR_AHOP_ENABLED                    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 816L)
#define WW257X_ATTR_AHOP_MARKER                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 846L)
#define WW257X_ATTR_AHOP_DWELL_MODE                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 851L)
#define WW257X_ATTR_AHOP_DWELL_TIME                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 856L)

  /*- QAM Modulation Generation --------------------------------------------------*/
#define WW257X_ATTR_QAM_ENABLED                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 876L)
#define WW257X_ATTR_QAM_CW_ENABLED                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 881L)
#define WW257X_ATTR_QAM_MARKER                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 886L)
#define WW257X_ATTR_QAM_BAUD                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 891L)
#define WW257X_ATTR_QAM_TYPE                        (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 896L)

  /*- Common Modulation Functions ---------------------------------------------------------------*/
#define WW257X_ATTR_MOD_CARRIER_FREQ                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 656L)
#define WW257X_ATTR_MOD_CARRIER_BASELINE            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1016L)

  /*- Digital Output -----------------------------------------------------------------------------*/
#define WW257X_ATTR_DIGITAL_ENABLED                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 786L)
#define WW257X_ATTR_DIGITAL_RATE                    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 726L)
#define WW257X_ATTR_DIGITAL_DATA_SOURCE             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1021L)

  /*- Half Cycle Output -----------------------------------------------------------------------------*/
#define WW257X_ATTR_HALF_CYCLE_DELAY                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 921L)
#define WW257X_ATTR_HALF_CYCLE_DCYCLE               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 926L)
#define WW257X_ATTR_HALF_CYCLE_FREQ                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 931L)
#define WW257X_ATTR_HALF_CYCLE_PHASE                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 936L)
#define WW257X_ATTR_HALF_CYCLE_WAVE                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 941L)

  /*- Pulse Output -----------------------------------------------------------------------------*/
#define WW257X_ATTR_PULSE_DELAY                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 961L)
#define WW257X_ATTR_PULSE_DOUBLE_ENABLED            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 966L)
#define WW257X_ATTR_PULSE_DOUBLE_DELAY              (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 971L)
#define WW257X_ATTR_PULSE_HIGH_LEVEL                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 976L)
#define WW257X_ATTR_PULSE_LOW_LEVEL                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 981L)
#define WW257X_ATTR_PULSE_HIGH_TIME                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 986L)
#define WW257X_ATTR_PULSE_POLARITY                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 991L)
#define WW257X_ATTR_PULSE_PERIOD                    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 996L)
#define WW257X_ATTR_PULSE_RISE_TIME                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1001L)
#define WW257X_ATTR_PULSE_FALL_TIME                 (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1006L)
#define WW257X_ATTR_PULSE_ENABLED                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1011L)
#define WW257X_ATTR_PULSE_MODE                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1026L)
#define WW257X_ATTR_PULSE_PERIOD_ADV                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1031L)
#define WW257X_ATTR_PULSE_WIDTH                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1036L)
#define WW257X_ATTR_PULSE_DCYCLE                    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1041L)
#define WW257X_ATTR_PULSE_TRANSITION_LEAD           (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1061L)
#define WW257X_ATTR_PULSE_TRANSITION_TRAIL          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1066L)
#define WW257X_ATTR_PULSE_MOD_SOURCE                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1071L)
#define WW257X_ATTR_PULSE_MOD_PERIOD                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1076L)
#define WW257X_ATTR_PULSE_MOD_DEVIATION             (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1081L)
#define WW257X_ATTR_PULSE_LEVEL_MODE                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1086L)
#define WW257X_ATTR_PULSE_TRANSITION_STATE          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1091L)
#define WW257X_ATTR_PULSE_TRANSITION_BURST          (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1096L)

   /*- Counter Functions -----------------------------------------------------------------------------*/
#define WW257X_ATTR_COUNTER_DISPLAY_MODE            (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 901L)
#define WW257X_ATTR_COUNTER_GATE_TIME               (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 906L)
#define WW257X_ATTR_COUNTER_FUNCTION                (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 911L)
#define WW257X_ATTR_COUNTER_VALUE                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 916L)

    /*- Sync Output --------------------------------------------------------*/
#define WW257X_ATTR_SYNC_ENABLED             	    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 351L)
#define WW257X_ATTR_SYNC_TYPE                       (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 638L)
#define WW257X_ATTR_SYNC_POSITION                   (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 732L)
#define WW257X_ATTR_SYNC_SOURCE                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 738L)

   /*- Filter ------------------------------------------------------------------------*/
#define WW257X_ATTR_FILTER_TYPE                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 720L)

  /*- Multi Channels ------------------------------------------------------------------*/
#define WW257X_ATTR_PHASE_OFFSET                    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 777L)

 /*- Multi-Instrument Synchronization -----------------------------------*/
#define WW257X_ATTR_COUPLE_ENABLED                  (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 946L)
#define WW257X_ATTR_COUPLE_DELAY                    (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 956L)

/*- Store/Recall Attributes ---------------------------------------------------------------*/
#define WW257X_ATTR_STORE_CELL                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1101L)
#define WW257X_ATTR_RECALL_CELL                     (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1106L)
#define WW257X_ATTR_CLEAR_CELL                      (IVI_SPECIFIC_PUBLIC_ATTR_BASE + 1111L)


 /****************************************************************************
 *------------------------ Attribute Value Defines -------------------------*
 ****************************************************************************/

    /*- Defined values for attribute WW257X_ATTR_OPERATION_MODE ------------*/
#define WW257X_VAL_OPERATE_CONTINUOUS    	        IVIFGEN_VAL_OPERATE_CONTINUOUS
#define WW257X_VAL_OPERATE_BURST         	        IVIFGEN_VAL_OPERATE_BURST
#define WW257X_VAL_OPERATE_GATE          	        (IVIFGEN_VAL_OP_MODE_SPECIFIC_EXT_BASE + 1L)
#define WW257X_VAL_OPERATE_TRIGGERED     	        (IVIFGEN_VAL_OP_MODE_SPECIFIC_EXT_BASE + 2L)

    /*- Defined values for attribute WW257X_ATTR_OUTPUT_MODE ---------------*/
#define WW257X_VAL_OUTPUT_FUNC           	        IVIFGEN_VAL_OUTPUT_FUNC
#define WW257X_VAL_OUTPUT_ARB            	        IVIFGEN_VAL_OUTPUT_ARB
#define WW257X_VAL_OUTPUT_SEQ            	        IVIFGEN_VAL_OUTPUT_SEQ
#define WW257X_VAL_OUTPUT_MOD                       (IVIFGEN_VAL_OUT_MODE_SPECIFIC_EXT_BASE + 1)
#define WW257X_VAL_OUTPUT_COUNT                     (IVIFGEN_VAL_OUT_MODE_SPECIFIC_EXT_BASE + 2)
#define WW257X_VAL_OUTPUT_PULSE                     (IVIFGEN_VAL_OUT_MODE_SPECIFIC_EXT_BASE + 3)
#define WW257X_VAL_OUTPUT_HALF                      (IVIFGEN_VAL_OUT_MODE_SPECIFIC_EXT_BASE + 4)


     /*- Defined values for attribute WW257X_ATTR_REF_CLOCK_SOURCE ----------*/
#define WW257X_VAL_REF_CLOCK_INTERNAL               IVIFGEN_VAL_REF_CLOCK_INTERNAL
#define WW257X_VAL_REF_CLOCK_EXTERNAL               IVIFGEN_VAL_REF_CLOCK_EXTERNAL

    /*- Defined values for attribute WW257X_ATTR_FUNC_WAVEFORM -------------*/
#define WW257X_VAL_WFM_SINE             	 	    IVIFGEN_VAL_WFM_SINE
#define WW257X_VAL_WFM_SQUARE           	 	    IVIFGEN_VAL_WFM_SQUARE
#define WW257X_VAL_WFM_TRIANGLE         	 	    IVIFGEN_VAL_WFM_TRIANGLE
#define WW257X_VAL_WFM_DC               	 	    IVIFGEN_VAL_WFM_DC
#define WW257X_VAL_WFM_RAMP_UP 				        IVIFGEN_VAL_WFM_RAMP_UP
#define WW257X_VAL_WFM_RAMP_DOWN				    IVIFGEN_VAL_WFM_RAMP_DOWN
#define WW257X_VAL_WFM_RAMP             	 	    (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 1L)
#define WW257X_VAL_WFM_SINC             	 	    (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 2L)
#define WW257X_VAL_WFM_GAUSS            	 	    (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 3L)
#define WW257X_VAL_WFM_EXP              	 	    (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 4L)
#define WW257X_VAL_WFM_PULSE            	 	    (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 5L)
#define WW257X_VAL_WFM_NOISE            	        (IVIFGEN_VAL_WFM_SPECIFIC_EXT_BASE + 6L)

    /*- Defined values for attribute WW257X_ATTR_ARB_WAVEFORM_HANDLE -------*/
#define WW257X_VAL_ALL_WAVEFORMS         	        IVIFGEN_VAL_ALL_WAVEFORMS

    /*- Defined values for attribute WW257X_ATTR_ARB_SEQUENCE_HANDLE -------*/
#define WW257X_VAL_ALL_SEQUENCES         	        IVIFGEN_VAL_ALL_SEQUENCES

    /*- Defined values for attribute WW257X_ATTR_TRIGGER_SOURCE ------------*/
#define WW257X_VAL_EXTERNAL                         IVIFGEN_VAL_EXTERNAL
#define WW257X_VAL_SOFTWARE_TRIG                    IVIFGEN_VAL_SOFTWARE_TRIG
#define WW257X_VAL_INTERNAL_TRIGGER                 IVIFGEN_VAL_INTERNAL_TRIGGER
#define WW257X_VAL_MIXED                            (IVIFGEN_VAL_TRIG_SRC_SPECIFIC_EXT_BASE + 1L)

  /*- Define values for attribute WW257X_ATTR_AM_SOURCE------------------*/
#define WW257X_VAL_AM_INTERNAL                      IVIFGEN_VAL_AM_INTERNAL

  /*- Defined values for attribute WW257X_ATTR_AM_INTERNAL_WAVEFORM ------*/
#define WW257X_VAL_AM_INTERNAL_SINE                 IVIFGEN_VAL_AM_INTERNAL_SINE
#define WW257X_VAL_AM_INTERNAL_SQUARE               IVIFGEN_VAL_AM_INTERNAL_SQUARE
#define WW257X_VAL_AM_INTERNAL_TRIANGLE             IVIFGEN_VAL_AM_INTERNAL_TRIANGLE
#define WW257X_VAL_AM_INTERNAL_RAMP_UP              IVIFGEN_VAL_AM_INTERNAL_RAMP_UP

   /*- Defined values for attribute WW257X_ATTR_FM_SOURCE -----------------*/
#define WW257X_VAL_FM_INTERNAL                      IVIFGEN_VAL_FM_INTERNAL

  /*- Defined values for attribute WW257X_ATTR_FM_INTERNAL_WAVEFORM ------*/
#define WW257X_VAL_FM_INTERNAL_SINE        	        IVIFGEN_VAL_FM_INTERNAL_SINE
#define WW257X_VAL_FM_INTERNAL_SQUARE      	        IVIFGEN_VAL_FM_INTERNAL_SQUARE
#define WW257X_VAL_FM_INTERNAL_TRIANGLE    	        IVIFGEN_VAL_FM_INTERNAL_TRIANGLE
#define WW257X_VAL_FM_INTERNAL_RAMP_UP     	        IVIFGEN_VAL_FM_INTERNAL_RAMP_UP
#define WW257X_VAL_FM_INTERNAL_ARBITRARY            (IVIFGEN_VAL_FM_SOURCE_SPECIFIC_EXT_BASE + 1L)

	/*- Define values for attribute WW257X_ATTR_TRIGGER_SLOPE --------------*/
#define WW257X_VAL_TRIGGER_NEGATIVE                 (IVIFGEN_VAL_TRIG_SRC_SPECIFIC_EXT_BASE + 1002L)
#define WW257X_VAL_TRIGGER_POSITIVE                 (IVIFGEN_VAL_TRIG_SRC_SPECIFIC_EXT_BASE + 1003L)

/*****************************************************************************
*-------------- Defined values of Instrument Specific Attributes ------------*
*****************************************************************************/

    /*- Defined values for attribute WW257X_ATTR_ARB_SAMPLE_RATE_SOURCE ----*/
#define WW257X_VAL_ARB_INTERNAL                     (0L)
#define WW257X_VAL_ARB_EXTERNAL                     (1L)

  /*- Defined values for attribute WW257X_ATTR_SYNC_TYPE----------------*/
#define WW257X_VAL_SYNC_BIT                         (0L)
#define WW257X_VAL_SYNC_LCOM                        (1L)

   /*- Defined values for attribute WW257X_ATTR_SYNC_SOURCE----------------*/
#define WW257X_VAL_SOUR_CHAN_A                      (0L)
#define WW257X_VAL_SOUR_CHAN_B                      (1L)

 /*- Defined values for attribute WW257X_ATTR_FILTER_TYPE----------------*/
#define WW257X_VAL_FILTER_NONE                      (0L)
#define WW257X_VAL_FILTER_25MHZ                     (1L)
#define WW257X_VAL_FILTER_50MHZ                     (2L)
#define WW257X_VAL_FILTER_60MHZ                     (3L)
#define WW257X_VAL_FILTER_120MHZ                    (4L)

 /*- Defined values for attribute WW257X_ATTR_SEQUENCE_ADVANCE -----------*/
#define WW257X_VAL_AUTO                             (0L)
#define WW257X_VAL_STEP                             (1L)
#define WW257X_VAL_SING                             (2L)
#define WW257X_VAL_MIX                              (3L)

/*- Defined values for attribute WW257X_ATTR_SWEEP_PROGRESSION ---------*/
#define WW257X_VAL_LINEAR                           (0L)
#define WW257X_VAL_LOG                              (1L)

 	/*- Defined values for attribute WW257X_ATTR_SWEEP_DIRECTION -----------*/
#define WW257X_VAL_SWEEP_UP                         (0L)
#define WW257X_VAL_SWEEP_DOWN                       (1L)

   /*- Define values for attribute WW257X_ATTR_HOP_DWELL_MODE  and WW257X_ATTR_AHOP_DWELL_MODE------------------*/
#define WW257X_VAL_HOP_FIX                          (0L)
#define WW257X_VAL_HOP_VAR                          (1L)

   /*- Defined values for attribute WW257X_ATTR_PSK_TYPE ----------*/
#define WW257X_VAL_PSK_PSK                          (0L)
#define WW257X_VAL_PSK_BPSK                         (1L)
#define WW257X_VAL_PSK_QPSK                         (2L)
#define WW257X_VAL_PSK_DQPSK                        (3L)
#define WW257X_VAL_PSK_OQPSK                        (4L)
#define WW257X_VAL_PSK_8PSK                         (5L)
#define WW257X_VAL_PSK_16PSK                        (6L)
#define WW257X_VAL_PSK_USER                         (7L)

  /*- Defined values for attribute WW257X_ATTR_NQAM_TYPE ----------*/
#define WW257X_VAL_QAM_16QAM                        (0L)
#define WW257X_VAL_QAM_64QAM                        (1L)
#define WW257X_VAL_QAM_256QAM                       (2L)
#define WW257X_VAL_QAM_USER                         (3L)

 /*- Defined values for attribute WW257X_ATTR_COUNTER_DISPLAY_MODE----------*/
#define WW257X_VAL_COUNT_DISPLAY_NORMAL             (0L)
#define WW257X_VAL_COUNT_DISPLAY_HOLD               (1L)

 /*- Defined values for attribute WW257X_ATTR_COUNTER_FUNCTION----------*/
#define WW257X_VAL_COUNT_FUNC_FREQ                  (0L)
#define WW257X_VAL_COUNT_FUNC_PER                   (1L)
#define WW257X_VAL_COUNT_FUNC_PULSE                 (2L)
#define WW257X_VAL_COUNT_FUNC_ITOT                  (3L)
#define WW257X_VAL_COUNT_FUNC_GTOT                  (4L)
#define WW257X_VAL_COUNT_FUNC_APER                  (5L)

 /*- Defined values for attribute WW257X_ATTR_HALF_CYCLE_WAVE----------*/
#define WW257X_VAL_HALF_CYCLE_SINE                  (0L)
#define WW257X_VAL_HALF_CYCLE_TRIANGLE              (1L)
#define WW257X_VAL_HALF_CYCLE_SQUARE                (2L)

 /*- Defined values for attribute WW257X_ATTR_PULSE_POLARITY----------*/
#define WW257X_VAL_PULSE_POL_NORMAL                 (0L)
#define WW257X_VAL_PULSE_POL_COMP                   (1L)
#define WW257X_VAL_PULSE_POL_INVERT                 (2L)

 /*- Defined values for attribute WW257X_ATTR_PULSE_MODE----------*/
#define WW257X_VAL_PULSE_MODE_SING                  (0L)
#define WW257X_VAL_PULSE_MODE_DEL                   (1L)
#define WW257X_VAL_PULSE_MODE_DOUB                  (2L)
#define WW257X_VAL_PULSE_MODE_HOLD                  (3L)
#define WW257X_VAL_PULSE_MODE_EWID                  (4L)
#define WW257X_VAL_PULSE_MODE_PWM1                  (5L)

 /*- Defined values for attribute WW257X_ATTR_PULSE_LEVEL_MODE----------*/
#define WW257X_VAL_PULSE_LEV_HLOW                   (0L)
#define WW257X_VAL_PULSE_LEV_AOFF                   (1L)
#define WW257X_VAL_PULSE_LEV_POS                    (2L)
#define WW257X_VAL_PULSE_LEV_NEG                    (3L)

 /*- Defined values for attribute WW257X_ATTR_PULSE_MOD_SOURCE----------*/
#define WW257X_VAL_PULSE_MOD_SINE                   (0L)
#define WW257X_VAL_PULSE_MOD_TRI                    (1L)
#define WW257X_VAL_PULSE_MOD_SQU                    (2L)
#define WW257X_VAL_PULSE_MOD_PRAMP                  (3L)
#define WW257X_VAL_PULSE_MOD_NRAMP                  (4L)

 /*- Defined values for attribute WW257X_ATTR_PULSE_TRANSITION_STATE----------*/
#define WW257X_VAL_PULSE_TRAN_FAST                  (0L)
#define WW257X_VAL_PULSE_TRAN_LIN                   (1L)
#define WW257X_VAL_PULSE_TRAN_SYMM                  (2L)


 /*- Defined values for attribute WW257X_ATTR_INSTRUMENT_SELECT----------*/
#define WW257X_VAL_INSTR_MASTER                     (0L)
#define WW257X_VAL_INSTR_SLAVE                      (1L)

/*- Defined values for attribute WW257X_ATTR_MOD_CARRIER_BASELINE----------*/
#define WW257X_VAL_MOD_BASE_CARRIER                 (0L)
#define WW257X_VAL_MOD_BASE_DC                      (1L)

 /*- Defined values for attribute WW257X_ATTR_DIGITAL_DATA_SOURCE----------*/
#define WW257X_VAL_DIG_DATA_FIX                     (0L)
#define WW257X_VAL_DIG_DATA_USER                    (1L)


#define WW257X_VAL_MULT_20V                         1.3

 /****************************************************************************
 *---------------- Instrument Driver Function Declarations -----------------*
 ****************************************************************************/

  /*- Init and Close Functions -------------------------------------------*/
ViStatus _VI_FUNC  ww257x_init (ViRsrc resourceName, ViBoolean IDQuery,
                                ViBoolean resetDevice, ViSession *vi);

ViStatus _VI_FUNC  ww257x_InitWithOptions (ViRsrc resourceName, ViBoolean IDQuery,
                                           ViBoolean resetDevice, ViString optionString,
                                           ViSession *newVi);

ViStatus _VI_FUNC  ww257x_close (ViSession vi);

    /*- Coercion Info Functions --------------------------------------------*/
ViStatus _VI_FUNC  ww257x_GetNextCoercionRecord (ViSession vi,
                                                 ViInt32 bufferSize,
                                                 ViChar record[]);

	/*- Interchangeability Checking Functions ------------------------------*/
ViStatus _VI_FUNC  ww257x_GetNextInterchangeWarning (ViSession vi,
                                                     ViInt32 bufferSize,
                                                     ViChar warnString[]);

ViStatus _VI_FUNC  ww257x_ResetInterchangeCheck (ViSession vi);

ViStatus _VI_FUNC  ww257x_ClearInterchangeWarnings (ViSession vi);

    /*- Locking Functions --------------------------------------------------*/
ViStatus _VI_FUNC  ww257x_LockSession (ViSession vi, ViBoolean *callerHasLock);

ViStatus _VI_FUNC  ww257x_UnlockSession (ViSession vi, ViBoolean *callerHasLock);


    /*- Basic Instrument Operation Functions -------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureOperationMode (ViSession vi,
                                                 ViConstString channelName,
                                                 ViInt32 operMode);

ViStatus _VI_FUNC ww257x_ConfigureOutputMode (ViSession vi, ViInt32 opMode);

ViStatus _VI_FUNC ww257x_ConfigureRefClockSource (ViSession vi,
                                                  ViInt32 refClockSource);

ViStatus _VI_FUNC ww257x_ConfigureOutputImpedance (ViSession vi,
                                                   ViConstString channelName,
                                                   ViReal64 outputImpedance);

ViStatus _VI_FUNC ww257x_ConfigureOutputEnabled (ViSession vi,
                                                 ViConstString channelName,
                                                 ViBoolean outputEnabled);

ViStatus _VI_FUNC ww257x_ConfigureFilter (ViSession vi,
                                          ViConstString channelName,
                                          ViInt32 filter);

ViStatus _VI_FUNC ww257x_ConfigureSyncSignal (ViSession vi,
											  ViInt32 wfmHandle,
											  ViInt32 syncType,
											  ViBoolean syncEnabled,
											  ViInt32 syncPosition);

ViStatus _VI_FUNC ww257x_InitiateGeneration (ViSession vi);

ViStatus _VI_FUNC ww257x_AbortGeneration (ViSession vi);


  /*- Standard Function Output Functions ---------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureStandardWaveform (ViSession vi,
                                                    ViConstString channelName,
                                                    ViInt32 waveform,
                                                    ViReal64 amplitude,
                                                    ViReal64 dcOffset,
                                                    ViReal64 frequency,
                                                    ViReal64 startPhase);

ViStatus _VI_FUNC ww257x_ConfigureRampWaveform (ViSession vi,
                                                ViConstString channelName,
                                                ViReal64 fallTime,
                                                ViReal64 riseTime,
                                                ViReal64 delay);

ViStatus _VI_FUNC ww257x_ConfigurePulseWaveform (ViSession vi,
                                                 ViConstString channelName,
                                                 ViReal64 fallTime,
                                                 ViReal64 riseTime,
                                                 ViReal64 delay, ViReal64 width);

ViStatus _VI_FUNC ww257x_ConfigureGaussExponential (ViSession vi,
                                                    ViConstString channelName,
                                                    ViInt32 exponent);

ViStatus _VI_FUNC ww257x_ConfigureSquareWaveform (ViSession instrumentHandle,
                                                  ViConstString channelName,
                                                  ViReal64 dutyCycle);

ViStatus _VI_FUNC ww257x_ConfigureSincWaveform (ViSession vi,
                                                ViConstString channelName,
                                                ViInt32 sincCycleCount);

ViStatus _VI_FUNC ww257x_ConfigureDClevel (ViSession vi,
                                           ViConstString channelName,
                                           ViReal64 dcLevel);


	/*- Arbitrary Waveform Output Functions --------------------------------*/
ViStatus _VI_FUNC  ww257x_ConfigureSampleRate (ViSession vi,
											   ViReal64 sampleRate);

ViStatus _VI_FUNC ww257x_ConfigureSampleRateSource (ViSession vi,
                                                    ViInt32 source);

ViStatus _VI_FUNC ww257x_QueryArbWfmCapabilities (ViSession vi,
                                                  ViInt32 *maxNumWfms,
                                                  ViInt32 *wfmQuantum,
                                                  ViInt32 *minWfmSize,
                                                  ViInt32 *maxWfmSize);

ViStatus _VI_FUNC  ww257x_GetWfmHandleFromName (ViSession vi,
											    ViConstString wfmName,
                                                ViInt32 *wfmHandle);

ViStatus _VI_FUNC  ww257x_GetWfmNameFromHandle (ViSession vi,
											    ViInt32 wfmHandle,
                                                ViInt32 arraySize,
                                                ViChar wfmName[]);

ViStatus _VI_FUNC ww257x_GetWfmNames (ViSession vi,
									  ViInt32 arraySize,
        							  ViChar wfmNamesChan[]);

ViStatus _VI_FUNC  ww257x_CreateArbWaveform (ViSession vi,
                                             ViInt32 wfmSize,
                                             ViReal64 wfmData[],
                                             ViInt32 *wfmHandle);

ViStatus _VI_FUNC  ww257x_ConfigureArbWaveform (ViSession vi,
                                                ViConstString channelName,
                                                ViInt32 wfmHandle,
                                                ViReal64 arbGain,
                                                ViReal64 arbOffset);

ViStatus _VI_FUNC  ww257x_ClearArbWaveform (ViSession vi, ViInt32 wfmHandle);

ViStatus _VI_FUNC ww257x_LoadArbWfmFromFile (ViSession vi,
									         ViConstString channelName,
                                             ViChar fileName[],
                                             ViInt32 *wfmHandle);

ViStatus _VI_FUNC ww257x_SetActiveSegment (ViSession vi,
                                           ViInt32 activeSegment);



    /*- Arbitrary Sequence Output Functions --------------------------------*/
ViStatus _VI_FUNC ww257x_QueryArbSeqCapabilities (ViSession vi,
                                                  ViInt32 *maxNumSeqs,
                                                  ViInt32 *minSeqLength,
                                                  ViInt32 *maxSeqLength,
                                                  ViInt32 *maxLoopCount);

ViStatus _VI_FUNC  ww257x_GetSeqHandleFromName (ViSession vi,
											    ViConstString seqName,
                                                ViInt32 *seqHandle);

ViStatus _VI_FUNC ww257x_SetActiveSegment (ViSession vi,
                                           ViInt32 activeSegment);

ViStatus _VI_FUNC ww257x_DefineArbWaveformFromFile (ViSession vi,
                                                    ViChar channelName[],
                                                    ViChar fileName[],
                                                    ViInt32 wfmHandle);

ViStatus _VI_FUNC ww257x_LoadCSVFile (ViSession vi,
									         ViConstString channelName,
                                             ViChar fileName[],
                                             ViInt32 *wfmHandle);


ViStatus _VI_FUNC  ww257x_GetSeqNameFromHandle (ViSession vi,
											    ViInt32 seqHandle,
                                                ViInt32 arraySize,
                                                ViChar seqName[]);

ViStatus _VI_FUNC  ww257x_GetSeqNames (ViSession vi,
									   ViInt32 arraySize,
                                       ViChar seqNames[]);

ViStatus _VI_FUNC ww257x_CreateArbSequence (ViSession vi,
                                            ViInt32 seqLength,
                                            ViInt32 wfmHandle[],
                                            ViInt32 wfmLoopCount[],
                                            ViInt32 *seqHandle);

ViStatus _VI_FUNC ww257x_CreateArbitrarySequenceAdv (ViSession vi,
                                                     ViInt32 seqLength,
                                                     ViInt32 wfmHandle[],
                                                     ViInt32 wfmLoopCount[],
                                                     ViUInt8  Mode[],
                                                     ViInt32 *seqHandle);

ViStatus _VI_FUNC ww257x_ConfigureSequenceAdvance (ViSession vi,
                                                   ViInt32 seqAdvance,
                                                   ViInt32 source);

ViStatus _VI_FUNC ww257x_ConfigureArbSequence (ViSession vi,
                                               ViConstString channelName,
                                               ViInt32 seqHandle,
                                               ViReal64 arbGain,
                                               ViReal64 arbOffset);

ViStatus _VI_FUNC ww257x_ClearArbSequence (ViSession vi,
                                           ViInt32 seqHandle);

ViStatus _VI_FUNC ww257x_ClearArbMemory (ViSession vi);


   /*- Amplitude Modulation Functions ------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureAMEnabled (ViSession vi,
                                             ViConstString channelName,
                                             ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigureAMSource (ViSession vi,
                                            ViConstString channelName,
                                            ViInt32 source);

ViStatus _VI_FUNC ww257x_ConfigureAMInternal (ViSession vi,
                                              ViReal64 amDepth,
                                              ViInt32 amWaveform,
                                              ViReal64 amFrequency);

   /*- Frequency Modulation Functions -------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureFMEnabled (ViSession vi,
                                             ViConstString channelName,
                                             ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigureFMSource (ViSession vi,
                                            ViConstString channelName,
                                            ViInt32 source);

ViStatus _VI_FUNC ww257x_ConfigureFMInternal (ViSession vi,
                                              ViReal64 deviation,
                                              ViInt32 waveform,
                                              ViReal64 frequency);

ViStatus _VI_FUNC  ww257x_ConfigureFMSampleRate (ViSession vi,
											     ViReal64 sampleRate);

ViStatus _VI_FUNC ww257x_ConfigureFMMarkerFrequency (ViSession vi,
                                                     ViReal64 markerFrequency);

ViStatus _VI_FUNC ww257x_CreateFMArbWaveform (ViSession vi,
                                              ViInt32 wfmSize,
                                              ViReal64 wfmData[]);

ViStatus _VI_FUNC ww257x_LoadFMArbWfmFromFile (ViSession vi,
											   ViChar fileName[]);

   /*- Frequency Shift Key Modulation Functions ---------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureFSKEnabled (ViSession vi,
                                              ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigureFSK (ViSession vi,
                                       ViReal64 shiftFrequency,
                                       ViReal64 hopFrequency);

ViStatus _VI_FUNC ww257x_ConfigureFSKMarker (ViSession vi,
                                             ViInt32 markerIndex);

ViStatus _VI_FUNC ww257x_LoadFSKDataFile (ViSession vi,
                                          ViChar fileName[]);

ViStatus _VI_FUNC ww257x_LoadFSKDataArray (ViSession vi,
                                           ViInt16 size,
                                           ViUInt8 FSKData[]);

  /*- Sweep Modulation Functions -----------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureSweepEnabled (ViSession vi,
                                                ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigureSweep (ViSession vi,
                                         ViInt32 sweepMode,
                                         ViInt32 sweepProgression,
                                         ViInt32 sweepDirection,
                                         ViReal64 startFrequencyHz,
                                         ViReal64 stopFrequencyHz,
                                         ViReal64 times,
                                         ViReal64 sweepMarkerHz);

     /*- Hop Modulation Functions --------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureHopEnabled (ViSession vi,
                                              ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigureHopDwell (ViSession vi,
                                            ViInt32 hopDwellMode,
                                            ViReal64 hopDwellTime);

ViStatus _VI_FUNC ww257x_ConfigureHopMarker (ViSession vi,
                                             ViInt32 hopMarker);

ViStatus _VI_FUNC ww257x_LoadHOPDataFile (ViSession vi,
                                          ViChar fileName[]);


ViStatus _VI_FUNC ww257x_LoadFreqHopFixedDataArray (ViSession vi,
                                                    ViInt16 size,
                                                    ViReal64 hopFixData[]);

ViStatus _VI_FUNC ww257x_LoadFreqHopVarDataArray (ViSession vi,
                                                  ViReal64 freqData[],
                                                  ViReal64 dwellTimeData[],
                                                  ViInt16 size);

    /*- PSK Modulation Functions --------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigurePSKEnabled (ViSession vi,
                                              ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigurePSK (ViSession vi,
                                       ViReal64 startPhase,
                                       ViReal64 shiftedPhase,
                                       ViReal64 rate);

ViStatus _VI_FUNC ww257x_ConfigurePSKMarker (ViSession vi,
                                             ViInt32 markerIndex);

ViStatus _VI_FUNC ww257x_ConfigurenPSK (ViSession vi,
                                        ViInt32 pskType,
                                        ViReal64 symbolRate);

ViStatus _VI_FUNC ww257x_ConfigurePSKCWEnabled (ViSession vi,
                                                ViBoolean enabled);


ViStatus _VI_FUNC ww257x_LoadPSKDataFile (ViSession vi,
                                          ViChar fileName[]);

ViStatus _VI_FUNC ww257x_LoadPSKDataArray (ViSession vi,
                                           ViInt16 size,
                                           ViUInt8 PSKData[]);

ViStatus _VI_FUNC ww257x_LoadPSKUserDataArray (ViSession vi,
                                               ViInt16 size,
                                               ViReal32 phaseData[]);

    /*- 3D Modulation Functions --------------------------------------------------*/
ViStatus _VI_FUNC ww257x_Configure3DEnabled (ViSession vi,
                                             ViBoolean enabled);

ViStatus _VI_FUNC ww257x_Configure3DMarker (ViSession vi,
                                            ViInt32 Marker);

ViStatus _VI_FUNC ww257x_Configure3DSampleRate (ViSession vi,
                                                ViReal64 sampleRate);

   /*- ASK Modulation Functions --------------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureASKEnabled (ViSession vi,
                                              ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigureASKAmplitude (ViSession vi,
                                                ViConstString channelName,
                                                ViReal64 startAmplitude,
                                                ViReal64 shiftedAmplitude);

ViStatus _VI_FUNC ww257x_ConfigureASKMarker (ViSession vi,
                                             ViInt32 markerIndex);

ViStatus _VI_FUNC ww257x_ConfigureASKBaud (ViSession vi,
                                           ViReal64 baud);

ViStatus _VI_FUNC ww257x_LoadASKDataFile (ViSession vi,
                                          ViConstString channelName,
                                          ViChar fileName[]);

ViStatus _VI_FUNC ww257x_LoadASKDataArray (ViSession vi,
                                           ViConstString channelName,
                                           ViInt16 size,
                                           ViUInt8 ASKData[]);

   /*- AHOP Modulation Functions --------------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureAHOPEnabled (ViSession vi,
                                               ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigureAHOPDwell (ViSession vi,
                                             ViInt32 ahopDwellMode,
                                             ViReal64 ahopDwellTime);

ViStatus _VI_FUNC ww257x_ConfigureAHOPMarker (ViSession vi,
                                              ViInt32 ahopMarker);

ViStatus _VI_FUNC ww257x_LoadAHOPDataFile (ViSession vi,
                                           ViConstString channelName,
                                           ViChar fileName[]);

ViStatus _VI_FUNC ww257x_LoadAHOPFixedDataArray (ViSession vi,
                                                 ViConstString channelName,
                                                 ViInt16 size,
                                                 ViReal32 amplitudeData[]);

ViStatus _VI_FUNC ww257x_LoadAHOPVarDataArray (ViSession vi,
                                               ViConstString channelName,
                                               ViInt16 size,
                                               ViReal64 amplitudeData[],
                                               ViReal64 dwellTimeData[]);

   /*- QAM Modulation Functions --------------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureQAMEnabled (ViSession vi,
                                              ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigureQAMCWEnabled (ViSession vi,
                                                ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigureQAM (ViSession vi,
                                       ViReal64 baud,
                                       ViInt32 QAMtype);

ViStatus _VI_FUNC ww257x_ConfigureQAMMarker (ViSession vi,
                                             ViInt32 QAMMarker);

ViStatus _VI_FUNC ww257x_LoadQAMDataFile (ViSession vi,
                                          ViChar fileName[]);

ViStatus _VI_FUNC ww257x_LoadQAMDataArray (ViSession vi,
                                           ViInt16 size,
                                           ViUInt8 QAMData[]);

ViStatus _VI_FUNC ww257x_LoadQAMUserDataArray (ViSession vi,
                                               ViInt16 size,
                                               ViReal32 arrI[],
                                               ViReal32 arrQ[]);


  /*- Common Modulation Functions ---------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureModCarrierFreq (ViSession vi,
                                                  ViReal64 modCarrierFreq);

ViStatus _VI_FUNC ww257x_ConfigureModCarrierBaseline (ViSession vi,
                                                      ViInt32 carrierBaseline);


ViStatus _VI_FUNC ww257x_LoadModulationDemoTable (ViSession vi);

   /*- Triggering Functions -----------------------------------------------*/
ViStatus _VI_FUNC  ww257x_ConfigureTriggerSource (ViSession vi,
                                                  ViConstString channelName,
                                                  ViInt32 trigSource);

   /*- ReTriggering Functions -----------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureReTrigger (ViSession vi,
                                             ViReal64 reTriggerTime,
                                             ViBoolean enabled);

    /*- External Triggering --------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureTriggerSlope (ViSession vi,
                                           	    ViInt32 slope);

ViStatus _VI_FUNC ww257x_ConfigureTriggerLevel (ViSession vi,
                                                ViReal64 triggerLevel);

ViStatus _VI_FUNC ww257x_ConfigureTriggerDelay (ViSession vi,
                                                ViReal64 triggerDelay);

ViStatus _VI_FUNC ww257x_ConfigureTriggerDelayEnabled (ViSession vi,
                                                       ViBoolean enabled);

 /*- Digital Output Functions ---------------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureDigitalEnabled (ViSession vi,
                                                  ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigureDigitalRate (ViSession vi,
                                               ViReal64 digitalRate);

ViStatus _VI_FUNC ww257x_LoadDigitalDataFile (ViSession vi,
                                              ViChar fileName[],
                                              ViInt32 mode);

ViStatus _VI_FUNC ww257x_LoadDigitalDataArray (ViSession vi,
                                               ViInt16 size,
                                               ViUInt16 digitalData[],
                                               ViInt32 mode);

ViStatus _VI_FUNC ww257x_DigitalChannelSetup (ViSession vi,
                                              ViInt32 channelNumber,
                                              ViReal64 highLevel,
                                              ViReal64 lowLevel);

   /*- Half Cycle Output Functions ---------------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureHalfCycleWave (ViSession vi,
                                                 ViChar channelName[],
                                                 ViInt32 halfCycleWave,
                                                 ViReal64 phase,
                                                 ViReal64 dutyCycle);

ViStatus _VI_FUNC ww257x_ConfigureHalfCycleDelay (ViSession vi,
                                                  ViReal64 delay);

ViStatus _VI_FUNC ww257x_ConfigureHalfCycleFrequency (ViSession vi,
                                                      ViReal64 frequency);

     /*- Pulse Output Functions ---------------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigurePulseEnabled (ViSession vi,
                                                ViChar channelName[],
                                                ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigurePulseLevel (ViSession vi,
                                              ViChar channelName[],
                                              ViReal64 highLevel,
                                              ViReal64 lowLevel);

ViStatus _VI_FUNC ww257x_ConfigurePulsePolarity (ViSession vi,
                                                 ViChar channelName[],
                                                 ViInt32 pulsePolarity);

ViStatus _VI_FUNC ww257x_ConfigurePulse (ViSession vi,
                                         ViReal64 highTime,
                                         ViReal64 period,
                                         ViReal64 riseTime,
                                         ViReal64 fallTime);

ViStatus _VI_FUNC ww257x_ConfigurePulseAdv (ViSession vi,
                                            ViChar channelName[],
                                            ViInt32 transition,
                                            ViReal64 leading,
                                            ViReal64 trailing,
                                            ViReal64 width,
                                            ViReal64 dutyCycle);

ViStatus _VI_FUNC ww257x_ConfigurePulseDelay (ViSession vi,
                                              ViChar channelName[],
                                              ViReal64 delay);

ViStatus _VI_FUNC ww257x_ConfigureDoublePulseEnabled (ViSession vi,
                                                      ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigureDoublePulseDelay (ViSession vi,
                                                    ViReal64 delay);

ViStatus _VI_FUNC ww257x_ConfigurePulseMode (ViSession vi,
                                             ViConstString channelName,
                                             ViInt32 pulseMode);

ViStatus _VI_FUNC ww257x_ConfigurePulseLevelMode (ViSession vi,
                                                  ViChar channelName[],
                                                  ViInt32 pulseLevelMode);

ViStatus _VI_FUNC ww257x_ConfigurePulsePeriod (ViSession vi,
                                               ViReal64 period);

ViStatus _VI_FUNC ww257x_ConfigurePWMSettings (ViSession vi,
                                               ViInt32 source,
                                               ViReal64 period,
                                               ViReal64 deviation);

ViStatus _VI_FUNC ww257x_ConfigurePulseBurst (ViSession vi,
                                              ViInt32 transBurst);

   /*- Burst Functions ----------------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureBurstCount (ViSession vi,
                                              ViConstString channelName,
                                              ViInt32 burstCount);

   /*- Multi-Channel Functions --------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigurePhaseOffset (ViSession vi,
                                               ViConstString channelName,
                                               ViInt32 phaseOffset);

   /*- Multi-Instr. Synchronization --------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureCoupleEnabled (ViSession vi,
                                                 ViBoolean enabled);

ViStatus _VI_FUNC ww257x_ConfigureCoupleDelay (ViSession vi,
                                               ViReal64 coupleDelay);

ViStatus _VI_FUNC ww257x_InsertSlave (ViSession vi,
                                      ViChar IPAddress[]);

ViStatus _VI_FUNC ww257x_DeleteSlaves (ViSession vi);


  /*- Counter Functions ----------------------------------------------------*/
ViStatus _VI_FUNC ww257x_ConfigureCounter (ViSession vi,
                                           ViInt32 counterDisplayMode,
                                           ViReal64 gateTime,
                                           ViInt32 counterMode);

ViStatus _VI_FUNC ww257x_ReadCounterValue (ViSession vi,
                                           ViReal64 *counterValue);

ViStatus _VI_FUNC ww257x_ResetCounter (ViSession vi);

  /*- Store/Recall Functions -----------------------------------------------*/
ViStatus _VI_FUNC ww257x_StoreCell    (ViSession vi, ViInt32 storeCell);

ViStatus _VI_FUNC ww257x_RecallCell (ViSession vi, ViInt32 recallCell);

ViStatus _VI_FUNC ww257x_ClearCell (ViSession vi, ViInt32 clearCell);


   /*- Channel Info Functions ---------------------------------------------*/
ViStatus _VI_FUNC ww257x_GetChannelName (ViSession vi,
										 ViInt32 index,
                                         ViInt32 bufferSize,
                                         ViChar name[]);

    /*- Error Functions ----------------------------------------------------*/
ViStatus _VI_FUNC  ww257x_error_query (ViSession vi,
									   ViInt32 *errorCode,
                                       ViChar errorMessage[]);

ViStatus _VI_FUNC  ww257x_error_message (ViSession vi,
										 ViStatus errorCode,
                                         ViChar errorMessage[]);

ViStatus _VI_FUNC ww257x_SetActiveChannel (ViSession vi,
                                           ViChar channelName[]);

ViStatus _VI_FUNC ww257x_GetAmplOffsetLimits (ViSession vi,
                                              ViReal64 *minAmplitude,
                                              ViReal64 *maxAmplitude,
                                              ViReal64 *minOffset,
                                              ViReal64 *maxOffset);

ViStatus _VI_FUNC  ww257x_GetError (ViSession vi,
								    ViStatus *errorCode,
                                    ViInt32 bufferSize,
                                    ViChar description[]);

ViStatus _VI_FUNC  ww257x_ClearError (ViSession vi);

    /*- Utility Functions --------------------------------------------------*/
ViStatus _VI_FUNC  ww257x_reset (ViSession vi);

ViStatus _VI_FUNC  ww257x_self_test (ViSession vi,
									 ViInt16 *selfTestResult,
                                     ViChar selfTestMessage[]);

ViStatus _VI_FUNC  ww257x_revision_query (ViSession vi,
                                          ViChar instrumentDriverRevision[],
                                          ViChar firmwareRevision[]);

ViStatus _VI_FUNC  ww257x_WriteInstrData (ViSession vi,
										  ViConstString writeBuffer);

ViStatus _VI_FUNC  ww257x_ReadInstrData  (ViSession vi,
										  ViInt32 numBytes,
                                          ViChar rdBuf[],
                                          ViInt32 *bytesRead);

ViStatus _VI_FUNC ww257x_SendSoftwareTrigger (ViSession vi);

ViStatus _VI_FUNC ww257x_InvalidateAllAttributes (ViSession vi);

ViStatus _VI_FUNC ww257x_ResetWithDefaults (ViSession vi);

ViStatus _VI_FUNC ww257x_Disable (ViSession vi);

  /*- Set, Get, and Check Attribute Functions ----------------------------*/
ViStatus _VI_FUNC  ww257x_GetAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 *value);
ViStatus _VI_FUNC  ww257x_GetAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 *value);
ViStatus _VI_FUNC  ww257x_GetAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 bufSize, ViChar value[]);
ViStatus _VI_FUNC  ww257x_GetAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession *value);
ViStatus _VI_FUNC  ww257x_GetAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean *value);

ViStatus _VI_FUNC  ww257x_SetAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value);
ViStatus _VI_FUNC  ww257x_SetAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value);
ViStatus _VI_FUNC  ww257x_SetAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value);
ViStatus _VI_FUNC  ww257x_SetAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value);
ViStatus _VI_FUNC  ww257x_SetAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value);

ViStatus _VI_FUNC  ww257x_CheckAttributeViInt32 (ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value);
ViStatus _VI_FUNC  ww257x_CheckAttributeViReal64 (ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value);
ViStatus _VI_FUNC  ww257x_CheckAttributeViString (ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value);
ViStatus _VI_FUNC  ww257x_CheckAttributeViSession (ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value);
ViStatus _VI_FUNC  ww257x_CheckAttributeViBoolean (ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value);

    /*********************************************************
        Functions reserved for class driver use only.
        End-users should not call these functions.
     *********************************************************/
ViStatus _VI_FUNC  ww257x_IviInit (ViRsrc resourceName,
								   ViBoolean IDQuery,
                                   ViBoolean reset, ViSession vi);

ViStatus _VI_FUNC  ww257x_IviClose (ViSession vi);

/****************************************************************************
 *------------------------ Error And Completion Codes ----------------------*
 ****************************************************************************/
#define WW257X_ERROR_NO_WFMS_AVAILABLE             IVIFGEN_ERROR_NO_WFMS_AVAILABLE
#define WW257X_ERROR_WFM_IN_USE                    IVIFGEN_ERROR_WFM_IN_USE
#define WW257X_ERROR_SEQ_IN_USE                    IVIFGEN_ERROR_SEQ_IN_USE
#define WW257X_ERROR_TRIGGER_NOT_SOFTWARE          IVIFGEN_ERROR_TRIGGER_NOT_SOFTWARE
#define WW257X_ERROR_NOT_VALID_FOR_MODEL 	       (IVI_SPECIFIC_ERROR_BASE + 1L )
#define WW257X_ERROR_OPTION_NOT_INSTALLED	       (IVI_SPECIFIC_ERROR_BASE + 2L )
#define	WW257X_ERROR_INVALID_MODE			       (IVI_SPECIFIC_ERROR_BASE + 3L )
#define	WW257X_ERROR_INVALID_OPERATION_MODE	       (IVI_SPECIFIC_ERROR_BASE + 4L )
#define	WW257X_ERROR_INVALID_OPEN_WFM_FILE	       (IVI_SPECIFIC_ERROR_BASE + 5L )
#define WW257X_ERROR_INVALID_WAVEFORM		       (IVI_SPECIFIC_ERROR_BASE + 6L )
#define	WW257X_ERROR_INVALID_SEQUENCE		       (IVI_SPECIFIC_ERROR_BASE + 7L )
#define WW257X_ERROR_INVALID_WFM_LENGTH		       (IVI_SPECIFIC_ERROR_BASE + 8L )
#define WW257X_ERROR_INVALID_SEQ_LENGTH		       (IVI_SPECIFIC_ERROR_BASE + 9L )
#define	WW257X_ERROR_INVALID_WFM_ELEMENT	       (IVI_SPECIFIC_ERROR_BASE + 10L)
#define	WW257X_ERROR_INVALID_LOOP_COUNT		       (IVI_SPECIFIC_ERROR_BASE + 11L)
#define	WW257X_ERROR_INVALID_NEW_SEQUENCE	       (IVI_SPECIFIC_ERROR_BASE + 12L)
#define	WW257X_ERROR_INVALID_CHANNEL_SELECT	       (IVI_SPECIFIC_ERROR_BASE + 13L)
#define	WW257X_ERROR_INVALID_MODE_SETUP	           (IVI_SPECIFIC_ERROR_BASE + 14L)
#define WW257X_ERROR_INIT_UDP_SERVER			   (IVI_SPECIFIC_ERROR_BASE + 15L)
#define WW257X_INVALID_FILE_NAME				   (IVI_SPECIFIC_ERROR_BASE + 16L)
#define WW257X_ERROR_INVALID_FILE_READ			   (IVI_SPECIFIC_ERROR_BASE + 17L)
#define WW257X_ERROR_INSTR_SYNCHR			       (IVI_SPECIFIC_ERROR_BASE + 18L)
#define WW257X_ERROR_SETTING_CONFLICT			   (IVI_SPECIFIC_ERROR_BASE + 19L)
#define WW257X_ERROR_COUPLE_INIT			       (IVI_SPECIFIC_ERROR_BASE + 20L)
#define WW257X_ERROR_MOD_PACKAGE			       (IVI_SPECIFIC_ERROR_BASE + 21L)


    /*- Obsolete Inherent Instrument Attributes and functions -*/
    /*- These attributes and functions have been deprecated and may not
        be supported in future versions of this driver.
    -*/
        /*- Driver Information -*/
#define WW257X_ATTR_SPECIFIC_DRIVER_MAJOR_VERSION  IVI_ATTR_SPECIFIC_DRIVER_MAJOR_VERSION  // ViInt32,  read-only
#define WW257X_ATTR_SPECIFIC_DRIVER_MINOR_VERSION  IVI_ATTR_SPECIFIC_DRIVER_MINOR_VERSION  // ViInt32,  read-only

        /*- Error Info -*/
#define WW257X_ATTR_PRIMARY_ERROR                  IVI_ATTR_PRIMARY_ERROR                  // ViInt32
#define WW257X_ATTR_SECONDARY_ERROR                IVI_ATTR_SECONDARY_ERROR                // ViInt32
#define WW257X_ATTR_ERROR_ELABORATION              IVI_ATTR_ERROR_ELABORATION              // ViString

        /*- Advanced Session Information -*/
#define WW257X_ATTR_IO_SESSION_TYPE                IVI_ATTR_IO_SESSION_TYPE                // ViString, read-only
#define WW257X_ATTR_IO_SESSION                     IVI_ATTR_IO_SESSION                     // ViSession, read-only

        /*- Deprecated Attribute Identifiers for Renamed Attributes -*/
#define WW257X_ATTR_NUM_CHANNELS                   WW257X_ATTR_CHANNEL_COUNT
#define WW257X_ATTR_QUERY_INSTR_STATUS             WW257X_ATTR_QUERY_INSTRUMENT_STATUS
#define WW257X_ATTR_RESOURCE_DESCRIPTOR            WW257X_ATTR_IO_RESOURCE_DESCRIPTOR

        /*- Deprecated Error Information functions -*/
ViStatus _VI_FUNC  ww257x_GetErrorInfo (ViSession vi,
										ViStatus *primaryError,
                                        ViStatus *secondaryError,
                                        ViChar errorElaboration[]);

ViStatus _VI_FUNC  ww257x_ClearErrorInfo (ViSession vi);

/****************************************************************************
 *---------------------------- End Include File ----------------------------*
 ****************************************************************************/
#if defined(__cplusplus) || defined(__cplusplus__)
}
#endif
#endif /* __WW257X_HEADER */
