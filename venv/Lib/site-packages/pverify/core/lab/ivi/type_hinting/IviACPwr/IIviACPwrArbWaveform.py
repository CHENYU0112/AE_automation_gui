from __future__ import annotations


class IIviACPwrArbWaveform:
    def __init__(self):
        pass

    @property
    def NumWaveformsMax(self):
        raise NotImplementedError

    @property
    def NumOptimalDataPoints(self):
        raise NotImplementedError

    @property
    def FixedWaveformCount(self):
        raise NotImplementedError

    @property
    def UserWaveformCount(self):
        raise NotImplementedError

    @property
    def AvailableWaveformCount(self):
        raise NotImplementedError

    def Clear(self, WaveformName):
        """
        Deletes individual user defined waveforms from the power source memory. If the
        Waveform Name parameter is VI_NULL, all user defined waveforms are deleted.

        :param WaveformName: The name of the waveform to be deleted. If this parameter is VI_NULL, all user
            defined waveforms are deleted
        :type WaveformName: str
        """
        raise NotImplementedError

    def QueryCatalog(self, CatalogType):
        """
        Returns a comma delimited string of waveform names currently stored in the power
        source.

        :param CatalogType: Specifies if the catalog string should returned fixed vendor defined and/or user
            defined waveform names.
        :type CatalogType: IviACPwrWaveformCatalogEnum
        """
        raise NotImplementedError

    def Write(self, WaveformName):
        """
        Writes an individual user-defined waveform to the power source memory.

        :param WaveformName: The name of the new waveform to be written.
        :type WaveformName: str
        """
        raise NotImplementedError
