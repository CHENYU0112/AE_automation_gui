from __future__ import annotations


class IIviCounterPeriod:
    def __init__(self):
        super().__init__(self)

    @property
    def Channel(self):
        raise NotImplementedError

    @Channel.setter
    def Channel(self, value):
        """
        Specifies the input channel the period is measured on.
        """
        raise NotImplementedError

    @property
    def Estimate(self):
        raise NotImplementedError

    @Estimate.setter
    def Estimate(self, value):
        """
        Specifies the estimated period, in seconds, for the period function.
        """
        raise NotImplementedError

    @property
    def Resolution(self):
        raise NotImplementedError

    @Resolution.setter
    def Resolution(self, value):
        """
        Specifies the resolution of the measurement, in seconds, for the period
        function.
        """
        raise NotImplementedError

    @property
    def ApertureTime(self):
        raise NotImplementedError

    @ApertureTime.setter
    def ApertureTime(self, value):
        """
        Specifies the aperture time in seconds for the period with aperture time
        function.
        """
        raise NotImplementedError

    def ConfigureWithAperture(self, Channel, ApertureTime):
        """
        Configures a period measurement based on the specified aperture time.

        :param Channel: Specifies the channel the period will be measured on.
        :type Channel: str
        :param ApertureTime: Specifies the aperture time of the period measurement.
        :type ApertureTime: float
        """
        raise NotImplementedError

    def Configure(self, Channel, Estimate, Resolution):
        """
        Configures the estimate and resolution attributes for a period measurement.

        :param Channel: Specifies the channel the period will be measured on.
        :type Channel: str
        :param Estimate: Specifies the estimated period.
        :type Estimate: float
        :param Resolution: Specifies the resolution of the period measurement. It is the quantization size,
            i.e. the smallest delta value that can be detected.
        :type Resolution: float
        """
        raise NotImplementedError
