from __future__ import annotations


class IIviCounterArmStopExternal:
    def __init__(self):
        pass

    @property
    def Source(self):
        raise NotImplementedError

    @Source.setter
    def Source(self, value):
        """
        Specifies the stop arm source for external armed measurements.
        """
        raise NotImplementedError

    @property
    def Level(self):
        raise NotImplementedError

    @Level.setter
    def Level(self, value):
        """
        Specifies the voltage level in volts that stops external armed measurements.
        """
        raise NotImplementedError

    @property
    def Slope(self):
        raise NotImplementedError

    @Slope.setter
    def Slope(self, value):
        """
        Specifies the signal slope that stops external armed measurements.
        """
        raise NotImplementedError

    @property
    def Delay(self):
        raise NotImplementedError

    @Delay.setter
    def Delay(self, value):
        """
        Specifies the delay, in seconds, after the External Arm Stop event has occurred
        until the measurement stops.
        """
        raise NotImplementedError

    def Configure(self, Source, Level, Slope, Delay):
        """
        Specifies the External Stop Arm Source and configures the Level, Slope and Delay
        attributes.

        :param Source: Specifies the External Stop Arm source for armed measurements.
        :type Source: str
        :param Level: Specifies the Level you want the Counter to use for the External Stop Arm.
        :type Level: float
        :param Slope: Specifies the External Stop Arm slope.
        :type Slope: IviCounterSlopeEnum
        :param Delay: Specifies the External Stop Arm Delay.
        :type Delay: float
        """
        raise NotImplementedError
