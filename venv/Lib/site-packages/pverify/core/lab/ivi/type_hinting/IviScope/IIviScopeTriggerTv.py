from __future__ import annotations


class IIviScopeTriggerTv:
    def __init__(self):
        pass

    @property
    def LineNumber(self):
        raise NotImplementedError

    @LineNumber.setter
    def LineNumber(self, value):
        """
        The line on which the oscilloscope triggers. The line number is absolute and not
        relative to the field of the TV signal.
        """
        raise NotImplementedError

    @property
    def Event(self):
        raise NotImplementedError

    @Event.setter
    def Event(self, value):
        """
        The event on which the oscilloscope triggers.
        """
        raise NotImplementedError

    @property
    def polarity(self):
        raise NotImplementedError

    @polarity.setter
    def polarity(self, value):
        """
        The polarity of the TV signal.
        """
        raise NotImplementedError

    @property
    def SignalFormat(self):
        raise NotImplementedError

    @SignalFormat.setter
    def SignalFormat(self, value):
        """
        The format of the TV signal on which the oscilloscope triggers.
        """
        raise NotImplementedError

    def Configure(self, Source, SignalFormat, Event, polarity):
        """
        Configures the TV trigger source, signal format, event and polarity.

        :param Source: Specifies the trigger source. This value sets the Trigger Source property.
        :type Source: str
        :param SignalFormat: Specifies the TV trigger signal format. This value sets the TV Trigger Signal
            Format property.
        :type SignalFormat: IviScopeTVSignalFormatEnum
        :param Event: Specifies the TV trigger event. This value sets the TV Trigger Event property.
        :type Event: IviScopeTVTriggerEventEnum
        :param polarity: Specifies the polarity of the TV trigger. This value sets the TV Trigger
            Polarity property.
        :type polarity: IviScopeTVTriggerPolarityEnum
        """
        raise NotImplementedError
