from __future__ import annotations

from .IIviFgenArbitrarySequence import IIviFgenArbitrarySequence
from .IIviFgenArbitraryWaveform import IIviFgenArbitraryWaveform


class IIviFgenArbitrary:
    def __init__(self):
        self.Sequence = IIviFgenArbitrarySequence()
        self.Waveform = IIviFgenArbitraryWaveform()

    @property
    def SampleRate(self):
        raise NotImplementedError

    @SampleRate.setter
    def SampleRate(self, value):
        """
        The sample rate of the arbitrary waveforms the function generator produces. The
        units are samples per second.
        """
        raise NotImplementedError

    def ClearMemory(self):
        """
        Removes all previously created arbitrary waveforms and sequences from the
        function generator's memory and invalidates all waveform and sequence handles.
        """
        raise NotImplementedError

    def get_Gain(self, ChannelName):
        """
        Retrieves the gain.

        :param ChannelName: The name of a channel.
        :type ChannelName: str

        :return: The gain of the arbitrary waveform the function generator produces. This value
            is unitless.
        :rtype: float
        """
        raise NotImplementedError

    def get_Offset(self, ChannelName):
        """
        Retrieves the offset.

        :param ChannelName: The name of a channel.
        :type ChannelName: str

        :return: The offset of the arbitrary waveform the function generator produces. The units
            are volts.
        :rtype: float
        """
        raise NotImplementedError

    def set_Gain(self, ChannelName, pVal):
        """
        Sets the gain.

        :param ChannelName: The name of a channel.
        :type ChannelName: str
        :param pVal: The gain of the arbitrary waveform the function generator produces. This value
            is unitless.
        :type pVal: float
        """
        raise NotImplementedError

    def set_Offset(self, ChannelName, pVal):
        """
        Retrieves the offset.

        :param ChannelName: The name of a channel.
        :type ChannelName: str
        :param pVal: The offset of the arbitrary waveform the function generator produces. The units
            are volts.
        :type pVal: float
        """
        raise NotImplementedError
