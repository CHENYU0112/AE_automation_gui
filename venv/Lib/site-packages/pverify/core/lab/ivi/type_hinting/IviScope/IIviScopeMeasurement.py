from __future__ import annotations


class IIviScopeMeasurement:
    def __init__(self):
        pass

    def FetchWaveform(self):
        """
        Returns a previously acquired waveform for this channel. The acquisition must be
        made prior to calling this method. Call this method separately for each channel.

        """
        raise NotImplementedError

    def FetchWaveformMeasurement(self, MeasFunction):
        """
        Returns a previously acquired waveform measurement for this channel. The
        acquisition must be made prior to calling this method. Call this method
        separately for each measurement.

        :param MeasFunction: Characteristic of the acquired waveform to be measured.
        :type MeasFunction: IviScopeMeasurementEnum
        """
        raise NotImplementedError

    def FetchWaveformMinMax(self):
        """
        Returns the previously acquired minimum and maximum waveforms for this specified
        channel. The acquisition must be made prior to calling this method. Call this
        method separately for each channel.

        """
        raise NotImplementedError

    def ReadWaveform(self, MaxTimeMilliseconds):
        """
        Initiates an acquisition on all enabled channels, waits (up to MaxTime) for the
        acquisition to complete, and returns the waveform for this channel. Call
        FetchWaveform to obtain the waveforms for other channels.

        :param MaxTimeMilliseconds: Specifies the maximum time the end-user allows for this method to complete in
            milliseconds. The values defined in IviScopeTimeOutEnum are also allowed.
        :type MaxTimeMilliseconds: int
        """
        raise NotImplementedError

    def ReadWaveformMeasurement(self, MeasFunction, MaxTimeMilliseconds):
        """
        Initiates an acquisition on all enabled channels, waits (up to MaxTime) for the
        acquisition to complete, and returns the measurement for this channel. Call
        FetchWaveformMeasurement to obtain other measurements for this or other
        channels.

        :param MeasFunction: Characteristic of the acquired waveform to be measured.
        :type MeasFunction: IviScopeMeasurementEnum
        :param MaxTimeMilliseconds: Specifies the maximum time the end-user allows for this method to complete in
            milliseconds. The values defined in IviScopeTimeOutEnum are also allowed.
        :type MaxTimeMilliseconds: int
        """
        raise NotImplementedError

    def ReadWaveformMinMax(self, MaxTimeMilliseconds):
        """
        Initiates an acquisition on all enabled channels, waits (up to MaxTime) for the
        acquisition to complete, and returns the min/max waveforms for this channel.
        Call FetchMinMaxWaveform to obtain the min/max waveforms for other channels.

        :param MaxTimeMilliseconds: Specifies the maximum time the end-user allows for this method to complete in
            milliseconds. The values defined in IviScopeTimeOutEnum are also allowed.
        :type MaxTimeMilliseconds: int
        """
        raise NotImplementedError
