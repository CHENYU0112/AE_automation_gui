from __future__ import annotations


class IIviCounterTotalizeGated:
    def __init__(self):
        pass

    @property
    def Channel(self):
        raise NotImplementedError

    @Channel.setter
    def Channel(self, value):
        """
        Specifies the input channel for the gated totalize function.
        """
        raise NotImplementedError

    @property
    def GateSource(self):
        raise NotImplementedError

    @GateSource.setter
    def GateSource(self, value):
        """
        Specifies the gate source for the gated totalize function.
        """
        raise NotImplementedError

    @property
    def GateSlope(self):
        raise NotImplementedError

    @GateSlope.setter
    def GateSlope(self, value):
        """
        Specifies the gate slope that enables the gated totalize function.
        """
        raise NotImplementedError

    def Configure(self, Channel, GateSource, GateSlope):
        """
        Specifies the channel to use for the gate source and configures the gate slope
        attribute for a gated totalize measurement.

        :param Channel: Specifies the channel that will be counted.
        :type Channel: str
        :param GateSource: Specifies the channel that will gate the counted channel.
        :type GateSource: str
        :param GateSlope: Specifies the gate slope you want to configure.
        :type GateSlope: IviCounterSlopeEnum
        """
        raise NotImplementedError
