from __future__ import annotations


class IIviDriverIdentity:
    def __init__(self):
        raise NotImplementedError

    @property
    def Description(self):
        raise NotImplementedError

    @Description.setter
    def Description(self, value):
        """
        A brief description of the implementing component.  Description is
        limted to 256 bytes.
        """
        raise NotImplementedError

    @property
    def Revision(self):
        raise NotImplementedError

    @Revision.setter
    def Revision(self, value):
        """
        The revision of the implementing component.  Refer to IVI 3.2, Section
        3.1.2.2, for a description of revision syntax and semantics.  Revision
        is limited to 256 bytes.
        """
        raise NotImplementedError

    @property
    def Vendor(self):
        raise NotImplementedError

    @Vendor.setter
    def Vendor(self, value):
        """
        The name of the vendor that supplies the implementing component.
        Vendor is limited to 256 bytes.
        """
        raise NotImplementedError

    @property
    def InstrumentManufacturer(self):
        raise NotImplementedError

    @InstrumentManufacturer.setter
    def InstrumentManufacturer(self, value):
        """
        The name of the manufacturer reported by the physical instrument.  If
        Simulation is enabled or the instrument is not capable of reporting
        the name of the manufacturer, a string is returned that explains the
        condition. Manufacturer is limited to 256 bytes
        """
        raise NotImplementedError

    @property
    def InstrumentModel(self):
        raise NotImplementedError

    @InstrumentModel.setter
    def InstrumentModel(self, value):
        """
        The model number or name reported by the physical instrument.  If
        Simulation is enabled or the instrument is not capable of reporting
        the model number or name, a string is returned that explains the
        condition.  Model is limited to 256 bytes
        """
        raise NotImplementedError

    @property
    def InstrumentFirmwareRevision(self):
        raise NotImplementedError

    @InstrumentFirmwareRevision.setter
    def InstrumentFirmwareRevision(self, value):
        """
        The firmware revision reported by the physical instrument.  If
        Simulation is enabled or the instrument is not capable of reporting
        the firmware revision, a string is returned that explains the
        condition.
        """
        raise NotImplementedError

    @property
    def Identifier(self):
        raise NotImplementedError

    @Identifier.setter
    def Identifier(self, value):
        """
        The case-sensitive unique identifier of the implementing IVI-COM
        instrument driver.
        """
        raise NotImplementedError

    @property
    def SupportedInstrumentModels(self):
        raise NotImplementedError

    @SupportedInstrumentModels.setter
    def SupportedInstrumentModels(self, value):
        """
        A comma-separated list of instrument models that the IVI specific
        driver can control.  The string does not include an abbreviation for
        the manufacturer if it is the same for all models.
        """
        raise NotImplementedError

    @property
    def SpecificationMajorVersion(self):
        raise NotImplementedError

    @SpecificationMajorVersion.setter
    def SpecificationMajorVersion(self, value):
        """
        For IVI class-compliant drivers, the major version number of the
        instrument class specification.  If the driver is not class compliant,
        the driver returns zero.
        """
        raise NotImplementedError

    @property
    def SpecificationMinorVersion(self):
        raise NotImplementedError

    @SpecificationMinorVersion.setter
    def SpecificationMinorVersion(self, value):
        """
        For IVI class-compliant drivers, the minor version number of the
        instrument class specification.  If the driver is not class compliant,
        the driver returns zero.
        """
        raise NotImplementedError

    @property
    def GroupCapabilities(self):
        raise NotImplementedError

    @GroupCapabilities.setter
    def GroupCapabilities(self, value):
        """
        A comma-separated list of the class capability groups implemented by
        the driver.  Capability group names are documented in the IVI class
        specifications.  If the driver is not class compliant, the driver
        returns an empty string.
        """
        raise NotImplementedError
