from __future__ import annotations


class IIviCounterPhase:
    def __init__(self):
        pass

    @property
    def InputChannel(self):
        raise NotImplementedError

    @InputChannel.setter
    def InputChannel(self, value):
        """
        Specifies the input channel the phase is measured on.
        """
        raise NotImplementedError

    @property
    def ReferenceChannel(self):
        raise NotImplementedError

    @ReferenceChannel.setter
    def ReferenceChannel(self, value):
        """
        Specifies the reference channel for the phase measurement.
        """
        raise NotImplementedError

    @property
    def FrequencyEstimate(self):
        raise NotImplementedError

    @FrequencyEstimate.setter
    def FrequencyEstimate(self, value):
        """
        Specifies the estimated frequency, in hertz, for the phase function reference
        channel.
        """
        raise NotImplementedError

    @property
    def Resolution(self):
        raise NotImplementedError

    @Resolution.setter
    def Resolution(self, value):
        """
        Specifies the resolution of the measurement, in degrees, for the phase function
        reference channel.
        """
        raise NotImplementedError

    def Configure(self, InputChannel, ReferenceChannel, FrequencyEstimate, Resolution):
        """
        Configures the estimate and resolution attributes and specifies the input and
        reference channels for a phase measurement.

        :param InputChannel: Specifies the input channel the phase will be measured on.
        :type InputChannel: str
        :param ReferenceChannel: Specifies the channel the phase measurement will be referenced to.
        :type ReferenceChannel: str
        :param FrequencyEstimate: Specifies the estimated phase.
        :type FrequencyEstimate: float
        :param Resolution: Specifies the resolution of the phase measurement. It is the quantization size,
            i.e. the smallest delta value that can be detected.
        :type Resolution: float
        """
        raise NotImplementedError
