from __future__ import annotations


class IIviFgenArbitrarySequence:
    def __init__(self):
        pass

    @property
    def LengthMax(self):
        raise NotImplementedError

    @LengthMax.setter
    def LengthMax(self, value):
        """
        The maximum number of arbitrary waveforms that the function generator allows in
        an arbitrary sequence.
        """
        raise NotImplementedError

    @property
    def LengthMin(self):
        raise NotImplementedError

    @LengthMin.setter
    def LengthMin(self, value):
        """
        The minimum number of arbitrary waveforms that the function generator allows in
        an arbitrary sequence.
        """
        raise NotImplementedError

    @property
    def LoopCountMax(self):
        raise NotImplementedError

    @LoopCountMax.setter
    def LoopCountMax(self, value):
        """
        The maximum number of times that the function generator can repeat a waveform in
        a sequence.
        """
        raise NotImplementedError

    @property
    def NumberSequencesMax(self):
        raise NotImplementedError

    @NumberSequencesMax.setter
    def NumberSequencesMax(self, value):
        """
        The maximum number of arbitrary sequences that the function generator allows.
        """
        raise NotImplementedError

    def Configure(self, ChannelName, Handle, Gain, Offset):
        """
        Configures the attributes of the function generator that affect arbitrary
        sequence generation.

        :param ChannelName: The ChannelName parameter may be a string defined by the driver or supplied as a
            virtual name in the configuration store. For single output instruments, the
            driver may define the empty string as valid ChannelName.
        :type ChannelName: str
        :param Handle: Specifies the handle that identifies the arbitrary sequence to produce. This
            value sets the Arbitrary Sequence Handle property.
        :type Handle: int
        :param Gain: Specifies the arbitrary waveform gain. Tthis value sets the Arbitrary Gain
            property.
        :type Gain: float
        :param Offset: Specifies the arbitrary waveform offset. This value sets the Arbitrary Offset
            property.
        :type Offset: float
        """
        raise NotImplementedError

    def Clear(self, Handle):
        """
        Removes a previously created arbitrary sequence from the function generator's
        memory and invalidates the sequence's handle.

        :param Handle: Specifies the handle that identifies the arbitrary sequence to clear.
        :type Handle: int
        """
        raise NotImplementedError

    def Create(self):
        """
        Creates an arbitrary waveform sequence from an array of waveform handles and a
        corresponding array of loop counts, and returns a handle that identifies the
        sequence. The handle is used by the Configure, and Clear methods.


        :return: Returns the handle that identifies the new arbitrary sequence.
        :rtype: int
        """
        raise NotImplementedError
