from __future__ import annotations


class IIviScopeChannel:
    def __init__(self):
        pass

    @property
    def ProbeSense(self):
        raise NotImplementedError

    @ProbeSense.setter
    def ProbeSense(self, value):
        """
        The probe attenuation value the oscilloscope automatically senses. If the
        automatic probe sense is disabled, its value is the manual probe attenuation
        setting.
        """
        raise NotImplementedError

    @property
    def Coupling(self):
        raise NotImplementedError

    @Coupling.setter
    def Coupling(self, value):
        """
        How the oscilloscope couples the input signal.
        """
        raise NotImplementedError

    @property
    def Enabled(self):
        raise NotImplementedError

    @Enabled.setter
    def Enabled(self, value):
        """
        If True, the oscilloscope acquires a waveform for this channel when the Initiate
        Acquisition, Read Waveform, Read Min Max Waveform, or Read Waveform Measurement
        methods are called.
        """
        raise NotImplementedError

    @property
    def InputFrequencyMax(self):
        raise NotImplementedError

    @InputFrequencyMax.setter
    def InputFrequencyMax(self, value):
        """
        The maximum input frequency of this channel. It the frequency at which the input
        circuitry attenuates the input signal by 3 dB. The units are hertz.
        """
        raise NotImplementedError

    @property
    def InputImpedance(self):
        raise NotImplementedError

    @InputImpedance.setter
    def InputImpedance(self, value):
        """
        The input impedance of this channel. The units are ohms.
        """
        raise NotImplementedError

    @property
    def Offset(self):
        raise NotImplementedError

    @Offset.setter
    def Offset(self, value):
        """
        The location of the center of the range that you specify with the Range
        property. The units are volts, with respect to ground. For example, to acquire a
        sine wave spanning 0.0 to 10.0 volts, set Offset to 5.0 volts.
        """
        raise NotImplementedError

    @property
    def ProbeAttenuation(self):
        raise NotImplementedError

    @ProbeAttenuation.setter
    def ProbeAttenuation(self, value):
        """
        The scaling factor by which the probe attenuates the input signal. For example,
        with a 10:1 probe, the value is 10.0.
        """
        raise NotImplementedError

    @property
    def Range(self):
        raise NotImplementedError

    @Range.setter
    def Range(self, value):
        """
        The absolute value of the input range the oscilloscope can acquire for the
        channel. The units are volts. For example, to acquire a sine wave spanning -5.0
        to 5.0 volts, set Range to 10.0 volts.
        """
        raise NotImplementedError

    def Configure(self, Range, Offset, Coupling, ProbeAttenuation, Enabled):
        """
        Configures the most commonly used properties of the oscilloscope channel
        sub-system. They are the range, offset, coupling, probe attenuation, and whether
        the channel is enabled.

        :param Range: Specifies the vertical range. This value sets the Vertical Range property.
        :type Range: float
        :param Offset: Specifies the vertical offset. This value sets the Vertical Offset property.
        :type Offset: float
        :param Coupling: Specifies how to couple the input signal. This value sets the Vertical
        :type Coupling: IviScopeVerticalCouplingEnum
        :param ProbeAttenuation: Specifies the probe attenuation. This value sets the Probe Attenuation property.
        :type ProbeAttenuation: float
        :param Enabled: Specifies if the channel is enabled for acquisition. This value sets the Channel
            Enabled property.
        :type Enabled: bool
        """
        raise NotImplementedError

    def ConfigureCharacteristics(self, InputImpedance, InputFrequencyMax):
        """
        Configures the properties that control the electrical characteristics of the
        channel. They are the input impedance and the maximum frequency of the input
        signal.

        :param InputImpedance: The input impedance for the channel. The driver sets the Input Impedance to this
            value.
        :type InputImpedance: float
        :param InputFrequencyMax: The maximum input frequency for the channel. The driver sets the Max Input
            Frequency to this value.
        :type InputFrequencyMax: float
        """
        raise NotImplementedError
