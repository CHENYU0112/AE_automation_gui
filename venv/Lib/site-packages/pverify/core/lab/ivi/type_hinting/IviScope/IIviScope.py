from __future__ import annotations

from pverify.core.lab.ivi.ivi_base_classes import IVICDriverWrapper, IVICOMDriverWrapper
from pverify.core.lab.ivi.type_hinting.IviScope import IIviScopeEnums


class IIviScope(IVICOMDriverWrapper):
    def __init__(self):
        from .IIviDriverOperation import IIviDriverOperation

        self.DriverOperation = IIviDriverOperation()

        from .IIviDriverIdentity import IIviDriverIdentity

        self.Identity = IIviDriverIdentity()

        from .IIviDriverUtility import IIviDriverUtility

        self.Utility = IIviDriverUtility()

        from .IIviScopeAcquisition import IIviScopeAcquisition

        self.Acquisition = IIviScopeAcquisition()

        from .IIviScopeChannels import IIviScopeChannels

        self.Channels = IIviScopeChannels()

        from .IIviScopeMeasurements import IIviScopeMeasurements

        self.Measurements = IIviScopeMeasurements()

        from .IIviScopeReferenceLevel import IIviScopeReferenceLevel

        self.ReferenceLevel = IIviScopeReferenceLevel()

        from .IIviScopeTrigger import IIviScopeTrigger

        self.Trigger = IIviScopeTrigger()

        self.Enums = IIviScopeEnums

        self.dllwrap: IVICDriverWrapper = None

    @property
    def drivername(self):
        raise NotImplementedError

    @property
    def Initialized(self):
        raise NotImplementedError

    def Initialize(self, ResourceName, IdQuery, Reset, OptionString):
        """
        Opens the I/O session to the instrument. Driver methods and properties that
        access the instrument are only accessible after Initialize is called. Initialize
        optionally performs a Reset and queries the instrument to validate the
        instrument model.

        :param ResourceName: An IVI logical name or an instrument specific string that identifies the address
            of the instrument, such as a VISA resource descriptor string.
        :type ResourceName: str
        :param IdQuery: Specifies whether to verify the ID of the instrument.
        :type IdQuery: bool
        :param Reset: Specifies whether to reset the instrument.
        :type Reset: bool
        :param OptionString: The user can use the OptionsString parameter to specify the initial values of
            certain IVI inherent attributes for the session. The format of an assignment in
            the OptionsString parameter is "Name=Value", where Name is one of: RangeCheck,
            QuerytInstrStatus, Cache, Simulate, RecordCoercions, InterchangeCheck, or
            DriverSetup. Value is either true or false except for DriverSetup. If the
            Options String parameter contains an assignment for the Driver Setup attribute,
            the Initialize function assumes that everything following "DriverSetup=" is part
            of the assignment.
        :type OptionString: str
        """
        raise NotImplementedError

    def Close(self):
        """
        Closes the I/O session to the instrument. Driver methods and properties that
        access the instrument are not accessible after Close is called.
        """
        raise NotImplementedError
