from __future__ import annotations


class IIviScopeTriggerRunt:
    def __init__(self):
        pass

    @property
    def polarity(self):
        raise NotImplementedError

    @polarity.setter
    def polarity(self, value):
        """
        The polarity of the runt that triggers the oscilloscope.
        """
        raise NotImplementedError

    @property
    def ThresholdHigh(self):
        raise NotImplementedError

    @ThresholdHigh.setter
    def ThresholdHigh(self, value):
        """
        The high threshold the oscilloscope uses for runt triggering. The units are
        volts.
        """
        raise NotImplementedError

    @property
    def ThresholdLow(self):
        raise NotImplementedError

    @ThresholdLow.setter
    def ThresholdLow(self, value):
        """
        The low threshold the oscilloscope uses for runt triggering. The units are
        volts.
        """
        raise NotImplementedError

    def Configure(self, Source, ThresholdLow, ThresholdHigh, polarity):
        """
        Configures the runt trigger Source, ThresholdLow, ThresholdHigh, and Polarity. A
        runt trigger occurs when the trigger signal crosses one of the runt thresholds
        twice without crossing the other runt threshold.

        :param Source: Specifies the trigger source. This value sets the Trigger Source property.
        :type Source: str
        :param ThresholdLow: Sets the runt triggering low threshold in volts.
        :type ThresholdLow: float
        :param ThresholdHigh: Sets the runt triggering high threshold in volts.
        :type ThresholdHigh: float
        :param polarity: Sets the runt polarity.
        :type polarity: IviScopeRuntPolarityEnum
        """
        raise NotImplementedError
