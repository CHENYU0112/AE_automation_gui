# http://win32com.goermezer.de/content/view/227/192/
# MailItem Api: https://msdn.microsoft.com/en-us/library/office/ff861332.aspx?f=255&MSPPError=-2147217396
from __future__ import annotations

import contextlib
import logging
from os.path import *

from pverify.core.env import IS_WIN


def SendEMail(
    to: str,
    cc: str = "",
    subject: str = "",
    body: str = "",
    attachments: list[str] | None = None,
):
    """
    Sends an EMail with opt. attachments to one or multiple users.

    Note: This function will use the users currently active Microsoft Outlook accout to send the EMail!

    :param to: To. Multiple recipients can be used by using ; as seperator
    :param cc: CC. Multiple recipients can be used by using ; as seperator
    :param subject: The EMail subject
    :param body: The EMail body
    :param attachments: A list of file paths to attachments
    """
    if IS_WIN:
        import pythoncom
        import win32com.client
        from win32com.shell import shell

        IS_ADMIN = shell.IsUserAnAdmin()
    else:
        raise NotImplementedError

    with contextlib.suppress(Exception):
        pythoncom.CoInitialize()

    try:
        o = win32com.client.GetActiveObject("Outlook.Application")
    except Exception as e:
        if e.args[0] == -2147221021:  # Error 'Operation unavailable' -> Outlook not open or different security level
            try:
                o = win32com.client.Dispatch("Outlook.Application")
            except Exception as e:
                if (
                    e.args[0] == -2146959355
                ):  # Error 'Server execution failed' -> Cannot open (already open in different security level)
                    if IS_ADMIN:
                        raise PermissionError(
                            "Cannot access/start an outlook application when running with admin privileges!: "
                            + str(e.args)
                        ) from None
                    raise
                raise
        else:
            raise

    Msg = o.CreateItem(0)
    Msg.To = to
    Msg.CC = cc
    Msg.Subject = subject
    Msg.BodyFormat = 1  # 1 for plain, 2 for HTML
    Msg.Body = body
    if attachments is not None:
        # in case the user provided just a `str`, this will ensure we continue with
        # `List[str]` and not iterate over the strings characters.
        attachments = list(attachments)
        for attachment in attachments:
            if exists(attachment):
                Msg.Attachments.Add(attachment)
            else:
                Log = logging.getLogger("PyVerify_TestLogger")
                Log.warning(f"It failed to send the email because the file {attachments} does not exist")
    Msg.Send()


if __name__ == "__main__":
    SendEMail("johannes.loibl@infineon.com", subject="Test", body="Test")
