from __future__ import annotations

import shutil

import click

import srd
from srd.internal.utils.telemetry import track_feature


@click.group()
@click.version_option(srd.__version__, "--version", "-v", message="%(version)s")
def cli():
    pass


@cli.group()
def install():
    pass


@install.command(name="simetrix")
def install_simetrix():
    from srd.util.simetrix import ensure_simetrix_tool_in_venv

    track_feature("install_simetrix")
    click.echo("Installing simetrix...")
    install_dir = ensure_simetrix_tool_in_venv()
    click.echo(f"... -> {install_dir}")


@install.command(name="ifxspice")
def install_ifxspice():
    from srd.util.ifxspice import ensure_ifxspice_tool_in_venv

    track_feature("install_ifxspice")
    click.echo("Installing ifxspice...")
    install_dir = ensure_ifxspice_tool_in_venv()
    click.echo(f"... -> {install_dir}")


@cli.group()
def uninstall():
    pass


@uninstall.command(name="simetrix")
def uninstall_simetrix():
    from srd.util.simetrix import SIMETRIX_VENV_TOOL_PATH

    if SIMETRIX_VENV_TOOL_PATH.exists():
        track_feature("uninstall_simetrix")
        click.echo("Uninstalling simetrix...")
        shutil.rmtree(SIMETRIX_VENV_TOOL_PATH)
        click.echo("... done!")
    else:
        click.echo("Simetrix is not installed.")


@uninstall.command(name="ifxspice")
def uninstall_ifxspice():
    from srd.util.ifxspice import IFXSPICE_VENV_TOOL_PATH

    if IFXSPICE_VENV_TOOL_PATH.exists():
        track_feature("uninstall_ifxspice")
        click.echo("Uninstalling ifxspice...")
        shutil.rmtree(IFXSPICE_VENV_TOOL_PATH)
        click.echo("... done!")
    else:
        click.echo("Ifxspice is not installed.")


@cli.group()
def start():
    pass


@start.command(name="simetrix")
def start_simetrix():
    from srd.util.simetrix import start_simetrix

    track_feature("start_simetrix")
    click.echo("Starting simetrix...")
    start_simetrix()


if __name__ == "__main__":
    cli()
