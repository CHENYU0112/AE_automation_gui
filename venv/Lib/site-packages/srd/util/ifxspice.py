from __future__ import annotations

import os
from pathlib import Path

import srd
from srd.util.inicio import download_pacman_pkg, get_pacman_pkg_root

LATEST_IFXSPICE = os.environ.get("LATEST_IFXSPICE_PACMAN_PKG_NAME", "inicio_ifxspice_2024.02.0-2-1-x86_64.pkg.tar.zst")
IFXSPICE_VENV_TOOL_PATH = Path(srd.__file__).parent / "_pacman" / "ifxspice"


def ensure_ifxspice_tool_in_venv() -> Path:
    return download_pacman_pkg(IFXSPICE_VENV_TOOL_PATH, LATEST_IFXSPICE)


def find_ifxspice_and_update_env() -> Path:
    # ENV var might be pre-set by the user or Inicio
    ifxspice_install_path = os.environ.get("TITAN_INSTALL_PATH")
    if ifxspice_install_path is None or not Path(ifxspice_install_path).exists():
        if not IFXSPICE_VENV_TOOL_PATH.exists():
            msg = (
                "IFXSpice not found. Please set the IFXSPICE_INSTALL_PATH environment "
                "variable or download the tool using the cli command `srd install ifxspice`."
            )
            raise OSError(msg)
        ifxspice_install_path = str(get_pacman_pkg_root(IFXSPICE_VENV_TOOL_PATH))

    os.environ["TITAN_INSTALL_PATH"] = ifxspice_install_path
    os.environ["IFXSPICE_VERSION"] = Path(ifxspice_install_path).name

    path_additions = [
        Path(ifxspice_install_path),
        Path(ifxspice_install_path) / "MinGW/bin",
        Path(ifxspice_install_path) / "IFXspice",
    ]
    for item in path_additions:
        item = str(item)
        if item not in os.environ["PATH"]:
            os.environ["PATH"] += ";" + item

    return Path(ifxspice_install_path)


if __name__ == "__main__":
    ensure_ifxspice_tool_in_venv()
    print(find_ifxspice_and_update_env())
